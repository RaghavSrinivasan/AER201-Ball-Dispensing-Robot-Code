

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 10 12:51:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   109                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112  0000                     
   113                           ; Version 2.05
   114                           ; Generated 20/12/2018 GMT
   115                           ; 
   116                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F4620 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataBANK1
   149  00554A                     __pidataBANK1:
   150                           	opt callstack 0
   151                           
   152                           ;initializer for stoa@F1166
   153  00554A  28                 	db	40
   154  00554B  6E                 	db	110
   155  00554C  75                 	db	117
   156  00554D  6C                 	db	108
   157  00554E  6C                 	db	108
   158  00554F  29                 	db	41
   159  005550  00                 	db	0
   160                           
   161                           ;initializer for _ESPdata
   162  005551  01                 	db	1
   163  005552  01                 	db	1
   164                           
   165                           ;initializer for _UART
   166  005553  A4                 	db	low _uart
   167  005554  01                 	db	high _uart
   168                           
   169                           	psect	mediumconst
   170  00FD7A                     __pmediumconst:
   171                           	opt callstack 0
   172  00FD7A  00                 	db	0
   173  00FD7B                     _year:
   174                           	opt callstack 0
   175  00FD7B  00                 	db	0
   176  00FD7C  40                 	db	64
   177  00FD7D  01                 	db	1
   178  00FD7E  04                 	db	4
   179  00FD7F  06                 	db	6
   180  00FD80  02                 	db	2
   181  00FD81  19                 	db	25
   182  00FD82                     __end_of_year:
   183                           	opt callstack 0
   184  00FD82                     _VIOLET:
   185                           	opt callstack 0
   186  00FD82  00D3               	dw	211
   187  00FD84  0094               	dw	148
   188  00FD86                     __end_of_VIOLET:
   189                           	opt callstack 0
   190  00FD86                     _INDIGO:
   191                           	opt callstack 0
   192  00FD86  0082               	dw	130
   193  00FD88  004B               	dw	75
   194  00FD8A                     __end_of_INDIGO:
   195                           	opt callstack 0
   196  00FD8A                     _BLUE:
   197                           	opt callstack 0
   198  00FD8A  00FF               	dw	255
   199  00FD8C  0000               	dw	0
   200  00FD8E                     __end_of_BLUE:
   201                           	opt callstack 0
   202  00FD8E  FF00               	dw	65280
   203  00FD90  0000               	dw	0
   204  00FD92                     __end_of_GREEN:
   205                           	opt callstack 0
   206  00FD92                     _YELLOW:
   207                           	opt callstack 0
   208  00FD92  FF00               	dw	65280
   209  00FD94  00FF               	dw	255
   210  00FD96                     __end_of_YELLOW:
   211                           	opt callstack 0
   212  00FD96                     _ORANGE:
   213                           	opt callstack 0
   214  00FD96  8C00               	dw	35840
   215  00FD98  00FF               	dw	255
   216  00FD9A                     __end_of_ORANGE:
   217                           	opt callstack 0
   218  00FD9A                     _RED:
   219                           	opt callstack 0
   220  00FD9A  0000               	dw	0
   221  00FD9C  00FF               	dw	255
   222  00FD9E                     __end_of_RED:
   223                           	opt callstack 0
   224  00FD9E  FFFF               	dw	65535
   225  00FDA0  00FF               	dw	255
   226  00FDA2                     __end_of_WHITE:
   227                           	opt callstack 0
   228  00FDA2                     _GREY:
   229                           	opt callstack 0
   230  00FDA2  8080               	dw	32896
   231  00FDA4  0080               	dw	128
   232  00FDA6                     __end_of_GREY:
   233                           	opt callstack 0
   234  00FDA6  0000               	dw	0
   235  00FDA8  0000               	dw	0
   236  00FDAA                     __end_of_BLACK:
   237                           	opt callstack 0
   238  00FDAA  C7                 	db	199
   239  00FDAB                     __end_of_INST_VMOFCTR2:
   240                           	opt callstack 0
   241  00FDAB  C5                 	db	197
   242  00FDAC                     __end_of_INST_VMCTR1:
   243                           	opt callstack 0
   244  00FDAC  C4                 	db	196
   245  00FDAD                     __end_of_INST_PWCTR5:
   246                           	opt callstack 0
   247  00FDAD  C3                 	db	195
   248  00FDAE                     __end_of_INST_PWCTR4:
   249                           	opt callstack 0
   250  00FDAE  C2                 	db	194
   251  00FDAF                     __end_of_INST_PWCTR3:
   252                           	opt callstack 0
   253  00FDAF  C1                 	db	193
   254  00FDB0                     __end_of_INST_PWCTR2:
   255                           	opt callstack 0
   256  00FDB0  C0                 	db	192
   257  00FDB1                     __end_of_INST_PWCTR1:
   258                           	opt callstack 0
   259  00FDB1  B4                 	db	180
   260  00FDB2                     __end_of_INST_INVCTR:
   261                           	opt callstack 0
   262  00FDB2  B3                 	db	179
   263  00FDB3                     __end_of_INST_FRMCTR3:
   264                           	opt callstack 0
   265  00FDB3  B2                 	db	178
   266  00FDB4                     __end_of_INST_FRMCTR2:
   267                           	opt callstack 0
   268  00FDB4  B1                 	db	177
   269  00FDB5                     __end_of_INST_FRMCTR1:
   270                           	opt callstack 0
   271  00FDB5  3A                 	db	58
   272  00FDB6                     __end_of_INST_COLMOD:
   273                           	opt callstack 0
   274  00FDB6  39                 	db	57
   275  00FDB7                     __end_of_INST_IDMON:
   276                           	opt callstack 0
   277  00FDB7  38                 	db	56
   278  00FDB8                     __end_of_INST_IDMOFF:
   279                           	opt callstack 0
   280  00FDB8  36                 	db	54
   281  00FDB9                     __end_of_INST_MADCTL:
   282                           	opt callstack 0
   283  00FDB9  35                 	db	53
   284  00FDBA                     __end_of_INST_TEON:
   285                           	opt callstack 0
   286  00FDBA  34                 	db	52
   287  00FDBB                     __end_of_INST_TEOFF:
   288                           	opt callstack 0
   289  00FDBB  30                 	db	48
   290  00FDBC                     __end_of_INST_PTLAR:
   291                           	opt callstack 0
   292  00FDBC  2C                 	db	44
   293  00FDBD                     __end_of_INST_RAMWR:
   294                           	opt callstack 0
   295  00FDBD  2B                 	db	43
   296  00FDBE                     __end_of_INST_RASET:
   297                           	opt callstack 0
   298  00FDBE  2A                 	db	42
   299  00FDBF                     __end_of_INST_CASET:
   300                           	opt callstack 0
   301  00FDBF  29                 	db	41
   302  00FDC0                     __end_of_INST_DISPON:
   303                           	opt callstack 0
   304  00FDC0  28                 	db	40
   305  00FDC1                     __end_of_INST_DISPOFF:
   306                           	opt callstack 0
   307  00FDC1  26                 	db	38
   308  00FDC2                     __end_of_INST_GAMSET:
   309                           	opt callstack 0
   310  00FDC2  21                 	db	33
   311  00FDC3                     __end_of_INST_INVON:
   312                           	opt callstack 0
   313  00FDC3  20                 	db	32
   314  00FDC4                     __end_of_INST_INVOFF:
   315                           	opt callstack 0
   316  00FDC4  13                 	db	19
   317  00FDC5                     __end_of_INST_NORON:
   318                           	opt callstack 0
   319  00FDC5  12                 	db	18
   320  00FDC6                     __end_of_INST_PTLON:
   321                           	opt callstack 0
   322  00FDC6  11                 	db	17
   323  00FDC7                     __end_of_INST_SLPOUT:
   324                           	opt callstack 0
   325  00FDC7  10                 	db	16
   326  00FDC8                     __end_of_INST_SLPIN:
   327                           	opt callstack 0
   328  00FDC8  01                 	db	1
   329  00FDC9                     __end_of_INST_SWRESET:
   330                           	opt callstack 0
   331  00FDC9  00                 	db	0
   332  00FDCA                     __end_of_INST_NOP:
   333                           	opt callstack 0
   334  00FDCA  80                 	db	128
   335  00FDCB                     __end_of_GLCD_SIZE_VERT:
   336                           	opt callstack 0
   337  00FDCB                     _GLCD_ADDRESSABLE_SIZE_VERT:
   338                           	opt callstack 0
   339  00FDCB  A0                 	db	160
   340  00FDCC                     __end_of_GLCD_ADDRESSABLE_SIZE_VERT:
   341                           	opt callstack 0
   342  00FDCC                     _GLCD_ADDRESSABLE_SIZE_HORZ:
   343                           	opt callstack 0
   344  00FDCC  80                 	db	128
   345  00FDCD                     __end_of_GLCD_ADDRESSABLE_SIZE_HORZ:
   346                           	opt callstack 0
   347  00FDCD                     _LCD_LINE1_ADDR:
   348                           	opt callstack 0
   349  00FDCD  00                 	db	0
   350  00FDCE                     __end_of_LCD_LINE1_ADDR:
   351                           	opt callstack 0
   352  00FDCE                     _LCD_SIZE_VERT:
   353                           	opt callstack 0
   354  00FDCE  04                 	db	4
   355  00FDCF                     __end_of_LCD_SIZE_VERT:
   356                           	opt callstack 0
   357  00FDCF                     _LCD_SIZE_HORZ:
   358                           	opt callstack 0
   359  00FDCF  10                 	db	16
   360  00FDD0                     __end_of_LCD_SIZE_HORZ:
   361                           	opt callstack 0
   362  00FDD0  80                 	db	128
   363  00FDD1                     __end_of_GLCD_SIZE_HORZ:
   364                           	opt callstack 0
   365  00FDD1  50                 	db	80
   366  00FDD2                     __end_of_LCD_LINE4_ADDR:
   367                           	opt callstack 0
   368  00FDD2  10                 	db	16
   369  00FDD3                     __end_of_LCD_LINE3_ADDR:
   370                           	opt callstack 0
   371  00FDD3  40                 	db	64
   372  00FDD4                     __end_of_LCD_LINE2_ADDR:
   373                           	opt callstack 0
   374  0000                     _SPBRG	set	4015
   375  0000                     _RCREG	set	4014
   376  0000                     _RCSTAbits	set	4011
   377  0000                     _TXREG	set	4013
   378  0000                     _TXSTAbits	set	4012
   379  0000                     _SSPSTATbits	set	4039
   380  0000                     _TRISDbits	set	3989
   381  0000                     _PIR2bits	set	4001
   382  0000                     _EECON2	set	4007
   383  0000                     _EEDATA	set	4008
   384  0000                     _EEADR	set	4009
   385  0000                     _EEADRH	set	4010
   386  0000                     _EECON1bits	set	4006
   387  0000                     _PORTB	set	3969
   388  0000                     _TMR1L	set	4046
   389  0000                     _INTCON3bits	set	4080
   390  0000                     _ADCON1	set	4033
   391  0000                     _TRISD	set	3989
   392  0000                     _SSPBUF	set	4041
   393  0000                     _SSPCON2bits	set	4037
   394  0000                     _SSPCON1	set	4038
   395  0000                     _SSPADD	set	4040
   396  0000                     _SSPCON1bits	set	4038
   397  0000                     _SSPCON2	set	4037
   398  0000                     _SSPSTAT	set	4039
   399  0000                     _LATD	set	3980
   400  0000                     _LATDbits	set	3980
   401  0000                     _INTCONbits	set	4082
   402  0000                     _TMR0H	set	4055
   403  0000                     _TMR0L	set	4054
   404  0000                     _LATBbits	set	3978
   405  0000                     _TRISBbits	set	3987
   406  0000                     _LATCbits	set	3979
   407  0000                     _TRISCbits	set	3988
   408  0000                     _TRISC7	set	31911
   409  0000                     _TRISC6	set	31910
   410  0000                     _RCIE	set	31981
   411  0000                     _RCIF	set	31989
   412  0000                     _TXIE	set	31980
   413  0000                     _TRMT	set	32097
   414  0000                     _TXIF	set	31988
   415  0000                     _SSPIF	set	31987
   416  0000                     _TMR0IF	set	32658
   417  0000                     _INT1F	set	32640
   418  0000                     _TMR0IE	set	32661
   419  0000                     _PSA	set	32427
   420  0000                     _T0SE	set	32428
   421  0000                     _T0CS	set	32429
   422  0000                     _T08BIT	set	32430
   423  0000                     _TMR0ON	set	32431
   424  00FDD4                     STR_50:
   425  00FDD4  52                 	db	82	;'R'
   426  00FDD5  65                 	db	101	;'e'
   427  00FDD6  63                 	db	99	;'c'
   428  00FDD7  65                 	db	101	;'e'
   429  00FDD8  69                 	db	105	;'i'
   430  00FDD9  76                 	db	118	;'v'
   431  00FDDA  65                 	db	101	;'e'
   432  00FDDB  20                 	db	32
   433  00FDDC  42                 	db	66	;'B'
   434  00FDDD  61                 	db	97	;'a'
   435  00FDDE  6C                 	db	108	;'l'
   436  00FDDF  6C                 	db	108	;'l'
   437  00FDE0  3F                 	db	63	;'?'
   438  00FDE1  3A                 	db	58	;':'
   439  00FDE2  20                 	db	32
   440  00FDE3  25                 	db	37
   441  00FDE4  63                 	db	99	;'c'
   442  00FDE5  00                 	db	0
   443  00FDE6  44                 	db	68	;'D'
   444  00FDE7  65                 	db	101	;'e'
   445  00FDE8  74                 	db	116	;'t'
   446  00FDE9  65                 	db	101	;'e'
   447  00FDEA  63                 	db	99	;'c'
   448  00FDEB  74                 	db	116	;'t'
   449  00FDEC  65                 	db	101	;'e'
   450  00FDED  64                 	db	100	;'d'
   451  00FDEE  20                 	db	32
   452  00FDEF  43                 	db	67	;'C'
   453  00FDF0  61                 	db	97	;'a'
   454  00FDF1  6E                 	db	110	;'n'
   455  00FDF2  69                 	db	105	;'i'
   456  00FDF3  73                 	db	115	;'s'
   457  00FDF4  74                 	db	116	;'t'
   458  00FDF5  65                 	db	101	;'e'
   459  00FDF6  72                 	db	114	;'r'
   460  00FDF7  00                 	db	0
   461  00FDF8                     STR_51:
   462  00FDF8  52                 	db	82	;'R'
   463  00FDF9  65                 	db	101	;'e'
   464  00FDFA  63                 	db	99	;'c'
   465  00FDFB  65                 	db	101	;'e'
   466  00FDFC  69                 	db	105	;'i'
   467  00FDFD  76                 	db	118	;'v'
   468  00FDFE  65                 	db	101	;'e'
   469  00FDFF  20                 	db	32
   470  00FE00  42                 	db	66	;'B'
   471  00FE01  61                 	db	97	;'a'
   472  00FE02  6C                 	db	108	;'l'
   473  00FE03  6C                 	db	108	;'l'
   474  00FE04  3F                 	db	63	;'?'
   475  00FE05  3A                 	db	58	;':'
   476  00FE06  20                 	db	32
   477  00FE07  59                 	db	89	;'Y'
   478  00FE08  00                 	db	0
   479  00FE09                     STR_40:
   480  00FE09  23                 	db	35
   481  00FE0A  20                 	db	32
   482  00FE0B  42                 	db	66	;'B'
   483  00FE0C  61                 	db	97	;'a'
   484  00FE0D  6C                 	db	108	;'l'
   485  00FE0E  6C                 	db	108	;'l'
   486  00FE0F  73                 	db	115	;'s'
   487  00FE10  20                 	db	32
   488  00FE11  47                 	db	71	;'G'
   489  00FE12  69                 	db	105	;'i'
   490  00FE13  76                 	db	118	;'v'
   491  00FE14  65                 	db	101	;'e'
   492  00FE15  6E                 	db	110	;'n'
   493  00FE16  3A                 	db	58	;':'
   494  00FE17  25                 	db	37
   495  00FE18  64                 	db	100	;'d'
   496  00FE19  00                 	db	0
   497  00FE1A                     STR_35:
   498  00FE1A  31                 	db	49	;'1'
   499  00FE1B  2E                 	db	46
   500  00FE1C  4F                 	db	79	;'O'
   501  00FE1D  70                 	db	112	;'p'
   502  00FE1E  65                 	db	101	;'e'
   503  00FE1F  72                 	db	114	;'r'
   504  00FE20  61                 	db	97	;'a'
   505  00FE21  74                 	db	116	;'t'
   506  00FE22  69                 	db	105	;'i'
   507  00FE23  6F                 	db	111	;'o'
   508  00FE24  6E                 	db	110	;'n'
   509  00FE25  20                 	db	32
   510  00FE26  54                 	db	84	;'T'
   511  00FE27  69                 	db	105	;'i'
   512  00FE28  6D                 	db	109	;'m'
   513  00FE29  65                 	db	101	;'e'
   514  00FE2A  00                 	db	0
   515  00FE2B                     STR_54:
   516  00FE2B  44                 	db	68	;'D'
   517  00FE2C  69                 	db	105	;'i'
   518  00FE2D  73                 	db	115	;'s'
   519  00FE2E  74                 	db	116	;'t'
   520  00FE2F  61                 	db	97	;'a'
   521  00FE30  6E                 	db	110	;'n'
   522  00FE31  63                 	db	99	;'c'
   523  00FE32  65                 	db	101	;'e'
   524  00FE33  32                 	db	50	;'2'
   525  00FE34  3A                 	db	58	;':'
   526  00FE35  20                 	db	32
   527  00FE36  25                 	db	37
   528  00FE37  64                 	db	100	;'d'
   529  00FE38  20                 	db	32
   530  00FE39  63                 	db	99	;'c'
   531  00FE3A  6D                 	db	109	;'m'
   532  00FE3B  00                 	db	0
   533  00FE3C                     STR_38:
   534  00FE3C  34                 	db	52	;'4'
   535  00FE3D  2E                 	db	46
   536  00FE3E  43                 	db	67	;'C'
   537  00FE3F  61                 	db	97	;'a'
   538  00FE40  6E                 	db	110	;'n'
   539  00FE41  69                 	db	105	;'i'
   540  00FE42  73                 	db	115	;'s'
   541  00FE43  74                 	db	116	;'t'
   542  00FE44  65                 	db	101	;'e'
   543  00FE45  72                 	db	114	;'r'
   544  00FE46  20                 	db	32
   545  00FE47  44                 	db	68	;'D'
   546  00FE48  61                 	db	97	;'a'
   547  00FE49  74                 	db	116	;'t'
   548  00FE4A  61                 	db	97	;'a'
   549  00FE4B  00                 	db	0
   550  00FE4C                     STR_52:
   551  00FE4C  44                 	db	68	;'D'
   552  00FE4D  69                 	db	105	;'i'
   553  00FE4E  73                 	db	115	;'s'
   554  00FE4F  74                 	db	116	;'t'
   555  00FE50  61                 	db	97	;'a'
   556  00FE51  6E                 	db	110	;'n'
   557  00FE52  63                 	db	99	;'c'
   558  00FE53  65                 	db	101	;'e'
   559  00FE54  3A                 	db	58	;':'
   560  00FE55  20                 	db	32
   561  00FE56  25                 	db	37
   562  00FE57  64                 	db	100	;'d'
   563  00FE58  20                 	db	32
   564  00FE59  63                 	db	99	;'c'
   565  00FE5A  6D                 	db	109	;'m'
   566  00FE5B  00                 	db	0
   567  00FE5C                     STR_36:
   568  00FE5C  32                 	db	50	;'2'
   569  00FE5D  2E                 	db	46
   570  00FE5E  23                 	db	35
   571  00FE5F  20                 	db	32
   572  00FE60  42                 	db	66	;'B'
   573  00FE61  61                 	db	97	;'a'
   574  00FE62  6C                 	db	108	;'l'
   575  00FE63  6C                 	db	108	;'l'
   576  00FE64  73                 	db	115	;'s'
   577  00FE65  20                 	db	32
   578  00FE66  47                 	db	71	;'G'
   579  00FE67  69                 	db	105	;'i'
   580  00FE68  76                 	db	118	;'v'
   581  00FE69  65                 	db	101	;'e'
   582  00FE6A  6E                 	db	110	;'n'
   583  00FE6B  00                 	db	0
   584  00FE6C                     STR_1:
   585  00FE6C  44                 	db	68	;'D'
   586  00FE6D  65                 	db	101	;'e'
   587  00FE6E  70                 	db	112	;'p'
   588  00FE6F  6F                 	db	111	;'o'
   589  00FE70  73                 	db	115	;'s'
   590  00FE71  69                 	db	105	;'i'
   591  00FE72  74                 	db	116	;'t'
   592  00FE73  69                 	db	105	;'i'
   593  00FE74  6E                 	db	110	;'n'
   594  00FE75  67                 	db	103	;'g'
   595  00FE76  20                 	db	32
   596  00FE77  42                 	db	66	;'B'
   597  00FE78  61                 	db	97	;'a'
   598  00FE79  6C                 	db	108	;'l'
   599  00FE7A  6C                 	db	108	;'l'
   600  00FE7B  00                 	db	0
   601  00FE7C                     STR_41:
   602  00FE7C  23                 	db	35
   603  00FE7D  20                 	db	32
   604  00FE7E  43                 	db	67	;'C'
   605  00FE7F  61                 	db	97	;'a'
   606  00FE80  6E                 	db	110	;'n'
   607  00FE81  69                 	db	105	;'i'
   608  00FE82  73                 	db	115	;'s'
   609  00FE83  74                 	db	116	;'t'
   610  00FE84  65                 	db	101	;'e'
   611  00FE85  72                 	db	114	;'r'
   612  00FE86  73                 	db	115	;'s'
   613  00FE87  3A                 	db	58	;':'
   614  00FE88  25                 	db	37
   615  00FE89  64                 	db	100	;'d'
   616  00FE8A  00                 	db	0
   617  00FE8B                     STR_32:
   618  00FE8B  54                 	db	84	;'T'
   619  00FE8C  61                 	db	97	;'a'
   620  00FE8D  73                 	db	115	;'s'
   621  00FE8E  6B                 	db	107	;'k'
   622  00FE8F  20                 	db	32
   623  00FE90  43                 	db	67	;'C'
   624  00FE91  6F                 	db	111	;'o'
   625  00FE92  6D                 	db	109	;'m'
   626  00FE93  70                 	db	112	;'p'
   627  00FE94  6C                 	db	108	;'l'
   628  00FE95  65                 	db	101	;'e'
   629  00FE96  74                 	db	116	;'t'
   630  00FE97  65                 	db	101	;'e'
   631  00FE98  64                 	db	100	;'d'
   632  00FE99  00                 	db	0
   633  00FE9A                     STR_43:
   634  00FE9A  43                 	db	67	;'C'
   635  00FE9B  61                 	db	97	;'a'
   636  00FE9C  6E                 	db	110	;'n'
   637  00FE9D  69                 	db	105	;'i'
   638  00FE9E  73                 	db	115	;'s'
   639  00FE9F  74                 	db	116	;'t'
   640  00FEA0  65                 	db	101	;'e'
   641  00FEA1  72                 	db	114	;'r'
   642  00FEA2  20                 	db	32
   643  00FEA3  74                 	db	116	;'t'
   644  00FEA4  6F                 	db	111	;'o'
   645  00FEA5  20                 	db	32
   646  00FEA6  62                 	db	98	;'b'
   647  00FEA7  65                 	db	101	;'e'
   648  00FEA8  00                 	db	0
   649  00FEA9                     STR_29:
   650  00FEA9  25                 	db	37
   651  00FEAA  30                 	db	48	;'0'
   652  00FEAB  32                 	db	50	;'2'
   653  00FEAC  78                 	db	120	;'x'
   654  00FEAD  2F                 	db	47
   655  00FEAE  25                 	db	37
   656  00FEAF  30                 	db	48	;'0'
   657  00FEB0  32                 	db	50	;'2'
   658  00FEB1  78                 	db	120	;'x'
   659  00FEB2  2F                 	db	47
   660  00FEB3  25                 	db	37
   661  00FEB4  30                 	db	48	;'0'
   662  00FEB5  32                 	db	50	;'2'
   663  00FEB6  78                 	db	120	;'x'
   664  00FEB7  00                 	db	0
   665  00FEB8                     STR_30:
   666  00FEB8  25                 	db	37
   667  00FEB9  30                 	db	48	;'0'
   668  00FEBA  32                 	db	50	;'2'
   669  00FEBB  78                 	db	120	;'x'
   670  00FEBC  3A                 	db	58	;':'
   671  00FEBD  25                 	db	37
   672  00FEBE  30                 	db	48	;'0'
   673  00FEBF  32                 	db	50	;'2'
   674  00FEC0  78                 	db	120	;'x'
   675  00FEC1  3A                 	db	58	;':'
   676  00FEC2  25                 	db	37
   677  00FEC3  30                 	db	48	;'0'
   678  00FEC4  32                 	db	50	;'2'
   679  00FEC5  78                 	db	120	;'x'
   680  00FEC6  00                 	db	0
   681  00FEC7                     STR_45:
   682  00FEC7  45                 	db	69	;'E'
   683  00FEC8  52                 	db	82	;'R'
   684  00FEC9  52                 	db	82	;'R'
   685  00FECA  4F                 	db	79	;'O'
   686  00FECB  52                 	db	82	;'R'
   687  00FECC  20                 	db	32
   688  00FECD  49                 	db	73	;'I'
   689  00FECE  4E                 	db	78	;'N'
   690  00FECF  56                 	db	86	;'V'
   691  00FED0  41                 	db	65	;'A'
   692  00FED1  4C                 	db	76	;'L'
   693  00FED2  49                 	db	73	;'I'
   694  00FED3  44                 	db	68	;'D'
   695  00FED4  00                 	db	0
   696  00FED5                     STR_39:
   697  00FED5  54                 	db	84	;'T'
   698  00FED6  69                 	db	105	;'i'
   699  00FED7  6D                 	db	109	;'m'
   700  00FED8  65                 	db	101	;'e'
   701  00FED9  3A                 	db	58	;':'
   702  00FEDA  20                 	db	32
   703  00FEDB  25                 	db	37
   704  00FEDC  33                 	db	51	;'3'
   705  00FEDD  2E                 	db	46
   706  00FEDE  32                 	db	50	;'2'
   707  00FEDF  66                 	db	102	;'f'
   708  00FEE0  20                 	db	32
   709  00FEE1  73                 	db	115	;'s'
   710  00FEE2  00                 	db	0
   711  00FEE3                     STR_37:
   712  00FEE3  33                 	db	51	;'3'
   713  00FEE4  2E                 	db	46
   714  00FEE5  23                 	db	35
   715  00FEE6  20                 	db	32
   716  00FEE7  43                 	db	67	;'C'
   717  00FEE8  61                 	db	97	;'a'
   718  00FEE9  6E                 	db	110	;'n'
   719  00FEEA  69                 	db	105	;'i'
   720  00FEEB  73                 	db	115	;'s'
   721  00FEEC  74                 	db	116	;'t'
   722  00FEED  65                 	db	101	;'e'
   723  00FEEE  72                 	db	114	;'r'
   724  00FEEF  73                 	db	115	;'s'
   725  00FEF0  00                 	db	0
   726  00FEF1                     STR_27:
   727  00FEF1  50                 	db	80	;'P'
   728  00FEF2  72                 	db	114	;'r'
   729  00FEF3  65                 	db	101	;'e'
   730  00FEF4  73                 	db	115	;'s'
   731  00FEF5  73                 	db	115	;'s'
   732  00FEF6  20                 	db	32
   733  00FEF7  41                 	db	65	;'A'
   734  00FEF8  6E                 	db	110	;'n'
   735  00FEF9  79                 	db	121	;'y'
   736  00FEFA  20                 	db	32
   737  00FEFB  4B                 	db	75	;'K'
   738  00FEFC  65                 	db	101	;'e'
   739  00FEFD  79                 	db	121	;'y'
   740  00FEFE  00                 	db	0
   741  00FEFF  31                 	db	49	;'1'
   742  00FF00  3A                 	db	58	;':'
   743  00FF01  20                 	db	32
   744  00FF02  25                 	db	37
   745  00FF03  64                 	db	100	;'d'
   746  00FF04  2C                 	db	44
   747  00FF05  20                 	db	32
   748  00FF06  32                 	db	50	;'2'
   749  00FF07  3A                 	db	58	;':'
   750  00FF08  20                 	db	32
   751  00FF09  25                 	db	37
   752  00FF0A  64                 	db	100	;'d'
   753  00FF0B  00                 	db	0
   754  00FF0C  63                 	db	99	;'c'
   755  00FF0D  6F                 	db	111	;'o'
   756  00FF0E  75                 	db	117	;'u'
   757  00FF0F  6E                 	db	110	;'n'
   758  00FF10  74                 	db	116	;'t'
   759  00FF11  5B                 	db	91	;'['
   760  00FF12  30                 	db	48	;'0'
   761  00FF13  5D                 	db	93	;']'
   762  00FF14  3A                 	db	58	;':'
   763  00FF15  20                 	db	32
   764  00FF16  25                 	db	37
   765  00FF17  64                 	db	100	;'d'
   766  00FF18  00                 	db	0
   767  00FF19  63                 	db	99	;'c'
   768  00FF1A  6F                 	db	111	;'o'
   769  00FF1B  75                 	db	117	;'u'
   770  00FF1C  6E                 	db	110	;'n'
   771  00FF1D  74                 	db	116	;'t'
   772  00FF1E  5B                 	db	91	;'['
   773  00FF1F  31                 	db	49	;'1'
   774  00FF20  5D                 	db	93	;']'
   775  00FF21  3A                 	db	58	;':'
   776  00FF22  20                 	db	32
   777  00FF23  25                 	db	37
   778  00FF24  64                 	db	100	;'d'
   779  00FF25  00                 	db	0
   780  00FF26                     STR_46:
   781  00FF26  43                 	db	67	;'C'
   782  00FF27  61                 	db	97	;'a'
   783  00FF28  6E                 	db	110	;'n'
   784  00FF29  69                 	db	105	;'i'
   785  00FF2A  73                 	db	115	;'s'
   786  00FF2B  74                 	db	116	;'t'
   787  00FF2C  65                 	db	101	;'e'
   788  00FF2D  72                 	db	114	;'r'
   789  00FF2E  3A                 	db	58	;':'
   790  00FF2F  20                 	db	32
   791  00FF30  25                 	db	37
   792  00FF31  64                 	db	100	;'d'
   793  00FF32  00                 	db	0
   794  00FF33                     STR_49:
   795  00FF33  53                 	db	83	;'S'
   796  00FF34  74                 	db	116	;'t'
   797  00FF35  61                 	db	97	;'a'
   798  00FF36  74                 	db	116	;'t'
   799  00FF37  75                 	db	117	;'u'
   800  00FF38  73                 	db	115	;'s'
   801  00FF39  3A                 	db	58	;':'
   802  00FF3A  20                 	db	32
   803  00FF3B  46                 	db	70	;'F'
   804  00FF3C  75                 	db	117	;'u'
   805  00FF3D  6C                 	db	108	;'l'
   806  00FF3E  6C                 	db	108	;'l'
   807  00FF3F  00                 	db	0
   808  00FF40  46                 	db	70	;'F'
   809  00FF41  72                 	db	114	;'r'
   810  00FF42  6F                 	db	111	;'o'
   811  00FF43  6E                 	db	110	;'n'
   812  00FF44  74                 	db	116	;'t'
   813  00FF45  20                 	db	32
   814  00FF46  6F                 	db	111	;'o'
   815  00FF47  66                 	db	102	;'f'
   816  00FF48  20                 	db	32
   817  00FF49  43                 	db	67	;'C'
   818  00FF4A  61                 	db	97	;'a'
   819  00FF4B  6E                 	db	110	;'n'
   820  00FF4C  00                 	db	0
   821  00FF4D                     STR_42:
   822  00FF4D  50                 	db	80	;'P'
   823  00FF4E  72                 	db	114	;'r'
   824  00FF4F  65                 	db	101	;'e'
   825  00FF50  73                 	db	115	;'s'
   826  00FF51  73                 	db	115	;'s'
   827  00FF52  20                 	db	32
   828  00FF53  23                 	db	35
   829  00FF54  20                 	db	32
   830  00FF55  6F                 	db	111	;'o'
   831  00FF56  66                 	db	102	;'f'
   832  00FF57  20                 	db	32
   833  00FF58  00                 	db	0
   834  00FF59                     STR_34:
   835  00FF59  54                 	db	84	;'T'
   836  00FF5A  6F                 	db	111	;'o'
   837  00FF5B  20                 	db	32
   838  00FF5C  43                 	db	67	;'C'
   839  00FF5D  6F                 	db	111	;'o'
   840  00FF5E  6E                 	db	110	;'n'
   841  00FF5F  74                 	db	116	;'t'
   842  00FF60  69                 	db	105	;'i'
   843  00FF61  6E                 	db	110	;'n'
   844  00FF62  75                 	db	117	;'u'
   845  00FF63  65                 	db	101	;'e'
   846  00FF64  00                 	db	0
   847  00FF65                     STR_9:
   848  00FF65  44                 	db	68	;'D'
   849  00FF66  69                 	db	105	;'i'
   850  00FF67  67                 	db	103	;'g'
   851  00FF68  69                 	db	105	;'i'
   852  00FF69  74                 	db	116	;'t'
   853  00FF6A  61                 	db	97	;'a'
   854  00FF6B  6C                 	db	108	;'l'
   855  00FF6C  3A                 	db	58	;':'
   856  00FF6D  20                 	db	32
   857  00FF6E  25                 	db	37
   858  00FF6F  64                 	db	100	;'d'
   859  00FF70  00                 	db	0
   860  00FF71                     STR_10:
   861  00FF71  44                 	db	68	;'D'
   862  00FF72  69                 	db	105	;'i'
   863  00FF73  73                 	db	115	;'s'
   864  00FF74  74                 	db	116	;'t'
   865  00FF75  31                 	db	49	;'1'
   866  00FF76  3A                 	db	58	;':'
   867  00FF77  20                 	db	32
   868  00FF78  25                 	db	37
   869  00FF79  2E                 	db	46
   870  00FF7A  32                 	db	50	;'2'
   871  00FF7B  66                 	db	102	;'f'
   872  00FF7C  00                 	db	0
   873  00FF7D                     STR_11:
   874  00FF7D  44                 	db	68	;'D'
   875  00FF7E  69                 	db	105	;'i'
   876  00FF7F  73                 	db	115	;'s'
   877  00FF80  74                 	db	116	;'t'
   878  00FF81  32                 	db	50	;'2'
   879  00FF82  3A                 	db	58	;':'
   880  00FF83  20                 	db	32
   881  00FF84  25                 	db	37
   882  00FF85  2E                 	db	46
   883  00FF86  32                 	db	50	;'2'
   884  00FF87  66                 	db	102	;'f'
   885  00FF88  00                 	db	0
   886  00FF89                     STR_47:
   887  00FF89  53                 	db	83	;'S'
   888  00FF8A  74                 	db	116	;'t'
   889  00FF8B  61                 	db	97	;'a'
   890  00FF8C  74                 	db	116	;'t'
   891  00FF8D  75                 	db	117	;'u'
   892  00FF8E  73                 	db	115	;'s'
   893  00FF8F  3A                 	db	58	;':'
   894  00FF90  20                 	db	32
   895  00FF91  25                 	db	37
   896  00FF92  73                 	db	115	;'s'
   897  00FF93  00                 	db	0
   898  00FF94                     STR_15:
   899  00FF94  44                 	db	68	;'D'
   900  00FF95  69                 	db	105	;'i'
   901  00FF96  73                 	db	115	;'s'
   902  00FF97  74                 	db	116	;'t'
   903  00FF98  31                 	db	49	;'1'
   904  00FF99  3A                 	db	58	;':'
   905  00FF9A  20                 	db	32
   906  00FF9B  25                 	db	37
   907  00FF9C  64                 	db	100	;'d'
   908  00FF9D  00                 	db	0
   909  00FF9E                     STR_16:
   910  00FF9E  44                 	db	68	;'D'
   911  00FF9F  69                 	db	105	;'i'
   912  00FFA0  73                 	db	115	;'s'
   913  00FFA1  74                 	db	116	;'t'
   914  00FFA2  32                 	db	50	;'2'
   915  00FFA3  3A                 	db	58	;':'
   916  00FFA4  20                 	db	32
   917  00FFA5  25                 	db	37
   918  00FFA6  64                 	db	100	;'d'
   919  00FFA7  00                 	db	0
   920  00FFA8  31                 	db	49	;'1'
   921  00FFA9  3A                 	db	58	;':'
   922  00FFAA  25                 	db	37
   923  00FFAB  64                 	db	100	;'d'
   924  00FFAC  20                 	db	32
   925  00FFAD  32                 	db	50	;'2'
   926  00FFAE  3A                 	db	58	;':'
   927  00FFAF  25                 	db	37
   928  00FFB0  64                 	db	100	;'d'
   929  00FFB1  00                 	db	0
   930  00FFB2  33                 	db	51	;'3'
   931  00FFB3  3A                 	db	58	;':'
   932  00FFB4  25                 	db	37
   933  00FFB5  64                 	db	100	;'d'
   934  00FFB6  20                 	db	32
   935  00FFB7  34                 	db	52	;'4'
   936  00FFB8  3A                 	db	58	;':'
   937  00FFB9  25                 	db	37
   938  00FFBA  64                 	db	100	;'d'
   939  00FFBB  00                 	db	0
   940  00FFBC                     STR_44:
   941  00FFBC  53                 	db	83	;'S'
   942  00FFBD  65                 	db	101	;'e'
   943  00FFBE  6C                 	db	108	;'l'
   944  00FFBF  65                 	db	101	;'e'
   945  00FFC0  63                 	db	99	;'c'
   946  00FFC1  74                 	db	116	;'t'
   947  00FFC2  65                 	db	101	;'e'
   948  00FFC3  64                 	db	100	;'d'
   949  00FFC4  00                 	db	0
   950  00FFC5                     STR_28:
   951  00FFC5  54                 	db	84	;'T'
   952  00FFC6  6F                 	db	111	;'o'
   953  00FFC7  20                 	db	32
   954  00FFC8  42                 	db	66	;'B'
   955  00FFC9  65                 	db	101	;'e'
   956  00FFCA  67                 	db	103	;'g'
   957  00FFCB  69                 	db	105	;'i'
   958  00FFCC  6E                 	db	110	;'n'
   959  00FFCD  00                 	db	0
   960  00FFCE                     STR_31:
   961  00FFCE  45                 	db	69	;'E'
   962  00FFCF  72                 	db	114	;'r'
   963  00FFD0  72                 	db	114	;'r'
   964  00FFD1  6F                 	db	111	;'o'
   965  00FFD2  72                 	db	114	;'r'
   966  00FFD3  00                 	db	0
   967  00FFD4                     STR_48:
   968  00FFD4  45                 	db	69	;'E'
   969  00FFD5  6D                 	db	109	;'m'
   970  00FFD6  70                 	db	112	;'p'
   971  00FFD7  74                 	db	116	;'t'
   972  00FFD8  79                 	db	121	;'y'
   973  00FFD9  00                 	db	0
   974  00FFDA  35                 	db	53	;'5'
   975  00FFDB  3A                 	db	58	;':'
   976  00FFDC  25                 	db	37
   977  00FFDD  64                 	db	100	;'d'
   978  00FFDE  00                 	db	0
   979  00FFDF  44                 	db	68	;'D'
   980  00FFE0  3A                 	db	58	;':'
   981  00FFE1  25                 	db	37
   982  00FFE2  64                 	db	100	;'d'
   983  00FFE3  00                 	db	0
   984  00FFE4  42                 	db	66	;'B'
   985  00FFE5  61                 	db	97	;'a'
   986  00FFE6  63                 	db	99	;'c'
   987  00FFE7  6B                 	db	107	;'k'
   988  00FFE8  00                 	db	0
   989  00FFE9                     STR_59:
   990  00FFE9  49                 	db	73	;'I'
   991  00FFEA  4E                 	db	78	;'N'
   992  00FFEB  46                 	db	70	;'F'
   993  00FFEC  00                 	db	0
   994  00FFED                     STR_63:
   995  00FFED  4E                 	db	78	;'N'
   996  00FFEE  41                 	db	65	;'A'
   997  00FFEF  4E                 	db	78	;'N'
   998  00FFF0  00                 	db	0
   999  00FFF1                     STR_60:
  1000  00FFF1  69                 	db	105	;'i'
  1001  00FFF2  6E                 	db	110	;'n'
  1002  00FFF3  66                 	db	102	;'f'
  1003  00FFF4  00                 	db	0
  1004  00FFF5                     STR_64:
  1005  00FFF5  6E                 	db	110	;'n'
  1006  00FFF6  61                 	db	97	;'a'
  1007  00FFF7  6E                 	db	110	;'n'
  1008  00FFF8  00                 	db	0
  1009  00FFF9                     STR_67:
  1010  00FFF9  6C                 	db	108	;'l'
  1011  00FFFA  66                 	db	102	;'f'
  1012  00FFFB  00                 	db	0
  1013  00FFFC  48                 	db	72	;'H'
  1014  00FFFD  49                 	db	73	;'I'
  1015  00FFFE  00                 	db	0
  1016  0000                     
  1017                           ; #config settings
  1018  00FFFF  00                 	db	0	; dummy byte at the end
  1019  0000                     
  1020                           	psect	cinit
  1021  005122                     __pcinit:
  1022                           	opt callstack 0
  1023  005122                     start_initialization:
  1024                           	opt callstack 0
  1025  005122                     __initialization:
  1026                           	opt callstack 0
  1027                           
  1028                           ; Initialize objects allocated to BANK1 (11 bytes)
  1029                           ; load TBLPTR registers with __pidataBANK1
  1030  005122  0E4A               	movlw	low __pidataBANK1
  1031  005124  6EF6               	movwf	tblptrl,c
  1032  005126  0E55               	movlw	high __pidataBANK1
  1033  005128  6EF7               	movwf	tblptrh,c
  1034  00512A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1035  00512C  6EF8               	movwf	tblptru,c
  1036  00512E  EE01  F0F2         	lfsr	0,__pdataBANK1
  1037  005132  EE10 F00B          	lfsr	1,11
  1038  005136                     copy_data0:
  1039  005136  0009               	tblrd		*+
  1040  005138  CFF5 FFEE          	movff	tablat,postinc0
  1041  00513C  50E5               	movf	postdec1,w,c
  1042  00513E  50E1               	movf	fsr1l,w,c
  1043  005140  E1FA               	bnz	copy_data0
  1044                           
  1045                           ; Clear objects allocated to BANK2 (80 bytes)
  1046  005142  EE02  F000         	lfsr	0,__pbssBANK2
  1047  005146  0E50               	movlw	80
  1048  005148                     clear_0:
  1049  005148  6AEE               	clrf	postinc0,c
  1050  00514A  06E8               	decf	wreg,f,c
  1051  00514C  E1FD               	bnz	clear_0
  1052                           
  1053                           ; Clear objects allocated to BANK1 (176 bytes)
  1054  00514E  EE01  F000         	lfsr	0,__pbssBANK1
  1055  005152  0EB0               	movlw	176
  1056  005154                     clear_1:
  1057  005154  6AEE               	clrf	postinc0,c
  1058  005156  06E8               	decf	wreg,f,c
  1059  005158  E1FD               	bnz	clear_1
  1060  00515A                     end_of_initialization:
  1061                           	opt callstack 0
  1062  00515A                     __end_of__initialization:
  1063                           	opt callstack 0
  1064  00515A  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1065  00515C  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1066  00515E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1067  005160  6EF8               	movwf	tblptru,c
  1068  005162  0100               	movlb	0
  1069  005164  EF88  F018         	goto	_main	;jump to C main() function
  1070                           
  1071                           	psect	bssBANK1
  1072  000100                     __pbssBANK1:
  1073                           	opt callstack 0
  1074  000100                     _cans:
  1075                           	opt callstack 0
  1076  000100                     	ds	90
  1077  00015A                     floorf@F524:
  1078                           	opt callstack 0
  1079  00015A                     	ds	4
  1080  00015E                     ___fpclassifyf@F463:
  1081                           	opt callstack 0
  1082  00015E                     	ds	4
  1083  000162                     _timeCount:
  1084                           	opt callstack 0
  1085  000162                     	ds	4
  1086  000166                     _analog4Ambient:
  1087                           	opt callstack 0
  1088  000166                     	ds	4
  1089  00016A                     _analog3Ambient:
  1090                           	opt callstack 0
  1091  00016A                     	ds	4
  1092  00016E                     _analog2Ambient:
  1093                           	opt callstack 0
  1094  00016E                     	ds	4
  1095  000172                     _analog1Ambient:
  1096                           	opt callstack 0
  1097  000172                     	ds	4
  1098  000176                     _forwardDist:
  1099                           	opt callstack 0
  1100  000176                     	ds	4
  1101  00017A                     _suspendedDist:
  1102                           	opt callstack 0
  1103  00017A                     	ds	4
  1104  00017E                     _lateralDist:
  1105                           	opt callstack 0
  1106  00017E                     	ds	4
  1107  000182                     _nout:
  1108                           	opt callstack 0
  1109  000182                     	ds	2
  1110  000184                     _width:
  1111                           	opt callstack 0
  1112  000184                     	ds	2
  1113  000186                     _prec:
  1114                           	opt callstack 0
  1115  000186                     	ds	2
  1116  000188                     _flags:
  1117                           	opt callstack 0
  1118  000188                     	ds	2
  1119  00018A                     _numBalls:
  1120                           	opt callstack 0
  1121  00018A                     	ds	2
  1122  00018C                     _numCans:
  1123                           	opt callstack 0
  1124  00018C                     	ds	2
  1125  00018E                     _canID:
  1126                           	opt callstack 0
  1127  00018E                     	ds	2
  1128  000190                     _MADCTLbits:
  1129                           	opt callstack 0
  1130  000190                     	ds	1
  1131  000191                     _key:
  1132                           	opt callstack 0
  1133  000191                     	ds	1
  1134  000192                     _key_pressed:
  1135                           	opt callstack 0
  1136  000192                     	ds	1
  1137  000193                     _UARTinterruptState:
  1138                           	opt callstack 0
  1139  000193                     	ds	1
  1140  000194                     _arr_dataRX:
  1141                           	opt callstack 0
  1142  000194                     	ds	16
  1143  0001A4                     _uart:
  1144                           	opt callstack 0
  1145  0001A4                     	ds	12
  1146                           
  1147                           	psect	dataBANK1
  1148  0001F2                     __pdataBANK1:
  1149                           	opt callstack 0
  1150  0001F2                     stoa@F1166:
  1151                           	opt callstack 0
  1152  0001F2                     	ds	7
  1153  0001F9                     _ESPdata:
  1154                           	opt callstack 0
  1155  0001F9                     	ds	2
  1156  0001FB                     _UART:
  1157                           	opt callstack 0
  1158  0001FB                     	ds	2
  1159                           
  1160                           	psect	bssBANK2
  1161  000200                     __pbssBANK2:
  1162                           	opt callstack 0
  1163  000200                     _dbuf:
  1164                           	opt callstack 0
  1165  000200                     	ds	80
  1166                           
  1167                           	psect	cstackBANK1
  1168  0001B0                     __pcstackBANK1:
  1169                           	opt callstack 0
  1170  0001B0                     testTurn@newCount:
  1171                           	opt callstack 0
  1172  0001B0                     setForward@newCount:
  1173                           	opt callstack 0
  1174  0001B0                     setBackward@newCount:
  1175                           	opt callstack 0
  1176  0001B0                     setRight@newCount:
  1177                           	opt callstack 0
  1178  0001B0                     canisterDataScreen@dist:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x0
  1182  0001B0                     	ds	2
  1183  0001B2                     testTurn@shaftCount2:
  1184                           	opt callstack 0
  1185  0001B2                     setForward@shaftCount2:
  1186                           	opt callstack 0
  1187  0001B2                     setBackward@shaftCount2:
  1188                           	opt callstack 0
  1189  0001B2                     setRight@shaftCount2:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x2
  1193  0001B2                     	ds	2
  1194  0001B4                     testTurn@shaftCount:
  1195                           	opt callstack 0
  1196  0001B4                     setForward@shaftCount:
  1197                           	opt callstack 0
  1198  0001B4                     setBackward@shaftCount:
  1199                           	opt callstack 0
  1200  0001B4                     setRight@shaftCount:
  1201                           	opt callstack 0
  1202  0001B4                     _canisterDataScreen$3054:
  1203                           	opt callstack 0
  1204  0001B4                     buildEndScreen@can:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 9 bytes @ 0x4
  1208  0001B4                     	ds	2
  1209  0001B6                     detectCanisterTurned@curDist:
  1210                           	opt callstack 0
  1211  0001B6                     canisterDataScreen@can:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 9 bytes @ 0x6
  1215  0001B6                     	ds	4
  1216  0001BA                     detectCanister@right:
  1217                           	opt callstack 0
  1218  0001BA                     detectCanisterTurned@dist1:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0xA
  1222  0001BA                     	ds	1
  1223  0001BB                     detectCanister@dist1:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0xB
  1227  0001BB                     	ds	1
  1228  0001BC                     detectCanisterTurned@prevCan:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 9 bytes @ 0xC
  1232  0001BC                     	ds	1
  1233  0001BD                     detectCanister@prevCan:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 9 bytes @ 0xD
  1237  0001BD                     	ds	4
  1238  0001C1                     initMenu@ballGiven:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x11
  1242  0001C1                     	ds	2
  1243  0001C3                     initMenu@canisters:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x13
  1247  0001C3                     	ds	2
  1248  0001C5                     initMenu@id:
  1249                           	opt callstack 0
  1250  0001C5                     detectCanisterTurned@prevDist:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x15
  1254  0001C5                     	ds	1
  1255  0001C6                     detectCanister@oldLocation:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x16
  1259  0001C6                     	ds	1
  1260  0001C7                     initMenu@curr:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x17
  1264  0001C7                     	ds	2
  1265  0001C9                     detectCanisterTurned@success:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x19
  1269  0001C9                     	ds	1
  1270  0001CA                     detectCanister@success:
  1271                           	opt callstack 0
  1272  0001CA                     detectCanisterTurned@dist4:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x1A
  1276  0001CA                     	ds	1
  1277  0001CB                     detectCanister@dist4:
  1278                           	opt callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x1B
  1281  0001CB                     	ds	1
  1282  0001CC                     detectCanisterTurned@dist2:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x1C
  1286  0001CC                     	ds	1
  1287  0001CD                     detectCanister@facing:
  1288                           	opt callstack 0
  1289                           
  1290                           ; 1 bytes @ 0x1D
  1291  0001CD                     	ds	1
  1292  0001CE                     detectCanisterTurned@state:
  1293                           	opt callstack 0
  1294  0001CE                     detectCanister@location:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x1E
  1298  0001CE                     	ds	2
  1299  0001D0                     detectCanisterTurned@status:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x20
  1303  0001D0                     	ds	1
  1304  0001D1                     detectCanisterTurned@deposited:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 1 bytes @ 0x21
  1308  0001D1                     	ds	1
  1309  0001D2                     detectCanister@prevID:
  1310                           	opt callstack 0
  1311  0001D2                     detectCanisterTurned@dist3:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x22
  1315  0001D2                     	ds	2
  1316  0001D4                     detectCanister@status:
  1317                           	opt callstack 0
  1318  0001D4                     detectCanisterTurned@can:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 9 bytes @ 0x24
  1322  0001D4                     	ds	1
  1323  0001D5                     detectCanister@deposited:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 1 bytes @ 0x25
  1327  0001D5                     	ds	1
  1328  0001D6                     detectCanister@dist2:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x26
  1332  0001D6                     	ds	2
  1333  0001D8                     detectCanister@state:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x28
  1337  0001D8                     	ds	2
  1338  0001DA                     detectCanister@dist3:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x2A
  1342  0001DA                     	ds	2
  1343  0001DC                     ??_testDrive:
  1344                           
  1345                           ; 1 bytes @ 0x2C
  1346  0001DC                     	ds	1
  1347  0001DD                     ??_testDrive2:
  1348                           
  1349                           ; 1 bytes @ 0x2D
  1350  0001DD                     	ds	2
  1351  0001DF                     testDrive@shaftCount2:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x2F
  1355  0001DF                     	ds	1
  1356  0001E0                     testDrive2@shaftCount2:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x30
  1360  0001E0                     	ds	1
  1361  0001E1                     testDrive@shaftCount:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x31
  1365  0001E1                     	ds	1
  1366  0001E2                     testDrive2@shaftCount:
  1367                           	opt callstack 0
  1368                           
  1369                           ; 2 bytes @ 0x32
  1370  0001E2                     	ds	1
  1371  0001E3                     testDrive@newDist:
  1372                           	opt callstack 0
  1373                           
  1374                           ; 4 bytes @ 0x33
  1375  0001E3                     	ds	1
  1376  0001E4                     testDrive2@newDist:
  1377                           	opt callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x34
  1380  0001E4                     	ds	3
  1381  0001E7                     testDrive@dist:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 4 bytes @ 0x37
  1385  0001E7                     	ds	1
  1386  0001E8                     testDrive2@dist:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x38
  1390  0001E8                     	ds	4
  1391  0001EC                     ??_main:
  1392                           
  1393                           ; 1 bytes @ 0x3C
  1394  0001EC                     	ds	2
  1395  0001EE                     main@newCount:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x3E
  1399  0001EE                     	ds	3
  1400  0001F1                     main@finished:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 1 bytes @ 0x41
  1404  0001F1                     	ds	1
  1405                           
  1406                           	psect	cstackBANK0
  1407  000080                     __pcstackBANK0:
  1408                           	opt callstack 0
  1409  000080                     efgtoa@ou:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 4 bytes @ 0x0
  1413  000080                     	ds	4
  1414  000084                     _efgtoa$2058:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x4
  1418  000084                     	ds	2
  1419  000086                     _efgtoa$2059:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x6
  1423  000086                     	ds	2
  1424  000088                     _efgtoa$2063:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x8
  1428  000088                     	ds	2
  1429  00008A                     _efgtoa$2067:
  1430                           	opt callstack 0
  1431                           
  1432                           ; 2 bytes @ 0xA
  1433  00008A                     	ds	2
  1434  00008C                     _efgtoa$2068:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 2 bytes @ 0xC
  1438  00008C                     	ds	2
  1439  00008E                     _efgtoa$2069:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 2 bytes @ 0xE
  1443  00008E                     	ds	2
  1444  000090                     efgtoa@t:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x10
  1448  000090                     	ds	2
  1449  000092                     efgtoa@pp:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x12
  1453  000092                     	ds	2
  1454  000094                     efgtoa@m:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x14
  1458  000094                     	ds	2
  1459  000096                     efgtoa@ne:
  1460                           	opt callstack 0
  1461                           
  1462                           ; 2 bytes @ 0x16
  1463  000096                     	ds	2
  1464  000098                     efgtoa@d:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x18
  1468  000098                     	ds	2
  1469  00009A                     efgtoa@sign:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x1A
  1473  00009A                     	ds	2
  1474  00009C                     efgtoa@p:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x1C
  1478  00009C                     	ds	2
  1479  00009E                     efgtoa@nmode:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 1 bytes @ 0x1E
  1483  00009E                     	ds	1
  1484  00009F                     efgtoa@w:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x1F
  1488  00009F                     	ds	2
  1489  0000A1                     efgtoa@mode:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x21
  1493  0000A1                     	ds	1
  1494  0000A2                     efgtoa@h:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 4 bytes @ 0x22
  1498  0000A2                     	ds	4
  1499  0000A6                     efgtoa@l:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 4 bytes @ 0x26
  1503  0000A6                     	ds	4
  1504  0000AA                     efgtoa@i:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x2A
  1508  0000AA                     	ds	2
  1509  0000AC                     efgtoa@g:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x2C
  1513  0000AC                     	ds	4
  1514  0000B0                     efgtoa@e:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x30
  1518  0000B0                     	ds	2
  1519  0000B2                     efgtoa@n:
  1520                           	opt callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x32
  1523  0000B2                     	ds	2
  1524  0000B4                     efgtoa@u:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 4 bytes @ 0x34
  1528  0000B4                     	ds	4
  1529  0000B8                     ?_vfpfcnvrt:
  1530                           	opt callstack 0
  1531  0000B8                     vfpfcnvrt@fp:
  1532                           	opt callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x38
  1535  0000B8                     	ds	2
  1536  0000BA                     vfpfcnvrt@fmt:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x3A
  1540  0000BA                     	ds	2
  1541  0000BC                     vfpfcnvrt@ap:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x3C
  1545  0000BC                     	ds	2
  1546  0000BE                     ??_vfpfcnvrt:
  1547                           
  1548                           ; 1 bytes @ 0x3E
  1549  0000BE                     	ds	4
  1550  0000C2                     vfpfcnvrt@ll:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 8 bytes @ 0x42
  1554  0000C2                     	ds	8
  1555  0000CA                     vfpfcnvrt@llu:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 8 bytes @ 0x4A
  1559  0000CA                     	ds	8
  1560  0000D2                     vfpfcnvrt@cp:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x52
  1564  0000D2                     	ds	2
  1565  0000D4                     vfpfcnvrt@done:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x54
  1569  0000D4                     	ds	2
  1570  0000D6                     _vfpfcnvrt$2104:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x56
  1574  0000D6                     	ds	2
  1575  0000D8                     _vfpfcnvrt$2105:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x58
  1579  0000D8                     	ds	2
  1580  0000DA                     _vfpfcnvrt$2111:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x5A
  1584  0000DA                     	ds	2
  1585  0000DC                     vfpfcnvrt@f:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 4 bytes @ 0x5C
  1589  0000DC                     	ds	4
  1590  0000E0                     vfpfcnvrt@ct:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 3 bytes @ 0x60
  1594  0000E0                     	ds	3
  1595  0000E3                     vfpfcnvrt@c:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 1 bytes @ 0x63
  1599  0000E3                     	ds	1
  1600  0000E4                     ?_vfprintf:
  1601                           	opt callstack 0
  1602  0000E4                     vfprintf@fp:
  1603                           	opt callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x64
  1606  0000E4                     	ds	2
  1607  0000E6                     vfprintf@fmt:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 2 bytes @ 0x66
  1611  0000E6                     	ds	2
  1612  0000E8                     vfprintf@ap:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x68
  1616  0000E8                     	ds	2
  1617  0000EA                     ?_printf:
  1618                           	opt callstack 0
  1619  0000EA                     printf@fmt:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x6A
  1623  0000EA                     	ds	10
  1624  0000F4                     printf@ap:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x74
  1628  0000F4                     	ds	2
  1629  0000F6                     ??_initStartScreen:
  1630  0000F6                     ballsGivenScreen@balls:
  1631                           	opt callstack 0
  1632  0000F6                     numCanistersScreen@num:
  1633                           	opt callstack 0
  1634  0000F6                     canisterDataScreen@id:
  1635                           	opt callstack 0
  1636  0000F6                     sensorData@data:
  1637                           	opt callstack 0
  1638  0000F6                     buildTimeScreen@time:
  1639                           	opt callstack 0
  1640                           
  1641                           ; 4 bytes @ 0x76
  1642  0000F6                     	ds	2
  1643  0000F8                     sensorData@data2:
  1644                           	opt callstack 0
  1645  0000F8                     initStartScreen@time:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 7 bytes @ 0x78
  1649  0000F8                     	ds	2
  1650  0000FA                     ??_initMenu:
  1651  0000FA                     testTurn@count:
  1652                           	opt callstack 0
  1653  0000FA                     setForward@count:
  1654                           	opt callstack 0
  1655  0000FA                     setBackward@count:
  1656                           	opt callstack 0
  1657  0000FA                     setRight@count:
  1658                           	opt callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x7A
  1661  0000FA                     	ds	2
  1662  0000FC                     ??_testTurn:
  1663  0000FC                     ??_setForward:
  1664  0000FC                     ??_setBackward:
  1665  0000FC                     ??_setRight:
  1666                           
  1667                           ; 1 bytes @ 0x7C
  1668  0000FC                     	ds	2
  1669  0000FE                     ??_detectCanister:
  1670  0000FE                     ??_detectCanisterTurned:
  1671                           
  1672                           ; 1 bytes @ 0x7E
  1673  0000FE                     	ds	1
  1674  0000FF                     initStartScreen@i:
  1675                           	opt callstack 0
  1676                           
  1677                           ; 1 bytes @ 0x7F
  1678  0000FF                     	ds	1
  1679                           
  1680                           	psect	cstackCOMRAM
  1681  000001                     __pcstackCOMRAM:
  1682                           	opt callstack 0
  1683  000001                     ??_I2C_Master_Wait:
  1684  000001                     ?_getNumCanisters:
  1685                           	opt callstack 0
  1686  000001                     ?_getNumBallsGiven:
  1687                           	opt callstack 0
  1688  000001                     ?_strlen:
  1689                           	opt callstack 0
  1690  000001                     ?___fpclassifyf:
  1691                           	opt callstack 0
  1692  000001                     ?_isupper:
  1693                           	opt callstack 0
  1694  000001                     ?_isalpha:
  1695                           	opt callstack 0
  1696  000001                     ?_isdigit:
  1697                           	opt callstack 0
  1698  000001                     ?_strncmp:
  1699                           	opt callstack 0
  1700  000001                     ?_isspace:
  1701                           	opt callstack 0
  1702  000001                     ?_islower:
  1703                           	opt callstack 0
  1704  000001                     ?___wmul:
  1705                           	opt callstack 0
  1706  000001                     ?___awdiv:
  1707                           	opt callstack 0
  1708  000001                     ?___awmod:
  1709                           	opt callstack 0
  1710  000001                     ?___fldiv:
  1711                           	opt callstack 0
  1712  000001                     ?___lldiv:
  1713                           	opt callstack 0
  1714  000001                     ?___flneg:
  1715                           	opt callstack 0
  1716  000001                     ?___fltol:
  1717                           	opt callstack 0
  1718  000001                     ?___aodiv:
  1719                           	opt callstack 0
  1720  000001                     ?___aomod:
  1721                           	opt callstack 0
  1722  000001                     pulse_e@interruptState:
  1723                           	opt callstack 0
  1724  000001                     moveRobot@move:
  1725                           	opt callstack 0
  1726  000001                     ___wmul@multiplier:
  1727                           	opt callstack 0
  1728  000001                     ___awdiv@dividend:
  1729                           	opt callstack 0
  1730  000001                     ___awmod@dividend:
  1731                           	opt callstack 0
  1732  000001                     isalpha@c:
  1733                           	opt callstack 0
  1734  000001                     isdigit@c:
  1735                           	opt callstack 0
  1736  000001                     isspace@c:
  1737                           	opt callstack 0
  1738  000001                     isupper@c:
  1739                           	opt callstack 0
  1740  000001                     strcpy@dest:
  1741                           	opt callstack 0
  1742  000001                     strlen@s:
  1743                           	opt callstack 0
  1744  000001                     strncmp@_l:
  1745                           	opt callstack 0
  1746  000001                     islower@c:
  1747                           	opt callstack 0
  1748  000001                     ___lldiv@dividend:
  1749                           	opt callstack 0
  1750  000001                     ___fleq@ff1:
  1751                           	opt callstack 0
  1752  000001                     ___flneg@f1:
  1753                           	opt callstack 0
  1754  000001                     ___fltol@f1:
  1755                           	opt callstack 0
  1756  000001                     ___fldiv@b:
  1757                           	opt callstack 0
  1758  000001                     ___fpclassifyf@x:
  1759                           	opt callstack 0
  1760  000001                     ___aodiv@dividend:
  1761                           	opt callstack 0
  1762  000001                     ___aomod@dividend:
  1763                           	opt callstack 0
  1764                           
  1765                           ; 8 bytes @ 0x0
  1766  000001                     	ds	1
  1767  000002                     send_nibble@data:
  1768                           	opt callstack 0
  1769  000002                     I2C_Master_Read@ackBit:
  1770                           	opt callstack 0
  1771  000002                     I2C_Master_Write@byteToWrite:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x1
  1775  000002                     	ds	1
  1776  000003                     ??_moveRobot:
  1777  000003                     ??_isupper:
  1778  000003                     ??_isalpha:
  1779  000003                     ??_isdigit:
  1780  000003                     ??_isspace:
  1781  000003                     ??_islower:
  1782  000003                     send_byte@data:
  1783                           	opt callstack 0
  1784  000003                     I2C_Master_Read@receivedByte:
  1785                           	opt callstack 0
  1786  000003                     ___wmul@multiplicand:
  1787                           	opt callstack 0
  1788  000003                     ___awdiv@divisor:
  1789                           	opt callstack 0
  1790  000003                     ___awmod@divisor:
  1791                           	opt callstack 0
  1792  000003                     strcpy@src:
  1793                           	opt callstack 0
  1794  000003                     strlen@a:
  1795                           	opt callstack 0
  1796  000003                     strncmp@_r:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 2 bytes @ 0x2
  1800  000003                     	ds	1
  1801  000004                     lcdInst@data:
  1802                           	opt callstack 0
  1803  000004                     putch@data:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 1 bytes @ 0x3
  1807  000004                     	ds	1
  1808  000005                     ??___fpclassifyf:
  1809  000005                     ??_strcpy:
  1810  000005                     ??_initLCD:
  1811  000005                     ??___fltol:
  1812  000005                     ___awdiv@counter:
  1813                           	opt callstack 0
  1814  000005                     ___awmod@counter:
  1815                           	opt callstack 0
  1816  000005                     ___wmul@product:
  1817                           	opt callstack 0
  1818  000005                     fputc@c:
  1819                           	opt callstack 0
  1820  000005                     strncmp@n:
  1821                           	opt callstack 0
  1822  000005                     ___lldiv@divisor:
  1823                           	opt callstack 0
  1824  000005                     ___fleq@ff2:
  1825                           	opt callstack 0
  1826  000005                     ___fldiv@a:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 4 bytes @ 0x4
  1830  000005                     	ds	1
  1831  000006                     ___awdiv@sign:
  1832                           	opt callstack 0
  1833  000006                     ___awmod@sign:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 1 bytes @ 0x5
  1837  000006                     	ds	1
  1838  000007                     ??_strncmp:
  1839  000007                     ?_tolower:
  1840                           	opt callstack 0
  1841  000007                     ?_toupper:
  1842                           	opt callstack 0
  1843  000007                     ?_getData:
  1844                           	opt callstack 0
  1845  000007                     _isspace$2626:
  1846                           	opt callstack 0
  1847  000007                     initCanisters@i:
  1848                           	opt callstack 0
  1849  000007                     updateCanData@id:
  1850                           	opt callstack 0
  1851  000007                     getData@id:
  1852                           	opt callstack 0
  1853  000007                     ___awdiv@quotient:
  1854                           	opt callstack 0
  1855  000007                     fputc@fp:
  1856                           	opt callstack 0
  1857  000007                     strcpy@s:
  1858                           	opt callstack 0
  1859  000007                     tolower@c:
  1860                           	opt callstack 0
  1861  000007                     toupper@c:
  1862                           	opt callstack 0
  1863  000007                     storeCanisterData@dist:
  1864                           	opt callstack 0
  1865                           
  1866                           ; 4 bytes @ 0x6
  1867  000007                     	ds	1
  1868  000008                     ?_atoi:
  1869                           	opt callstack 0
  1870  000008                     atoi@s:
  1871                           	opt callstack 0
  1872  000008                     strncmp@l:
  1873                           	opt callstack 0
  1874                           
  1875                           ; 2 bytes @ 0x7
  1876  000008                     	ds	1
  1877  000009                     ??_fputc:
  1878  000009                     ??_tolower:
  1879  000009                     ??_toupper:
  1880  000009                     ??___fldiv:
  1881  000009                     ??___fleq:
  1882  000009                     updateCanData@status:
  1883                           	opt callstack 0
  1884  000009                     ___fltol@sign1:
  1885                           	opt callstack 0
  1886  000009                     ___fpclassifyf@e:
  1887                           	opt callstack 0
  1888  000009                     strcpy@d:
  1889                           	opt callstack 0
  1890  000009                     ___lldiv@quotient:
  1891                           	opt callstack 0
  1892  000009                     ___aodiv@divisor:
  1893                           	opt callstack 0
  1894  000009                     ___aomod@divisor:
  1895                           	opt callstack 0
  1896                           
  1897                           ; 8 bytes @ 0x8
  1898  000009                     	ds	1
  1899  00000A                     ??_atoi:
  1900  00000A                     updateCanData@deposit:
  1901                           	opt callstack 0
  1902  00000A                     ___fltol@exp1:
  1903                           	opt callstack 0
  1904  00000A                     strncmp@r:
  1905                           	opt callstack 0
  1906                           
  1907                           ; 2 bytes @ 0x9
  1908  00000A                     	ds	1
  1909  00000B                     storeCanisterData@status:
  1910                           	opt callstack 0
  1911  00000B                     ___fpclassifyf@u:
  1912                           	opt callstack 0
  1913                           
  1914                           ; 4 bytes @ 0xA
  1915  00000B                     	ds	1
  1916  00000C                     storeCanisterData@deposit:
  1917                           	opt callstack 0
  1918                           
  1919                           ; 1 bytes @ 0xB
  1920  00000C                     	ds	1
  1921  00000D                     storeCanisterData@facing:
  1922                           	opt callstack 0
  1923  00000D                     ___lldiv@counter:
  1924                           	opt callstack 0
  1925  00000D                     _tolower$2699:
  1926                           	opt callstack 0
  1927  00000D                     _toupper$2714:
  1928                           	opt callstack 0
  1929  00000D                     ___fldiv@rem:
  1930                           	opt callstack 0
  1931                           
  1932                           ; 4 bytes @ 0xC
  1933  00000D                     	ds	1
  1934  00000E                     ?_stoa:
  1935                           	opt callstack 0
  1936  00000E                     storeCanisterData@id:
  1937                           	opt callstack 0
  1938  00000E                     stoa@fp:
  1939                           	opt callstack 0
  1940  00000E                     atoi@neg:
  1941                           	opt callstack 0
  1942  00000E                     fputs@s:
  1943                           	opt callstack 0
  1944  00000E                     I2C_Master_Init@clockFreq:
  1945                           	opt callstack 0
  1946                           
  1947                           ; 4 bytes @ 0xD
  1948  00000E                     	ds	2
  1949  000010                     stoa@s:
  1950                           	opt callstack 0
  1951  000010                     _atoi$2586:
  1952                           	opt callstack 0
  1953  000010                     fputs@fp:
  1954                           	opt callstack 0
  1955                           
  1956                           ; 2 bytes @ 0xF
  1957  000010                     	ds	1
  1958  000011                     ___aodiv@counter:
  1959                           	opt callstack 0
  1960  000011                     ___aomod@counter:
  1961                           	opt callstack 0
  1962  000011                     ___fldiv@sign:
  1963                           	opt callstack 0
  1964                           
  1965                           ; 1 bytes @ 0x10
  1966  000011                     	ds	1
  1967  000012                     ??_I2C_Master_Init:
  1968  000012                     ??_stoa:
  1969  000012                     ___aodiv@sign:
  1970                           	opt callstack 0
  1971  000012                     ___aomod@sign:
  1972                           	opt callstack 0
  1973  000012                     fputs@c:
  1974                           	opt callstack 0
  1975  000012                     ___fldiv@new_exp:
  1976                           	opt callstack 0
  1977  000012                     _atoi$2588:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x11
  1981  000012                     	ds	1
  1982  000013                     ?_abs:
  1983                           	opt callstack 0
  1984  000013                     abs@a:
  1985                           	opt callstack 0
  1986  000013                     fputs@i:
  1987                           	opt callstack 0
  1988  000013                     stoa@nuls:
  1989                           	opt callstack 0
  1990  000013                     ___aodiv@quotient:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 8 bytes @ 0x12
  1994  000013                     	ds	1
  1995  000014                     _atoi$2587:
  1996                           	opt callstack 0
  1997  000014                     ___fldiv@grs:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 4 bytes @ 0x13
  2001  000014                     	ds	1
  2002  000015                     ??_abs:
  2003  000015                     ?_pad:
  2004                           	opt callstack 0
  2005  000015                     pad@fp:
  2006                           	opt callstack 0
  2007  000015                     atoi@n:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 2 bytes @ 0x14
  2011  000015                     	ds	1
  2012  000016                     ?_distFromCanister:
  2013                           	opt callstack 0
  2014  000016                     ?_readDigitalSensor:
  2015                           	opt callstack 0
  2016  000016                     ?_shaftEncoderCount:
  2017                           	opt callstack 0
  2018  000016                     ?_shaftEncoderCount2:
  2019                           	opt callstack 0
  2020  000016                     ?_readFrontSensor:
  2021                           	opt callstack 0
  2022  000016                     ?_readFrontSensor2:
  2023                           	opt callstack 0
  2024  000016                     ?_readRemoteStart:
  2025                           	opt callstack 0
  2026  000016                     ?_readHallEffect:
  2027                           	opt callstack 0
  2028  000016                     distFromCanister@sensor:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 2 bytes @ 0x15
  2032  000016                     	ds	1
  2033  000017                     pad@buf:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 2 bytes @ 0x16
  2037  000017                     	ds	1
  2038  000018                     ??_distFromCanister:
  2039  000018                     ??_readDigitalSensor:
  2040  000018                     ??_shaftEncoderCount:
  2041  000018                     ??_shaftEncoderCount2:
  2042  000018                     ??_readFrontSensor:
  2043  000018                     ??_readFrontSensor2:
  2044  000018                     ??_readRemoteStart:
  2045  000018                     ??_readHallEffect:
  2046  000018                     ___fldiv@bexp:
  2047                           	opt callstack 0
  2048                           
  2049                           ; 1 bytes @ 0x17
  2050  000018                     	ds	1
  2051  000019                     ___fldiv@aexp:
  2052                           	opt callstack 0
  2053  000019                     pad@p:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 2 bytes @ 0x18
  2057  000019                     	ds	1
  2058  00001A                     ?_floorf:
  2059                           	opt callstack 0
  2060  00001A                     stoa@i:
  2061                           	opt callstack 0
  2062  00001A                     shaftEncoderCount@count:
  2063                           	opt callstack 0
  2064  00001A                     shaftEncoderCount2@count:
  2065                           	opt callstack 0
  2066  00001A                     readRemoteStart@count:
  2067                           	opt callstack 0
  2068  00001A                     distFromCanister@count:
  2069                           	opt callstack 0
  2070  00001A                     readDigitalSensor@count:
  2071                           	opt callstack 0
  2072  00001A                     readHallEffect@count:
  2073                           	opt callstack 0
  2074  00001A                     readFrontSensor@count:
  2075                           	opt callstack 0
  2076  00001A                     readFrontSensor2@count:
  2077                           	opt callstack 0
  2078  00001A                     floorf@x:
  2079                           	opt callstack 0
  2080                           
  2081                           ; 4 bytes @ 0x19
  2082  00001A                     	ds	1
  2083  00001B                     ??_pad:
  2084                           
  2085                           ; 1 bytes @ 0x1A
  2086  00001B                     	ds	1
  2087  00001C                     pad@i:
  2088                           	opt callstack 0
  2089  00001C                     stoa@w:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 2 bytes @ 0x1B
  2093  00001C                     	ds	2
  2094  00001E                     ??_floorf:
  2095  00001E                     shaftEncoderCount@i:
  2096                           	opt callstack 0
  2097  00001E                     shaftEncoderCount2@i:
  2098                           	opt callstack 0
  2099  00001E                     readRemoteStart@i:
  2100                           	opt callstack 0
  2101  00001E                     distFromCanister@i:
  2102                           	opt callstack 0
  2103  00001E                     readDigitalSensor@i:
  2104                           	opt callstack 0
  2105  00001E                     readHallEffect@i:
  2106                           	opt callstack 0
  2107  00001E                     readFrontSensor@i:
  2108                           	opt callstack 0
  2109  00001E                     readFrontSensor2@i:
  2110                           	opt callstack 0
  2111  00001E                     pad@w:
  2112                           	opt callstack 0
  2113  00001E                     stoa@cp:
  2114                           	opt callstack 0
  2115                           
  2116                           ; 2 bytes @ 0x1D
  2117  00001E                     	ds	1
  2118  00001F                     ??_avoidCan:
  2119  00001F                     ?___xxtofl:
  2120                           	opt callstack 0
  2121  00001F                     ___xxtofl@val:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 4 bytes @ 0x1E
  2125  00001F                     	ds	1
  2126  000020                     ?_ctoa:
  2127                           	opt callstack 0
  2128  000020                     ?_dtoa:
  2129                           	opt callstack 0
  2130  000020                     ?_xtoa:
  2131                           	opt callstack 0
  2132  000020                     ctoa@fp:
  2133                           	opt callstack 0
  2134  000020                     dtoa@fp:
  2135                           	opt callstack 0
  2136  000020                     stoa@p:
  2137                           	opt callstack 0
  2138  000020                     xtoa@fp:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 2 bytes @ 0x1F
  2142  000020                     	ds	2
  2143  000022                     ctoa@c:
  2144                           	opt callstack 0
  2145  000022                     stoa@l:
  2146                           	opt callstack 0
  2147  000022                     dtoa@d:
  2148                           	opt callstack 0
  2149  000022                     xtoa@d:
  2150                           	opt callstack 0
  2151                           
  2152                           ; 8 bytes @ 0x21
  2153  000022                     	ds	1
  2154  000023                     ??___xxtofl:
  2155  000023                     ctoa@w:
  2156                           	opt callstack 0
  2157                           
  2158                           ; 2 bytes @ 0x22
  2159  000023                     	ds	1
  2160  000024                     floorf@m:
  2161                           	opt callstack 0
  2162                           
  2163                           ; 4 bytes @ 0x23
  2164  000024                     	ds	3
  2165  000027                     ___xxtofl@sign:
  2166                           	opt callstack 0
  2167                           
  2168                           ; 1 bytes @ 0x26
  2169  000027                     	ds	1
  2170  000028                     ___xxtofl@exp:
  2171                           	opt callstack 0
  2172  000028                     floorf@e:
  2173                           	opt callstack 0
  2174                           
  2175                           ; 2 bytes @ 0x27
  2176  000028                     	ds	1
  2177  000029                     ___xxtofl@arg:
  2178                           	opt callstack 0
  2179                           
  2180                           ; 4 bytes @ 0x28
  2181  000029                     	ds	1
  2182  00002A                     ??_dtoa:
  2183  00002A                     xtoa@x:
  2184                           	opt callstack 0
  2185  00002A                     floorf@u:
  2186                           	opt callstack 0
  2187                           
  2188                           ; 4 bytes @ 0x29
  2189  00002A                     	ds	1
  2190  00002B                     ??_xtoa:
  2191                           
  2192                           ; 1 bytes @ 0x2A
  2193  00002B                     	ds	2
  2194  00002D                     ?___flmul:
  2195                           	opt callstack 0
  2196  00002D                     ___flmul@b:
  2197                           	opt callstack 0
  2198                           
  2199                           ; 4 bytes @ 0x2C
  2200  00002D                     	ds	4
  2201  000031                     ___flmul@a:
  2202                           	opt callstack 0
  2203                           
  2204                           ; 4 bytes @ 0x30
  2205  000031                     	ds	1
  2206  000032                     _dtoa$2035:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x31
  2210  000032                     	ds	1
  2211  000033                     _xtoa$2089:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x32
  2215  000033                     	ds	1
  2216  000034                     dtoa@p:
  2217                           	opt callstack 0
  2218                           
  2219                           ; 2 bytes @ 0x33
  2220  000034                     	ds	1
  2221  000035                     ??___flmul:
  2222  000035                     _xtoa$2090:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 2 bytes @ 0x34
  2226  000035                     	ds	1
  2227  000036                     dtoa@w:
  2228                           	opt callstack 0
  2229                           
  2230                           ; 2 bytes @ 0x35
  2231  000036                     	ds	1
  2232  000037                     xtoa@p:
  2233                           	opt callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x36
  2236  000037                     	ds	1
  2237  000038                     dtoa@s:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x37
  2241  000038                     	ds	1
  2242  000039                     ___flmul@sign:
  2243                           	opt callstack 0
  2244  000039                     xtoa@w:
  2245                           	opt callstack 0
  2246                           
  2247                           ; 2 bytes @ 0x38
  2248  000039                     	ds	1
  2249  00003A                     ___flmul@grs:
  2250                           	opt callstack 0
  2251  00003A                     dtoa@n:
  2252                           	opt callstack 0
  2253                           
  2254                           ; 8 bytes @ 0x39
  2255  00003A                     	ds	1
  2256  00003B                     xtoa@n:
  2257                           	opt callstack 0
  2258                           
  2259                           ; 8 bytes @ 0x3A
  2260  00003B                     	ds	3
  2261  00003E                     ___flmul@aexp:
  2262                           	opt callstack 0
  2263                           
  2264                           ; 1 bytes @ 0x3D
  2265  00003E                     	ds	1
  2266  00003F                     ___flmul@bexp:
  2267                           	opt callstack 0
  2268                           
  2269                           ; 1 bytes @ 0x3E
  2270  00003F                     	ds	1
  2271  000040                     ___flmul@prod:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 4 bytes @ 0x3F
  2275  000040                     	ds	2
  2276  000042                     dtoa@i:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 2 bytes @ 0x41
  2280  000042                     	ds	1
  2281  000043                     xtoa@i:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 2 bytes @ 0x42
  2285  000043                     	ds	1
  2286  000044                     ___flmul@temp:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x43
  2290  000044                     	ds	1
  2291  000045                     xtoa@c:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 2 bytes @ 0x44
  2295  000045                     	ds	1
  2296  000046                     ?_getDistance:
  2297                           	opt callstack 0
  2298  000046                     ?_getTime:
  2299                           	opt callstack 0
  2300                           
  2301                           ; 4 bytes @ 0x45
  2302  000046                     	ds	4
  2303  00004A                     getDistance@count:
  2304                           	opt callstack 0
  2305  00004A                     getTime@time:
  2306                           	opt callstack 0
  2307                           
  2308                           ; 4 bytes @ 0x49
  2309  00004A                     	ds	2
  2310  00004C                     ?___fladd:
  2311                           	opt callstack 0
  2312  00004C                     ___fladd@b:
  2313                           	opt callstack 0
  2314                           
  2315                           ; 4 bytes @ 0x4B
  2316  00004C                     	ds	4
  2317  000050                     ___fladd@a:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 4 bytes @ 0x4F
  2321  000050                     	ds	4
  2322  000054                     ??___fladd:
  2323                           
  2324                           ; 1 bytes @ 0x53
  2325  000054                     	ds	4
  2326  000058                     ___fladd@signs:
  2327                           	opt callstack 0
  2328                           
  2329                           ; 1 bytes @ 0x57
  2330  000058                     	ds	1
  2331  000059                     ___fladd@aexp:
  2332                           	opt callstack 0
  2333                           
  2334                           ; 1 bytes @ 0x58
  2335  000059                     	ds	1
  2336  00005A                     ___fladd@bexp:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 1 bytes @ 0x59
  2340  00005A                     	ds	1
  2341  00005B                     ___fladd@grs:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 1 bytes @ 0x5A
  2345  00005B                     	ds	1
  2346  00005C                     ?___flsub:
  2347                           	opt callstack 0
  2348  00005C                     ___flsub@b:
  2349                           	opt callstack 0
  2350                           
  2351                           ; 4 bytes @ 0x5B
  2352  00005C                     	ds	4
  2353  000060                     ___flsub@a:
  2354                           	opt callstack 0
  2355                           
  2356                           ; 4 bytes @ 0x5F
  2357  000060                     	ds	4
  2358  000064                     ___flge@ff1:
  2359                           	opt callstack 0
  2360                           
  2361                           ; 4 bytes @ 0x63
  2362  000064                     	ds	4
  2363  000068                     ___flge@ff2:
  2364                           	opt callstack 0
  2365                           
  2366                           ; 4 bytes @ 0x67
  2367  000068                     	ds	4
  2368  00006C                     ??___flge:
  2369                           
  2370                           ; 1 bytes @ 0x6B
  2371  00006C                     	ds	4
  2372  000070                     ?_efgtoa:
  2373                           	opt callstack 0
  2374  000070                     efgtoa@fp:
  2375                           	opt callstack 0
  2376  000070                     releaseDoor1@start:
  2377                           	opt callstack 0
  2378  000070                     releaseDoor2@start:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 4 bytes @ 0x6F
  2382  000070                     	ds	2
  2383  000072                     efgtoa@f:
  2384                           	opt callstack 0
  2385                           
  2386                           ; 4 bytes @ 0x71
  2387  000072                     	ds	2
  2388  000074                     
  2389                           ; 1 bytes @ 0x73
  2390  000074                     	ds	2
  2391  000076                     efgtoa@c:
  2392                           	opt callstack 0
  2393                           
  2394                           ; 1 bytes @ 0x75
  2395  000076                     	ds	1
  2396  000077                     ??_efgtoa:
  2397                           
  2398                           ; 1 bytes @ 0x76
  2399  000077                     	ds	5
  2400  00007C                     vfprintf@cfmt:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x7B
  2404  00007C                     	ds	2
  2405  00007E                     ??_sensorData:
  2406  00007E                     ??_buildEndScreen:
  2407  00007E                     ??_buildEndScreenMenu:
  2408  00007E                     ??_buildTimeScreen:
  2409  00007E                     ??_ballsGivenScreen:
  2410  00007E                     ??_numCanistersScreen:
  2411  00007E                     ??_canisterSelectScreen:
  2412  00007E                     ??_canisterDataScreen:
  2413                           
  2414                           ; 1 bytes @ 0x7D
  2415  00007E                     	ds	1
  2416                           
  2417 ;;
  2418 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2419 ;;
  2420 ;; *************** function _main *****************
  2421 ;; Defined at:
  2422 ;;		line 49 in file "main.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  count           4    0        unsigned int [2]
  2427 ;;  newCount        2   62[BANK1 ] unsigned int 
  2428 ;;  finished        1   65[BANK1 ] _Bool 
  2429 ;;  turned          1    0        _Bool 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;Total ram usage:        6 bytes
  2444 ;; Hardware stack levels required when called:   16
  2445 ;; This function calls:
  2446 ;;		___xxtofl
  2447 ;;		_distFromCanister
  2448 ;;		_getNumCanisters
  2449 ;;		_initCanisters
  2450 ;;		_initMenu
  2451 ;;		_initStartScreen
  2452 ;;		_moveRobot
  2453 ;;		_setForward
  2454 ;;		_testDrive
  2455 ;;		_testDrive2
  2456 ;;		_testTurn
  2457 ;; This function is called by:
  2458 ;;		Startup code after reset
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text0
  2463  003110                     __ptext0:
  2464                           	opt callstack 0
  2465  003110                     _main:
  2466                           	opt callstack 15
  2467                           
  2468                           ;main.c: 54:     _Bool finished = 0;
  2469                           
  2470                           ;incstack = 0
  2471  003110  0E00               	movlw	0
  2472  003112  0101               	movlb	1	; () banked
  2473  003114  6FF1               	movwf	main@finished& (0+255),b
  2474                           
  2475                           ;main.c: 55:     unsigned int newCount = 0;
  2476  003116  0E00               	movlw	0
  2477  003118  6FEF               	movwf	(main@newCount+1)& (0+255),b
  2478  00311A  0E00               	movlw	0
  2479  00311C  6FEE               	movwf	main@newCount& (0+255),b
  2480                           
  2481                           ; BSR set to: 1
  2482                           ;main.c: 56:     unsigned int count[2];;main.c: 60:     TRISCbits.RC5 = 0;
  2483  00311E  9A94               	bcf	3988,5,c	;volatile
  2484                           
  2485                           ; BSR set to: 1
  2486                           ;main.c: 61:     LATCbits.LATC5 = 0;
  2487  003120  9A8B               	bcf	3979,5,c	;volatile
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;main.c: 64:     TRISBbits.RB3 = 0;
  2491  003122  9693               	bcf	3987,3,c	;volatile
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;main.c: 65:     LATBbits.LATB3 = 0;
  2495  003124  968A               	bcf	3978,3,c	;volatile
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;main.c: 71:     initCanisters();
  2499  003126  EC31  F01E         	call	_initCanisters	;wreg free
  2500                           
  2501                           ;main.c: 73:     TMR0ON = 0;
  2502  00312A  9ED5               	bcf	4053,7,c	;volatile
  2503                           
  2504                           ;main.c: 74:     T08BIT = 0;
  2505  00312C  9CD5               	bcf	4053,6,c	;volatile
  2506                           
  2507                           ;main.c: 76:     T0CS = 0;
  2508  00312E  9AD5               	bcf	4053,5,c	;volatile
  2509                           
  2510                           ;main.c: 77:     T0SE = 0;
  2511  003130  98D5               	bcf	4053,4,c	;volatile
  2512                           
  2513                           ;main.c: 79:     PSA = 1;
  2514  003132  86D5               	bsf	4053,3,c	;volatile
  2515                           
  2516                           ;main.c: 81:     TMR0L = 0b00000000;
  2517  003134  0E00               	movlw	0
  2518  003136  6ED6               	movwf	4054,c	;volatile
  2519                           
  2520                           ;main.c: 82:     TMR0H = 0b00000000;
  2521  003138  0E00               	movlw	0
  2522  00313A  6ED7               	movwf	4055,c	;volatile
  2523                           
  2524                           ;main.c: 84:     TMR0IE = 1;
  2525  00313C  8AF2               	bsf	4082,5,c	;volatile
  2526                           
  2527                           ;main.c: 86:     moveRobot(0);
  2528  00313E  0E00               	movlw	0
  2529  003140  6E02               	movwf	moveRobot@move+1,c
  2530  003142  0E00               	movlw	0
  2531  003144  6E01               	movwf	moveRobot@move,c
  2532  003146  EC6C  F024         	call	_moveRobot	;wreg free
  2533                           
  2534                           ;main.c: 88:     analog1Ambient = distFromCanister(1);
  2535  00314A  0E00               	movlw	0
  2536  00314C  6E17               	movwf	distFromCanister@sensor+1,c
  2537  00314E  0E01               	movlw	1
  2538  003150  6E16               	movwf	distFromCanister@sensor,c
  2539  003152  EC80  F01C         	call	_distFromCanister	;wreg free
  2540  003156  C016  F01F         	movff	?_distFromCanister,___xxtofl@val
  2541  00315A  C017  F020         	movff	?_distFromCanister+1,___xxtofl@val+1
  2542  00315E  0E00               	movlw	0
  2543  003160  BE20               	btfsc	___xxtofl@val+1,7,c
  2544  003162  0EFF               	movlw	-1
  2545  003164  6E21               	movwf	___xxtofl@val+2,c
  2546  003166  6E22               	movwf	___xxtofl@val+3,c
  2547  003168  0E01               	movlw	1
  2548  00316A  EC40  F01B         	call	___xxtofl
  2549  00316E  C01F  F172         	movff	?___xxtofl,_analog1Ambient	;volatile
  2550  003172  C020  F173         	movff	?___xxtofl+1,_analog1Ambient+1	;volatile
  2551  003176  C021  F174         	movff	?___xxtofl+2,_analog1Ambient+2	;volatile
  2552  00317A  C022  F175         	movff	?___xxtofl+3,_analog1Ambient+3	;volatile
  2553                           
  2554                           ;main.c: 89:     analog2Ambient = distFromCanister(2);
  2555  00317E  0E00               	movlw	0
  2556  003180  6E17               	movwf	distFromCanister@sensor+1,c
  2557  003182  0E02               	movlw	2
  2558  003184  6E16               	movwf	distFromCanister@sensor,c
  2559  003186  EC80  F01C         	call	_distFromCanister	;wreg free
  2560  00318A  C016  F01F         	movff	?_distFromCanister,___xxtofl@val
  2561  00318E  C017  F020         	movff	?_distFromCanister+1,___xxtofl@val+1
  2562  003192  0E00               	movlw	0
  2563  003194  BE20               	btfsc	___xxtofl@val+1,7,c
  2564  003196  0EFF               	movlw	-1
  2565  003198  6E21               	movwf	___xxtofl@val+2,c
  2566  00319A  6E22               	movwf	___xxtofl@val+3,c
  2567  00319C  0E01               	movlw	1
  2568  00319E  EC40  F01B         	call	___xxtofl
  2569  0031A2  C01F  F16E         	movff	?___xxtofl,_analog2Ambient	;volatile
  2570  0031A6  C020  F16F         	movff	?___xxtofl+1,_analog2Ambient+1	;volatile
  2571  0031AA  C021  F170         	movff	?___xxtofl+2,_analog2Ambient+2	;volatile
  2572  0031AE  C022  F171         	movff	?___xxtofl+3,_analog2Ambient+3	;volatile
  2573                           
  2574                           ;main.c: 90:     analog3Ambient = distFromCanister(7);
  2575  0031B2  0E00               	movlw	0
  2576  0031B4  6E17               	movwf	distFromCanister@sensor+1,c
  2577  0031B6  0E07               	movlw	7
  2578  0031B8  6E16               	movwf	distFromCanister@sensor,c
  2579  0031BA  EC80  F01C         	call	_distFromCanister	;wreg free
  2580  0031BE  C016  F01F         	movff	?_distFromCanister,___xxtofl@val
  2581  0031C2  C017  F020         	movff	?_distFromCanister+1,___xxtofl@val+1
  2582  0031C6  0E00               	movlw	0
  2583  0031C8  BE20               	btfsc	___xxtofl@val+1,7,c
  2584  0031CA  0EFF               	movlw	-1
  2585  0031CC  6E21               	movwf	___xxtofl@val+2,c
  2586  0031CE  6E22               	movwf	___xxtofl@val+3,c
  2587  0031D0  0E01               	movlw	1
  2588  0031D2  EC40  F01B         	call	___xxtofl
  2589  0031D6  C01F  F16A         	movff	?___xxtofl,_analog3Ambient	;volatile
  2590  0031DA  C020  F16B         	movff	?___xxtofl+1,_analog3Ambient+1	;volatile
  2591  0031DE  C021  F16C         	movff	?___xxtofl+2,_analog3Ambient+2	;volatile
  2592  0031E2  C022  F16D         	movff	?___xxtofl+3,_analog3Ambient+3	;volatile
  2593                           
  2594                           ;main.c: 91:     analog4Ambient = distFromCanister(8);
  2595  0031E6  0E00               	movlw	0
  2596  0031E8  6E17               	movwf	distFromCanister@sensor+1,c
  2597  0031EA  0E08               	movlw	8
  2598  0031EC  6E16               	movwf	distFromCanister@sensor,c
  2599  0031EE  EC80  F01C         	call	_distFromCanister	;wreg free
  2600  0031F2  C016  F01F         	movff	?_distFromCanister,___xxtofl@val
  2601  0031F6  C017  F020         	movff	?_distFromCanister+1,___xxtofl@val+1
  2602  0031FA  0E00               	movlw	0
  2603  0031FC  BE20               	btfsc	___xxtofl@val+1,7,c
  2604  0031FE  0EFF               	movlw	-1
  2605  003200  6E21               	movwf	___xxtofl@val+2,c
  2606  003202  6E22               	movwf	___xxtofl@val+3,c
  2607  003204  0E01               	movlw	1
  2608  003206  EC40  F01B         	call	___xxtofl
  2609  00320A  C01F  F166         	movff	?___xxtofl,_analog4Ambient	;volatile
  2610  00320E  C020  F167         	movff	?___xxtofl+1,_analog4Ambient+1	;volatile
  2611  003212  C021  F168         	movff	?___xxtofl+2,_analog4Ambient+2	;volatile
  2612  003216  C022  F169         	movff	?___xxtofl+3,_analog4Ambient+3	;volatile
  2613                           
  2614                           ;main.c: 92:     initStartScreen();
  2615  00321A  EC47  F019         	call	_initStartScreen	;wreg free
  2616                           
  2617                           ;main.c: 100:     TMR0ON = 1;
  2618  00321E  8ED5               	bsf	4053,7,c	;volatile
  2619                           
  2620                           ;main.c: 101:     _delay((unsigned long)((2000)*(10000000/4000.0)));
  2621  003220  0E1A               	movlw	26
  2622  003222  0101               	movlb	1	; () banked
  2623  003224  6FED               	movwf	(??_main+1)& (0+255),b
  2624  003226  0E5E               	movlw	94
  2625  003228  6FEC               	movwf	??_main& (0+255),b
  2626  00322A  0E6E               	movlw	110
  2627  00322C                     u9577:
  2628  00322C  2EE8               	decfsz	wreg,f,c
  2629  00322E  D7FE               	bra	u9577
  2630  003230  2FEC               	decfsz	??_main& (0+255),f,b
  2631  003232  D7FC               	bra	u9577
  2632  003234  2FED               	decfsz	(??_main+1)& (0+255),f,b
  2633  003236  D7FA               	bra	u9577
  2634  003238  F000               	nop	
  2635                           
  2636                           ;main.c: 102:     testDrive();
  2637  00323A  EC75  F00F         	call	_testDrive	;wreg free
  2638                           
  2639                           ;main.c: 104:     testTurn(21);
  2640  00323E  0E00               	movlw	0
  2641  003240  0100               	movlb	0	; () banked
  2642  003242  6FFB               	movwf	(testTurn@count+1)& (0+255),b
  2643  003244  0E15               	movlw	21
  2644  003246  6FFA               	movwf	testTurn@count& (0+255),b
  2645  003248  ECAB  F024         	call	_testTurn	;wreg free
  2646                           
  2647                           ;main.c: 105:     setForward(48);
  2648  00324C  0E00               	movlw	0
  2649  00324E  0100               	movlb	0	; () banked
  2650  003250  6FFB               	movwf	(setForward@count+1)& (0+255),b
  2651  003252  0E30               	movlw	48
  2652  003254  6FFA               	movwf	setForward@count& (0+255),b
  2653  003256  EC1F  F025         	call	_setForward	;wreg free
  2654                           
  2655                           ;main.c: 106:     testTurn(21);
  2656  00325A  0E00               	movlw	0
  2657  00325C  0100               	movlb	0	; () banked
  2658  00325E  6FFB               	movwf	(testTurn@count+1)& (0+255),b
  2659  003260  0E15               	movlw	21
  2660  003262  6FFA               	movwf	testTurn@count& (0+255),b
  2661  003264  ECAB  F024         	call	_testTurn	;wreg free
  2662                           
  2663                           ;main.c: 108:     canID = getNumCanisters();
  2664  003268  ECB0  F02A         	call	_getNumCanisters	;wreg free
  2665  00326C  C001  F18E         	movff	?_getNumCanisters,_canID	;volatile
  2666  003270  C002  F18F         	movff	?_getNumCanisters+1,_canID+1	;volatile
  2667                           
  2668                           ;main.c: 109:     testDrive2();
  2669  003274  ECE0  F010         	call	_testDrive2	;wreg free
  2670                           
  2671                           ;main.c: 203:     moveRobot(0);
  2672  003278  0E00               	movlw	0
  2673  00327A  6E02               	movwf	moveRobot@move+1,c
  2674  00327C  0E00               	movlw	0
  2675  00327E  6E01               	movwf	moveRobot@move,c
  2676  003280  EC6C  F024         	call	_moveRobot	;wreg free
  2677                           
  2678                           ;main.c: 205:     TMR0ON = 0;
  2679  003284  9ED5               	bcf	4053,7,c	;volatile
  2680                           
  2681                           ;main.c: 206:     initMenu();
  2682  003286  EC73  F013         	call	_initMenu	;wreg free
  2683  00328A  EF07  F000         	goto	start
  2684  00328E                     __end_of_main:
  2685                           	opt callstack 0
  2686                           
  2687 ;; *************** function _testTurn *****************
  2688 ;; Defined at:
  2689 ;;		line 688 in file "main.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  count           2  122[BANK0 ] int 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  shaftCount      2    4[BANK1 ] unsigned int 
  2694 ;;  shaftCount2     2    2[BANK1 ] unsigned int 
  2695 ;;  newCount        2    0[BANK1 ] int 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:       10 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:   13
  2712 ;; This function calls:
  2713 ;;		_moveRobot
  2714 ;;		_sensorData
  2715 ;;		_shaftEncoderCount
  2716 ;;		_shaftEncoderCount2
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text1
  2723  004956                     __ptext1:
  2724                           	opt callstack 0
  2725  004956                     _testTurn:
  2726                           	opt callstack 17
  2727                           
  2728                           ;main.c: 688: void testTurn(int count);main.c: 689: {;main.c: 690:     unsigned int shaf
      +                          tCount = shaftEncoderCount();
  2729                           
  2730                           ;incstack = 0
  2731  004956  EC34  F022         	call	_shaftEncoderCount	;wreg free
  2732  00495A  C016  F1B4         	movff	?_shaftEncoderCount,testTurn@shaftCount
  2733  00495E  C017  F1B5         	movff	?_shaftEncoderCount+1,testTurn@shaftCount+1
  2734                           
  2735                           ;main.c: 691:     int newCount = shaftCount;
  2736  004962  C1B4  F1B0         	movff	testTurn@shaftCount,testTurn@newCount
  2737  004966  C1B5  F1B1         	movff	testTurn@shaftCount+1,testTurn@newCount+1
  2738  00496A  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  2739                           
  2740                           ;main.c: 693:     while ((shaftCount - newCount) <= count)
  2741  00496E  D01C               	goto	l8869
  2742  004970                     l8861:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;main.c: 694:     {;main.c: 695:         moveRobot(5);
  2746  004970  0E00               	movlw	0
  2747  004972  6E02               	movwf	moveRobot@move+1,c
  2748  004974  0E05               	movlw	5
  2749  004976  6E01               	movwf	moveRobot@move,c
  2750  004978  EC6C  F024         	call	_moveRobot	;wreg free
  2751                           
  2752                           ;main.c: 696:         shaftCount = shaftEncoderCount();
  2753  00497C  EC34  F022         	call	_shaftEncoderCount	;wreg free
  2754  004980  C016  F1B4         	movff	?_shaftEncoderCount,testTurn@shaftCount
  2755  004984  C017  F1B5         	movff	?_shaftEncoderCount+1,testTurn@shaftCount+1
  2756                           
  2757                           ;main.c: 697:         shaftCount2 = shaftEncoderCount2();
  2758  004988  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  2759  00498C  C016  F1B2         	movff	?_shaftEncoderCount2,testTurn@shaftCount2
  2760  004990  C017  F1B3         	movff	?_shaftEncoderCount2+1,testTurn@shaftCount2+1
  2761                           
  2762                           ;main.c: 698:         sensorData(shaftCount, shaftCount2);
  2763  004994  C1B4  F0F6         	movff	testTurn@shaftCount,sensorData@data
  2764  004998  C1B5  F0F7         	movff	testTurn@shaftCount+1,sensorData@data+1
  2765  00499C  C1B2  F0F8         	movff	testTurn@shaftCount2,sensorData@data2
  2766  0049A0  C1B3  F0F9         	movff	testTurn@shaftCount2+1,sensorData@data2+1
  2767  0049A4  EC9B  F026         	call	_sensorData	;wreg free
  2768  0049A8                     l8869:
  2769                           
  2770                           ;main.c: 693:     while ((shaftCount - newCount) <= count)
  2771  0049A8  0101               	movlb	1	; () banked
  2772  0049AA  51B0               	movf	testTurn@newCount& (0+255),w,b
  2773  0049AC  5DB4               	subwf	testTurn@shaftCount& (0+255),w,b
  2774  0049AE  0100               	movlb	0	; () banked
  2775  0049B0  6FFC               	movwf	??_testTurn& (0+255),b
  2776  0049B2  0101               	movlb	1	; () banked
  2777  0049B4  51B1               	movf	(testTurn@newCount+1)& (0+255),w,b
  2778  0049B6  59B5               	subwfb	(testTurn@shaftCount+1)& (0+255),w,b
  2779  0049B8  0100               	movlb	0	; () banked
  2780  0049BA  6FFD               	movwf	(??_testTurn+1)& (0+255),b
  2781  0049BC  51FC               	movf	??_testTurn& (0+255),w,b
  2782  0049BE  5DFA               	subwf	testTurn@count& (0+255),w,b
  2783  0049C0  51FD               	movf	(??_testTurn+1)& (0+255),w,b
  2784  0049C2  59FB               	subwfb	(testTurn@count+1)& (0+255),w,b
  2785  0049C4  A0D8               	btfss	status,0,c
  2786  0049C6  0012               	return	
  2787  0049C8  D7D3               	goto	l8861
  2788  0049CA                     __end_of_testTurn:
  2789                           	opt callstack 0
  2790                           
  2791 ;; *************** function _testDrive2 *****************
  2792 ;; Defined at:
  2793 ;;		line 644 in file "main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  dist            4   56[BANK1 ] float 
  2798 ;;  newDist         4   52[BANK1 ] float 
  2799 ;;  shaftCount      2   50[BANK1 ] unsigned int 
  2800 ;;  shaftCount2     2   48[BANK1 ] unsigned int 
  2801 ;;  newCount        2    0        int 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;Total ram usage:       15 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:   15
  2818 ;; This function calls:
  2819 ;;		___fladd
  2820 ;;		___flge
  2821 ;;		___flsub
  2822 ;;		_avoidCan
  2823 ;;		_detectCanisterTurned
  2824 ;;		_getDistance
  2825 ;;		_initMenu
  2826 ;;		_lcdInst
  2827 ;;		_moveRobot
  2828 ;;		_printf
  2829 ;;		_readDigitalSensor
  2830 ;;		_readFrontSensor
  2831 ;;		_readFrontSensor2
  2832 ;;		_readRemoteStart
  2833 ;;		_shaftEncoderCount
  2834 ;;		_shaftEncoderCount2
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text2
  2841  0021C0                     __ptext2:
  2842                           	opt callstack 0
  2843  0021C0                     _testDrive2:
  2844                           	opt callstack 15
  2845                           
  2846                           ;main.c: 646:     unsigned int shaftCount = shaftEncoderCount();
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;incstack = 0
  2850  0021C0  EC34  F022         	call	_shaftEncoderCount	;wreg free
  2851  0021C4  C016  F1E2         	movff	?_shaftEncoderCount,testDrive2@shaftCount
  2852  0021C8  C017  F1E3         	movff	?_shaftEncoderCount+1,testDrive2@shaftCount+1
  2853                           
  2854                           ;main.c: 648:     unsigned int shaftCount2 = shaftEncoderCount2();
  2855  0021CC  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  2856  0021D0  C016  F1E0         	movff	?_shaftEncoderCount2,testDrive2@shaftCount2
  2857  0021D4  C017  F1E1         	movff	?_shaftEncoderCount2+1,testDrive2@shaftCount2+1
  2858                           
  2859                           ;main.c: 649:     float newDist = getDistance() - lateralDist;
  2860  0021D8  EC56  F027         	call	_getDistance	;wreg free
  2861  0021DC  C046  F05C         	movff	?_getDistance,___flsub@b
  2862  0021E0  C047  F05D         	movff	?_getDistance+1,___flsub@b+1
  2863  0021E4  C048  F05E         	movff	?_getDistance+2,___flsub@b+2
  2864  0021E8  C049  F05F         	movff	?_getDistance+3,___flsub@b+3
  2865  0021EC  C17E  F060         	movff	_lateralDist,___flsub@a	;volatile
  2866  0021F0  C17F  F061         	movff	_lateralDist+1,___flsub@a+1	;volatile
  2867  0021F4  C180  F062         	movff	_lateralDist+2,___flsub@a+2	;volatile
  2868  0021F8  C181  F063         	movff	_lateralDist+3,___flsub@a+3	;volatile
  2869  0021FC  ECB4  F028         	call	___flsub	;wreg free
  2870  002200  C05C  F1E4         	movff	?___flsub,testDrive2@newDist
  2871  002204  C05D  F1E5         	movff	?___flsub+1,testDrive2@newDist+1
  2872  002208  C05E  F1E6         	movff	?___flsub+2,testDrive2@newDist+2
  2873  00220C  C05F  F1E7         	movff	?___flsub+3,testDrive2@newDist+3
  2874                           
  2875                           ;main.c: 650:     float dist = newDist;
  2876  002210  C1E4  F1E8         	movff	testDrive2@newDist,testDrive2@dist
  2877  002214  C1E5  F1E9         	movff	testDrive2@newDist+1,testDrive2@dist+1
  2878  002218  C1E6  F1EA         	movff	testDrive2@newDist+2,testDrive2@dist+2
  2879  00221C  C1E7  F1EB         	movff	testDrive2@newDist+3,testDrive2@dist+3
  2880                           
  2881                           ;main.c: 651:     while ((dist - newDist) <= 430)
  2882  002220  D0F7               	goto	l8913
  2883  002222                     l8877:
  2884                           
  2885                           ;main.c: 652:     {;main.c: 653:         moveRobot(1);
  2886  002222  0E00               	movlw	0
  2887  002224  6E02               	movwf	moveRobot@move+1,c
  2888  002226  0E01               	movlw	1
  2889  002228  6E01               	movwf	moveRobot@move,c
  2890  00222A  EC6C  F024         	call	_moveRobot	;wreg free
  2891                           
  2892                           ;main.c: 654:         dist = getDistance() - lateralDist;
  2893  00222E  EC56  F027         	call	_getDistance	;wreg free
  2894  002232  C046  F05C         	movff	?_getDistance,___flsub@b
  2895  002236  C047  F05D         	movff	?_getDistance+1,___flsub@b+1
  2896  00223A  C048  F05E         	movff	?_getDistance+2,___flsub@b+2
  2897  00223E  C049  F05F         	movff	?_getDistance+3,___flsub@b+3
  2898  002242  C17E  F060         	movff	_lateralDist,___flsub@a	;volatile
  2899  002246  C17F  F061         	movff	_lateralDist+1,___flsub@a+1	;volatile
  2900  00224A  C180  F062         	movff	_lateralDist+2,___flsub@a+2	;volatile
  2901  00224E  C181  F063         	movff	_lateralDist+3,___flsub@a+3	;volatile
  2902  002252  ECB4  F028         	call	___flsub	;wreg free
  2903  002256  C05C  F1E8         	movff	?___flsub,testDrive2@dist
  2904  00225A  C05D  F1E9         	movff	?___flsub+1,testDrive2@dist+1
  2905  00225E  C05E  F1EA         	movff	?___flsub+2,testDrive2@dist+2
  2906  002262  C05F  F1EB         	movff	?___flsub+3,testDrive2@dist+3
  2907                           
  2908                           ;main.c: 661:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2909  002266  0E01               	movlw	1
  2910  002268  EC9F  F02A         	call	_lcdInst
  2911  00226C  0E11               	movlw	17
  2912  00226E  0101               	movlb	1	; () banked
  2913  002270  6FDD               	movwf	??_testDrive2& (0+255),b
  2914  002272  0E3A               	movlw	58
  2915  002274                     u9587:
  2916  002274  2EE8               	decfsz	wreg,f,c
  2917  002276  D7FE               	bra	u9587
  2918  002278  2FDD               	decfsz	??_testDrive2& (0+255),f,b
  2919  00227A  D7FC               	bra	u9587
  2920  00227C  F000               	nop	
  2921                           
  2922                           ;main.c: 662:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  2923  00227E  0E80               	movlw	128
  2924  002280  EC9F  F02A         	call	_lcdInst
  2925  002284  0E07               	movlw	7
  2926  002286  0101               	movlb	1	; () banked
  2927  002288  6FDD               	movwf	??_testDrive2& (0+255),b
  2928  00228A  0E7D               	movlw	125
  2929  00228C                     u9597:
  2930  00228C  2EE8               	decfsz	wreg,f,c
  2931  00228E  D7FE               	bra	u9597
  2932  002290  2FDD               	decfsz	??_testDrive2& (0+255),f,b
  2933  002292  D7FC               	bra	u9597
  2934                           
  2935                           ;main.c: 663:         printf("%.2f", dist);
  2936  002294  0E78               	movlw	low (STR_10+7)
  2937  002296  0100               	movlb	0	; () banked
  2938  002298  6FEA               	movwf	printf@fmt& (0+255),b
  2939  00229A  0EFF               	movlw	high (STR_10+7)
  2940  00229C  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  2941  00229E  C1E8  F0EC         	movff	testDrive2@dist,?_printf+2
  2942  0022A2  C1E9  F0ED         	movff	testDrive2@dist+1,?_printf+3
  2943  0022A6  C1EA  F0EE         	movff	testDrive2@dist+2,?_printf+4
  2944  0022AA  C1EB  F0EF         	movff	testDrive2@dist+3,?_printf+5
  2945  0022AE  EC37  F02A         	call	_printf	;wreg free
  2946                           
  2947                           ;main.c: 664:         if (readDigitalSensor())
  2948  0022B2  ECCC  F022         	call	_readDigitalSensor	;wreg free
  2949  0022B6  5016               	movf	?_readDigitalSensor,w,c
  2950  0022B8  1017               	iorwf	?_readDigitalSensor+1,w,c
  2951  0022BA  B4D8               	btfsc	status,2,c
  2952  0022BC  D054               	goto	l8901
  2953                           
  2954                           ;main.c: 665:         {;main.c: 666:             lateralDist -= getDistance();
  2955  0022BE  C17E  F05C         	movff	_lateralDist,___flsub@b	;volatile
  2956  0022C2  C17F  F05D         	movff	_lateralDist+1,___flsub@b+1	;volatile
  2957  0022C6  C180  F05E         	movff	_lateralDist+2,___flsub@b+2	;volatile
  2958  0022CA  C181  F05F         	movff	_lateralDist+3,___flsub@b+3	;volatile
  2959  0022CE  EC56  F027         	call	_getDistance	;wreg free
  2960  0022D2  C046  F060         	movff	?_getDistance,___flsub@a
  2961  0022D6  C047  F061         	movff	?_getDistance+1,___flsub@a+1
  2962  0022DA  C048  F062         	movff	?_getDistance+2,___flsub@a+2
  2963  0022DE  C049  F063         	movff	?_getDistance+3,___flsub@a+3
  2964  0022E2  ECB4  F028         	call	___flsub	;wreg free
  2965  0022E6  C05C  F17E         	movff	?___flsub,_lateralDist	;volatile
  2966  0022EA  C05D  F17F         	movff	?___flsub+1,_lateralDist+1	;volatile
  2967  0022EE  C05E  F180         	movff	?___flsub+2,_lateralDist+2	;volatile
  2968  0022F2  C05F  F181         	movff	?___flsub+3,_lateralDist+3	;volatile
  2969                           
  2970                           ;main.c: 667:             detectCanisterTurned();
  2971  0022F6  EC4D  F00C         	call	_detectCanisterTurned	;wreg free
  2972                           
  2973                           ;main.c: 668:             lateralDist += getDistance();
  2974  0022FA  C17E  F04C         	movff	_lateralDist,___fladd@b	;volatile
  2975  0022FE  C17F  F04D         	movff	_lateralDist+1,___fladd@b+1	;volatile
  2976  002302  C180  F04E         	movff	_lateralDist+2,___fladd@b+2	;volatile
  2977  002306  C181  F04F         	movff	_lateralDist+3,___fladd@b+3	;volatile
  2978  00230A  EC56  F027         	call	_getDistance	;wreg free
  2979  00230E  C046  F050         	movff	?_getDistance,___fladd@a
  2980  002312  C047  F051         	movff	?_getDistance+1,___fladd@a+1
  2981  002316  C048  F052         	movff	?_getDistance+2,___fladd@a+2
  2982  00231A  C049  F053         	movff	?_getDistance+3,___fladd@a+3
  2983  00231E  ECEF  F00D         	call	___fladd	;wreg free
  2984  002322  C04C  F17E         	movff	?___fladd,_lateralDist	;volatile
  2985  002326  C04D  F17F         	movff	?___fladd+1,_lateralDist+1	;volatile
  2986  00232A  C04E  F180         	movff	?___fladd+2,_lateralDist+2	;volatile
  2987  00232E  C04F  F181         	movff	?___fladd+3,_lateralDist+3	;volatile
  2988                           
  2989                           ;main.c: 669:             lateralDist -= 13;
  2990  002332  C17E  F05C         	movff	_lateralDist,___flsub@b	;volatile
  2991  002336  C17F  F05D         	movff	_lateralDist+1,___flsub@b+1	;volatile
  2992  00233A  C180  F05E         	movff	_lateralDist+2,___flsub@b+2	;volatile
  2993  00233E  C181  F05F         	movff	_lateralDist+3,___flsub@b+3	;volatile
  2994  002342  0E00               	movlw	0
  2995  002344  6E60               	movwf	___flsub@a,c
  2996  002346  0E00               	movlw	0
  2997  002348  6E61               	movwf	___flsub@a+1,c
  2998  00234A  0E50               	movlw	80
  2999  00234C  6E62               	movwf	___flsub@a+2,c
  3000  00234E  0E41               	movlw	65
  3001  002350  6E63               	movwf	___flsub@a+3,c
  3002  002352  ECB4  F028         	call	___flsub	;wreg free
  3003  002356  C05C  F17E         	movff	?___flsub,_lateralDist	;volatile
  3004  00235A  C05D  F17F         	movff	?___flsub+1,_lateralDist+1	;volatile
  3005  00235E  C05E  F180         	movff	?___flsub+2,_lateralDist+2	;volatile
  3006  002362  C05F  F181         	movff	?___flsub+3,_lateralDist+3	;volatile
  3007  002366                     l8901:
  3008                           
  3009                           ;main.c: 672:         if(readFrontSensor() || readFrontSensor2())
  3010  002366  EC18  F023         	call	_readFrontSensor	;wreg free
  3011  00236A  5016               	movf	?_readFrontSensor,w,c
  3012  00236C  1017               	iorwf	?_readFrontSensor+1,w,c
  3013  00236E  A4D8               	btfss	status,2,c
  3014  002370  D006               	goto	u9080
  3015  002372  EC9C  F021         	call	_readFrontSensor2	;wreg free
  3016  002376  5016               	movf	?_readFrontSensor2,w,c
  3017  002378  1017               	iorwf	?_readFrontSensor2+1,w,c
  3018  00237A  B4D8               	btfsc	status,2,c
  3019  00237C  D03A               	goto	l198
  3020  00237E                     u9080:
  3021                           
  3022                           ;main.c: 673:         {;main.c: 674:             lateralDist -= getDistance();
  3023  00237E  C17E  F05C         	movff	_lateralDist,___flsub@b	;volatile
  3024  002382  C17F  F05D         	movff	_lateralDist+1,___flsub@b+1	;volatile
  3025  002386  C180  F05E         	movff	_lateralDist+2,___flsub@b+2	;volatile
  3026  00238A  C181  F05F         	movff	_lateralDist+3,___flsub@b+3	;volatile
  3027  00238E  EC56  F027         	call	_getDistance	;wreg free
  3028  002392  C046  F060         	movff	?_getDistance,___flsub@a
  3029  002396  C047  F061         	movff	?_getDistance+1,___flsub@a+1
  3030  00239A  C048  F062         	movff	?_getDistance+2,___flsub@a+2
  3031  00239E  C049  F063         	movff	?_getDistance+3,___flsub@a+3
  3032  0023A2  ECB4  F028         	call	___flsub	;wreg free
  3033  0023A6  C05C  F17E         	movff	?___flsub,_lateralDist	;volatile
  3034  0023AA  C05D  F17F         	movff	?___flsub+1,_lateralDist+1	;volatile
  3035  0023AE  C05E  F180         	movff	?___flsub+2,_lateralDist+2	;volatile
  3036  0023B2  C05F  F181         	movff	?___flsub+3,_lateralDist+3	;volatile
  3037                           
  3038                           ;main.c: 675:             avoidCan();
  3039  0023B6  EC47  F028         	call	_avoidCan	;wreg free
  3040                           
  3041                           ;main.c: 676:             lateralDist += getDistance();
  3042  0023BA  C17E  F04C         	movff	_lateralDist,___fladd@b	;volatile
  3043  0023BE  C17F  F04D         	movff	_lateralDist+1,___fladd@b+1	;volatile
  3044  0023C2  C180  F04E         	movff	_lateralDist+2,___fladd@b+2	;volatile
  3045  0023C6  C181  F04F         	movff	_lateralDist+3,___fladd@b+3	;volatile
  3046  0023CA  EC56  F027         	call	_getDistance	;wreg free
  3047  0023CE  C046  F050         	movff	?_getDistance,___fladd@a
  3048  0023D2  C047  F051         	movff	?_getDistance+1,___fladd@a+1
  3049  0023D6  C048  F052         	movff	?_getDistance+2,___fladd@a+2
  3050  0023DA  C049  F053         	movff	?_getDistance+3,___fladd@a+3
  3051  0023DE  ECEF  F00D         	call	___fladd	;wreg free
  3052  0023E2  C04C  F17E         	movff	?___fladd,_lateralDist	;volatile
  3053  0023E6  C04D  F17F         	movff	?___fladd+1,_lateralDist+1	;volatile
  3054  0023EA  C04E  F180         	movff	?___fladd+2,_lateralDist+2	;volatile
  3055  0023EE  C04F  F181         	movff	?___fladd+3,_lateralDist+3	;volatile
  3056  0023F2                     l198:
  3057                           
  3058                           ;main.c: 678:         if (readRemoteStart() == 1)
  3059  0023F2  ECAA  F020         	call	_readRemoteStart	;wreg free
  3060  0023F6  0416               	decf	?_readRemoteStart,w,c
  3061  0023F8  1017               	iorwf	?_readRemoteStart+1,w,c
  3062  0023FA  A4D8               	btfss	status,2,c
  3063  0023FC  D009               	goto	l8913
  3064                           
  3065                           ;main.c: 679:         {;main.c: 681:             moveRobot(0);
  3066  0023FE  0E00               	movlw	0
  3067  002400  6E02               	movwf	moveRobot@move+1,c
  3068  002402  0E00               	movlw	0
  3069  002404  6E01               	movwf	moveRobot@move,c
  3070  002406  EC6C  F024         	call	_moveRobot	;wreg free
  3071                           
  3072                           ;main.c: 682:             TMR0ON = 0;
  3073  00240A  9ED5               	bcf	4053,7,c	;volatile
  3074                           
  3075                           ;main.c: 683:             initMenu();
  3076  00240C  EC73  F013         	call	_initMenu	;wreg free
  3077  002410                     l8913:
  3078                           
  3079                           ;main.c: 651:     while ((dist - newDist) <= 430)
  3080  002410  0E00               	movlw	0
  3081  002412  6E64               	movwf	___flge@ff1,c
  3082  002414  0E00               	movlw	0
  3083  002416  6E65               	movwf	___flge@ff1+1,c
  3084  002418  0ED7               	movlw	215
  3085  00241A  6E66               	movwf	___flge@ff1+2,c
  3086  00241C  0E43               	movlw	67
  3087  00241E  6E67               	movwf	___flge@ff1+3,c
  3088  002420  C1E4  F060         	movff	testDrive2@newDist,___flsub@a
  3089  002424  C1E5  F061         	movff	testDrive2@newDist+1,___flsub@a+1
  3090  002428  C1E6  F062         	movff	testDrive2@newDist+2,___flsub@a+2
  3091  00242C  C1E7  F063         	movff	testDrive2@newDist+3,___flsub@a+3
  3092  002430  C1E8  F05C         	movff	testDrive2@dist,___flsub@b
  3093  002434  C1E9  F05D         	movff	testDrive2@dist+1,___flsub@b+1
  3094  002438  C1EA  F05E         	movff	testDrive2@dist+2,___flsub@b+2
  3095  00243C  C1EB  F05F         	movff	testDrive2@dist+3,___flsub@b+3
  3096  002440  ECB4  F028         	call	___flsub	;wreg free
  3097  002444  C05C  F068         	movff	?___flsub,___flge@ff2
  3098  002448  C05D  F069         	movff	?___flsub+1,___flge@ff2+1
  3099  00244C  C05E  F06A         	movff	?___flsub+2,___flge@ff2+2
  3100  002450  C05F  F06B         	movff	?___flsub+3,___flge@ff2+3
  3101  002454  EC7F  F01F         	call	___flge	;wreg free
  3102  002458  A0D8               	btfss	status,0,c
  3103  00245A  0012               	return	
  3104  00245C  D6E2               	goto	l8877
  3105  00245E                     __end_of_testDrive2:
  3106                           	opt callstack 0
  3107                           
  3108 ;; *************** function _detectCanisterTurned *****************
  3109 ;; Defined at:
  3110 ;;		line 458 in file "main.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  can             9   36[BANK1 ] struct canister
  3115 ;;  prevCan         9   12[BANK1 ] struct canister
  3116 ;;  prevDist        4   21[BANK1 ] float 
  3117 ;;  curDist         4    6[BANK1 ] float 
  3118 ;;  avgDist         4    0        float 
  3119 ;;  dist3           2   34[BANK1 ] int 
  3120 ;;  state           2   30[BANK1 ] int 
  3121 ;;  dist2           2   28[BANK1 ] int 
  3122 ;;  dist4           2   26[BANK1 ] int 
  3123 ;;  dist1           2   10[BANK1 ] int 
  3124 ;;  dist5           2    0        int 
  3125 ;;  i               2    0        int 
  3126 ;;  deposited       1   33[BANK1 ] _Bool 
  3127 ;;  status          1   32[BANK1 ] _Bool 
  3128 ;;  success         1   25[BANK1 ] _Bool 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Locals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Totals:         0       2      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;Total ram usage:       41 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:   14
  3145 ;; This function calls:
  3146 ;;		___flge
  3147 ;;		___flsub
  3148 ;;		_distFromCanister
  3149 ;;		_getData
  3150 ;;		_increaseNumBalls
  3151 ;;		_moveRobot
  3152 ;;		_readDigitalSensor
  3153 ;;		_releaseDoor
  3154 ;;		_setBackward
  3155 ;;		_setForward
  3156 ;;		_setRight
  3157 ;;		_updateCanData
  3158 ;; This function is called by:
  3159 ;;		_testDrive2
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text3
  3164  00189A                     __ptext3:
  3165                           	opt callstack 0
  3166  00189A                     _detectCanisterTurned:
  3167                           	opt callstack 15
  3168                           
  3169                           ;main.c: 460:     LATBbits.LATB3 = 1;
  3170                           
  3171                           ;incstack = 0
  3172  00189A  868A               	bsf	3978,3,c	;volatile
  3173                           
  3174                           ;main.c: 462:     canister can;;main.c: 463:     canister prevCan;;main.c: 464:     floa
      +                          t prevDist, curDist;;main.c: 465:     int i;;main.c: 466:     float avgDist;;main.c: 467
      +                          :     _Bool status, deposited;;main.c: 468:     _Bool success;;main.c: 469:     int dist
      +                          1, dist2, dist3, dist4, dist5;;main.c: 470:     int state;;main.c: 472:     can = getDat
      +                          a(canID);
  3175  00189C  C18E  F007         	movff	_canID,getData@id	;volatile
  3176  0018A0  C18F  F008         	movff	_canID+1,getData@id+1	;volatile
  3177  0018A4  EC67  F029         	call	_getData	;wreg free
  3178  0018A8  EE21  F0D4         	lfsr	2,detectCanisterTurned@can
  3179  0018AC  0E08               	movlw	8
  3180  0018AE                     u8671:
  3181  0018AE  CFEB FFDB          	movff	plusw0,plusw2
  3182  0018B2  06E8               	decf	wreg,f,c
  3183  0018B4  E2FC               	bc	u8671
  3184                           
  3185                           ;main.c: 473:     if (canID > 1)
  3186  0018B6  0101               	movlb	1	; () banked
  3187  0018B8  BF8F               	btfsc	(_canID+1)& (0+255),7,b	;volatile
  3188  0018BA  D01E               	goto	l8497
  3189  0018BC  518F               	movf	(_canID+1)& (0+255),w,b	;volatile
  3190  0018BE  E104               	bnz	u8680
  3191  0018C0  0E02               	movlw	2
  3192  0018C2  5D8E               	subwf	_canID& (0+255),w,b	;volatile
  3193  0018C4  A0D8               	btfss	status,0,c
  3194  0018C6  D018               	goto	l8497
  3195  0018C8                     u8680:
  3196                           
  3197                           ; BSR set to: 1
  3198                           ;main.c: 474:     {;main.c: 475:         prevCan = getData(canID - 1);
  3199  0018C8  0EFF               	movlw	255
  3200  0018CA  258E               	addwf	_canID& (0+255),w,b	;volatile
  3201  0018CC  6E07               	movwf	getData@id,c
  3202  0018CE  0EFF               	movlw	255
  3203  0018D0  218F               	addwfc	(_canID+1)& (0+255),w,b	;volatile
  3204  0018D2  6E08               	movwf	getData@id+1,c
  3205  0018D4  EC67  F029         	call	_getData	;wreg free
  3206  0018D8  EE21  F0BC         	lfsr	2,detectCanisterTurned@prevCan
  3207  0018DC  0E08               	movlw	8
  3208  0018DE                     u8691:
  3209  0018DE  CFEB FFDB          	movff	plusw0,plusw2
  3210  0018E2  06E8               	decf	wreg,f,c
  3211  0018E4  E2FC               	bc	u8691
  3212                           
  3213                           ;main.c: 476:         prevDist = (prevCan.distance);
  3214  0018E6  C1BF  F1C5         	movff	detectCanisterTurned@prevCan+3,detectCanisterTurned@prevDist
  3215  0018EA  C1C0  F1C6         	movff	detectCanisterTurned@prevCan+4,detectCanisterTurned@prevDist+1
  3216  0018EE  C1C1  F1C7         	movff	detectCanisterTurned@prevCan+5,detectCanisterTurned@prevDist+2
  3217  0018F2  C1C2  F1C8         	movff	detectCanisterTurned@prevCan+6,detectCanisterTurned@prevDist+3
  3218                           
  3219                           ;main.c: 477:     }
  3220  0018F6  D008               	goto	l8499
  3221  0018F8                     l8497:
  3222                           
  3223                           ; BSR set to: 1
  3224                           ;main.c: 479:     {;main.c: 480:         prevDist = -50;
  3225  0018F8  0E00               	movlw	0
  3226  0018FA  6FC5               	movwf	detectCanisterTurned@prevDist& (0+255),b
  3227  0018FC  0E00               	movlw	0
  3228  0018FE  6FC6               	movwf	(detectCanisterTurned@prevDist+1)& (0+255),b
  3229  001900  0E48               	movlw	72
  3230  001902  6FC7               	movwf	(detectCanisterTurned@prevDist+2)& (0+255),b
  3231  001904  0EC2               	movlw	194
  3232  001906  6FC8               	movwf	(detectCanisterTurned@prevDist+3)& (0+255),b
  3233  001908                     l8499:
  3234                           
  3235                           ;main.c: 483:     curDist = can.distance;
  3236  001908  C1D7  F1B6         	movff	detectCanisterTurned@can+3,detectCanisterTurned@curDist
  3237  00190C  C1D8  F1B7         	movff	detectCanisterTurned@can+4,detectCanisterTurned@curDist+1
  3238  001910  C1D9  F1B8         	movff	detectCanisterTurned@can+5,detectCanisterTurned@curDist+2
  3239  001914  C1DA  F1B9         	movff	detectCanisterTurned@can+6,detectCanisterTurned@curDist+3
  3240                           
  3241                           ;main.c: 485:     while(readDigitalSensor())
  3242  001918  D006               	goto	l8503
  3243  00191A                     l8501:
  3244                           
  3245                           ;main.c: 486:     {;main.c: 487:         moveRobot(1);
  3246  00191A  0E00               	movlw	0
  3247  00191C  6E02               	movwf	moveRobot@move+1,c
  3248  00191E  0E01               	movlw	1
  3249  001920  6E01               	movwf	moveRobot@move,c
  3250  001922  EC6C  F024         	call	_moveRobot	;wreg free
  3251  001926                     l8503:
  3252                           
  3253                           ;main.c: 485:     while(readDigitalSensor())
  3254  001926  ECCC  F022         	call	_readDigitalSensor	;wreg free
  3255  00192A  5016               	movf	?_readDigitalSensor,w,c
  3256  00192C  1017               	iorwf	?_readDigitalSensor+1,w,c
  3257  00192E  B4D8               	btfsc	status,2,c
  3258  001930  D007               	goto	l8507
  3259  001932  D7F3               	goto	l8501
  3260  001934                     l8505:
  3261                           
  3262                           ;main.c: 490:     {;main.c: 491:         moveRobot(2);
  3263  001934  0E00               	movlw	0
  3264  001936  6E02               	movwf	moveRobot@move+1,c
  3265  001938  0E02               	movlw	2
  3266  00193A  6E01               	movwf	moveRobot@move,c
  3267  00193C  EC6C  F024         	call	_moveRobot	;wreg free
  3268  001940                     l8507:
  3269                           
  3270                           ;main.c: 489:     while(!readDigitalSensor())
  3271  001940  ECCC  F022         	call	_readDigitalSensor	;wreg free
  3272  001944  5016               	movf	?_readDigitalSensor,w,c
  3273  001946  1017               	iorwf	?_readDigitalSensor+1,w,c
  3274  001948  B4D8               	btfsc	status,2,c
  3275  00194A  D7F4               	goto	l8505
  3276                           
  3277                           ;main.c: 493:     setBackward(1);
  3278  00194C  0E00               	movlw	0
  3279  00194E  0100               	movlb	0	; () banked
  3280  001950  6FFB               	movwf	(setBackward@count+1)& (0+255),b
  3281  001952  0E01               	movlw	1
  3282  001954  6FFA               	movwf	setBackward@count& (0+255),b
  3283  001956  EC59  F025         	call	_setBackward	;wreg free
  3284                           
  3285                           ;main.c: 495:     dist2 = distFromCanister(2);
  3286  00195A  0E00               	movlw	0
  3287  00195C  6E17               	movwf	distFromCanister@sensor+1,c
  3288  00195E  0E02               	movlw	2
  3289  001960  6E16               	movwf	distFromCanister@sensor,c
  3290  001962  EC80  F01C         	call	_distFromCanister	;wreg free
  3291  001966  C016  F1CC         	movff	?_distFromCanister,detectCanisterTurned@dist2
  3292  00196A  C017  F1CD         	movff	?_distFromCanister+1,detectCanisterTurned@dist2+1
  3293                           
  3294                           ;main.c: 496:     dist3 = distFromCanister(7);
  3295  00196E  0E00               	movlw	0
  3296  001970  6E17               	movwf	distFromCanister@sensor+1,c
  3297  001972  0E07               	movlw	7
  3298  001974  6E16               	movwf	distFromCanister@sensor,c
  3299  001976  EC80  F01C         	call	_distFromCanister	;wreg free
  3300  00197A  C016  F1D2         	movff	?_distFromCanister,detectCanisterTurned@dist3
  3301  00197E  C017  F1D3         	movff	?_distFromCanister+1,detectCanisterTurned@dist3+1
  3302  001982  0E00               	movlw	0
  3303  001984  6E17               	movwf	distFromCanister@sensor+1,c
  3304  001986  0E08               	movlw	8
  3305  001988  6E16               	movwf	distFromCanister@sensor,c
  3306  00198A  EC80  F01C         	call	_distFromCanister	;wreg free
  3307                           
  3308                           ;main.c: 498:     if (dist2 > 0 )
  3309  00198E  0101               	movlb	1	; () banked
  3310  001990  BFCD               	btfsc	(detectCanisterTurned@dist2+1)& (0+255),7,b
  3311  001992  D044               	goto	u8760
  3312  001994  51CD               	movf	(detectCanisterTurned@dist2+1)& (0+255),w,b
  3313  001996  E131               	bnz	l8533
  3314  001998  05CC               	decf	detectCanisterTurned@dist2& (0+255),w,b
  3315  00199A  B0D8               	btfsc	status,0,c
  3316  00199C  D02E               	goto	l8533
  3317  00199E  D03E               	goto	u8760
  3318  0019A0                     l8521:
  3319                           
  3320                           ; BSR set to: 1
  3321                           ;main.c: 501:         {;main.c: 502:             if ((dist3 > 975))
  3322  0019A0  BFD3               	btfsc	(detectCanisterTurned@dist3+1)& (0+255),7,b
  3323  0019A2  D00D               	goto	l8525
  3324  0019A4  0ED0               	movlw	208
  3325  0019A6  5DD2               	subwf	detectCanisterTurned@dist3& (0+255),w,b
  3326  0019A8  0E03               	movlw	3
  3327  0019AA  59D3               	subwfb	(detectCanisterTurned@dist3+1)& (0+255),w,b
  3328  0019AC  A0D8               	btfss	status,0,c
  3329  0019AE  D007               	goto	l8525
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;main.c: 503:                 moveRobot(3);
  3333  0019B0  0E00               	movlw	0
  3334  0019B2  6E02               	movwf	moveRobot@move+1,c
  3335  0019B4  0E03               	movlw	3
  3336  0019B6  6E01               	movwf	moveRobot@move,c
  3337  0019B8  EC6C  F024         	call	_moveRobot	;wreg free
  3338  0019BC  D00E               	goto	l8529
  3339  0019BE                     l8525:
  3340                           
  3341                           ; BSR set to: 1
  3342  0019BE  BFD3               	btfsc	(detectCanisterTurned@dist3+1)& (0+255),7,b
  3343  0019C0  D006               	goto	u8740
  3344  0019C2  0ECF               	movlw	207
  3345  0019C4  5DD2               	subwf	detectCanisterTurned@dist3& (0+255),w,b
  3346  0019C6  0E03               	movlw	3
  3347  0019C8  59D3               	subwfb	(detectCanisterTurned@dist3+1)& (0+255),w,b
  3348  0019CA  B0D8               	btfsc	status,0,c
  3349  0019CC  D006               	goto	l8529
  3350  0019CE                     u8740:
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;main.c: 505:                 moveRobot(4);
  3354  0019CE  0E00               	movlw	0
  3355  0019D0  6E02               	movwf	moveRobot@move+1,c
  3356  0019D2  0E04               	movlw	4
  3357  0019D4  6E01               	movwf	moveRobot@move,c
  3358  0019D6  EC6C  F024         	call	_moveRobot	;wreg free
  3359  0019DA                     l8529:
  3360                           
  3361                           ;main.c: 507:             dist3 = distFromCanister(7);
  3362  0019DA  0E00               	movlw	0
  3363  0019DC  6E17               	movwf	distFromCanister@sensor+1,c
  3364  0019DE  0E07               	movlw	7
  3365  0019E0  6E16               	movwf	distFromCanister@sensor,c
  3366  0019E2  EC80  F01C         	call	_distFromCanister	;wreg free
  3367  0019E6  C016  F1D2         	movff	?_distFromCanister,detectCanisterTurned@dist3
  3368  0019EA  C017  F1D3         	movff	?_distFromCanister+1,detectCanisterTurned@dist3+1
  3369  0019EE  0E00               	movlw	0
  3370  0019F0  6E17               	movwf	distFromCanister@sensor+1,c
  3371  0019F2  0E08               	movlw	8
  3372  0019F4  6E16               	movwf	distFromCanister@sensor,c
  3373  0019F6  EC80  F01C         	call	_distFromCanister	;wreg free
  3374  0019FA                     l8533:
  3375                           
  3376                           ;main.c: 500:         while ((dist3 > 975)|| (dist3 < 975))
  3377  0019FA  0101               	movlb	1	; () banked
  3378  0019FC  BFD3               	btfsc	(detectCanisterTurned@dist3+1)& (0+255),7,b
  3379  0019FE  D006               	goto	u8750
  3380  001A00  0ED0               	movlw	208
  3381  001A02  5DD2               	subwf	detectCanisterTurned@dist3& (0+255),w,b
  3382  001A04  0E03               	movlw	3
  3383  001A06  59D3               	subwfb	(detectCanisterTurned@dist3+1)& (0+255),w,b
  3384  001A08  B0D8               	btfsc	status,0,c
  3385  001A0A  D7CA               	goto	l8521
  3386  001A0C                     u8750:
  3387                           
  3388                           ; BSR set to: 1
  3389  001A0C  BFD3               	btfsc	(detectCanisterTurned@dist3+1)& (0+255),7,b
  3390  001A0E  D7C8               	goto	l8521
  3391  001A10  0ECF               	movlw	207
  3392  001A12  5DD2               	subwf	detectCanisterTurned@dist3& (0+255),w,b
  3393  001A14  0E03               	movlw	3
  3394  001A16  59D3               	subwfb	(detectCanisterTurned@dist3+1)& (0+255),w,b
  3395  001A18  A0D8               	btfss	status,0,c
  3396  001A1A  D7C2               	goto	l8521
  3397  001A1C                     u8760:
  3398                           
  3399                           ; BSR set to: 1
  3400                           ;main.c: 512:     moveRobot(0);
  3401  001A1C  0E00               	movlw	0
  3402  001A1E  6E02               	movwf	moveRobot@move+1,c
  3403  001A20  0E00               	movlw	0
  3404  001A22  6E01               	movwf	moveRobot@move,c
  3405  001A24  EC6C  F024         	call	_moveRobot	;wreg free
  3406                           
  3407                           ;main.c: 514:     _delay((unsigned long)((500)*(10000000/4000.0)));
  3408  001A28  0E07               	movlw	7
  3409  001A2A  0100               	movlb	0	; () banked
  3410  001A2C  6FFF               	movwf	(??_detectCanisterTurned+1)& (0+255),b
  3411  001A2E  0E58               	movlw	88
  3412  001A30  6FFE               	movwf	??_detectCanisterTurned& (0+255),b
  3413  001A32  0E59               	movlw	89
  3414  001A34                     u9607:
  3415  001A34  2EE8               	decfsz	wreg,f,c
  3416  001A36  D7FE               	bra	u9607
  3417  001A38  2FFE               	decfsz	??_detectCanisterTurned& (0+255),f,b
  3418  001A3A  D7FC               	bra	u9607
  3419  001A3C  2FFF               	decfsz	(??_detectCanisterTurned+1)& (0+255),f,b
  3420  001A3E  D7FA               	bra	u9607
  3421  001A40  D000               	nop2	
  3422                           
  3423                           ;main.c: 516:     dist1 = distFromCanister(1);
  3424  001A42  0E00               	movlw	0
  3425  001A44  6E17               	movwf	distFromCanister@sensor+1,c
  3426  001A46  0E01               	movlw	1
  3427  001A48  6E16               	movwf	distFromCanister@sensor,c
  3428  001A4A  EC80  F01C         	call	_distFromCanister	;wreg free
  3429  001A4E  C016  F1BA         	movff	?_distFromCanister,detectCanisterTurned@dist1
  3430  001A52  C017  F1BB         	movff	?_distFromCanister+1,detectCanisterTurned@dist1+1
  3431                           
  3432                           ;main.c: 518:     dist2 = distFromCanister(2);
  3433  001A56  0E00               	movlw	0
  3434  001A58  6E17               	movwf	distFromCanister@sensor+1,c
  3435  001A5A  0E02               	movlw	2
  3436  001A5C  6E16               	movwf	distFromCanister@sensor,c
  3437  001A5E  EC80  F01C         	call	_distFromCanister	;wreg free
  3438  001A62  C016  F1CC         	movff	?_distFromCanister,detectCanisterTurned@dist2
  3439  001A66  C017  F1CD         	movff	?_distFromCanister+1,detectCanisterTurned@dist2+1
  3440  001A6A  0E00               	movlw	0
  3441  001A6C  6E17               	movwf	distFromCanister@sensor+1,c
  3442  001A6E  0E07               	movlw	7
  3443  001A70  6E16               	movwf	distFromCanister@sensor,c
  3444  001A72  EC80  F01C         	call	_distFromCanister	;wreg free
  3445                           
  3446                           ;main.c: 521:     dist4 = distFromCanister(8);
  3447  001A76  0E00               	movlw	0
  3448  001A78  6E17               	movwf	distFromCanister@sensor+1,c
  3449  001A7A  0E08               	movlw	8
  3450  001A7C  6E16               	movwf	distFromCanister@sensor,c
  3451  001A7E  EC80  F01C         	call	_distFromCanister	;wreg free
  3452  001A82  C016  F1CA         	movff	?_distFromCanister,detectCanisterTurned@dist4
  3453  001A86  C017  F1CB         	movff	?_distFromCanister+1,detectCanisterTurned@dist4+1
  3454                           
  3455                           ;main.c: 522:     if ((dist1 > 700)&&(dist2 > 500)&&(dist4 < 750))
  3456  001A8A  0101               	movlb	1	; () banked
  3457  001A8C  BFBB               	btfsc	(detectCanisterTurned@dist1+1)& (0+255),7,b
  3458  001A8E  D019               	goto	l8557
  3459  001A90  0EBD               	movlw	189
  3460  001A92  5DBA               	subwf	detectCanisterTurned@dist1& (0+255),w,b
  3461  001A94  0E02               	movlw	2
  3462  001A96  59BB               	subwfb	(detectCanisterTurned@dist1+1)& (0+255),w,b
  3463  001A98  B0D8               	btfsc	status,0,c
  3464                           
  3465                           ; BSR set to: 1
  3466  001A9A  BFCD               	btfsc	(detectCanisterTurned@dist2+1)& (0+255),7,b
  3467  001A9C  D012               	goto	l8557
  3468  001A9E  0EF5               	movlw	245
  3469  001AA0  5DCC               	subwf	detectCanisterTurned@dist2& (0+255),w,b
  3470  001AA2  0E01               	movlw	1
  3471  001AA4  59CD               	subwfb	(detectCanisterTurned@dist2+1)& (0+255),w,b
  3472  001AA6  A0D8               	btfss	status,0,c
  3473  001AA8  D00C               	goto	l8557
  3474                           
  3475                           ; BSR set to: 1
  3476  001AAA  BFCB               	btfsc	(detectCanisterTurned@dist4+1)& (0+255),7,b
  3477  001AAC  D006               	goto	u8790
  3478  001AAE  0EEE               	movlw	238
  3479  001AB0  5DCA               	subwf	detectCanisterTurned@dist4& (0+255),w,b
  3480  001AB2  0E02               	movlw	2
  3481  001AB4  59CB               	subwfb	(detectCanisterTurned@dist4+1)& (0+255),w,b
  3482  001AB6  B0D8               	btfsc	status,0,c
  3483  001AB8  D004               	goto	l8557
  3484  001ABA                     u8790:
  3485                           
  3486                           ; BSR set to: 1
  3487                           ;main.c: 523:     {;main.c: 524:         state = 1;
  3488  001ABA  0E00               	movlw	0
  3489  001ABC  6FCF               	movwf	(detectCanisterTurned@state+1)& (0+255),b
  3490  001ABE  0E01               	movlw	1
  3491  001AC0  D003               	goto	L1
  3492  001AC2                     l8557:
  3493                           
  3494                           ; BSR set to: 1
  3495                           ;main.c: 527:     {;main.c: 528:         state = 0;
  3496  001AC2  0E00               	movlw	0
  3497  001AC4  6FCF               	movwf	(detectCanisterTurned@state+1)& (0+255),b
  3498  001AC6  0E00               	movlw	0
  3499  001AC8                     L1:
  3500  001AC8  6FCE               	movwf	detectCanisterTurned@state& (0+255),b
  3501                           
  3502                           ; BSR set to: 1
  3503                           ;main.c: 532:     if (state == 0)
  3504  001ACA  51CE               	movf	detectCanisterTurned@state& (0+255),w,b
  3505  001ACC  11CF               	iorwf	(detectCanisterTurned@state+1)& (0+255),w,b
  3506  001ACE  A4D8               	btfss	status,2,c
  3507  001AD0  D00A               	goto	l8565
  3508                           
  3509                           ; BSR set to: 1
  3510                           ;main.c: 533:     {;main.c: 534:         if (can.facing == 0)
  3511  001AD2  51D6               	movf	(detectCanisterTurned@can+2)& (0+255),w,b
  3512  001AD4  A4D8               	btfss	status,2,c
  3513  001AD6  D002               	goto	l170
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;main.c: 535:         {;main.c: 536:             status = 1;
  3517  001AD8  0E01               	movlw	1
  3518  001ADA  D061               	goto	L2
  3519  001ADC                     l170:
  3520                           
  3521                           ; BSR set to: 1
  3522                           ;main.c: 540:         {;main.c: 541:             status = can.status;
  3523  001ADC  C1DB  F1D0         	movff	detectCanisterTurned@can+7,detectCanisterTurned@status
  3524                           
  3525                           ;main.c: 542:             deposited = can.ballDeposited;
  3526  001AE0  C1DC  F1D1         	movff	detectCanisterTurned@can+8,detectCanisterTurned@deposited
  3527  001AE4  D05F               	goto	l8591
  3528  001AE6                     l8565:
  3529                           
  3530                           ; BSR set to: 1
  3531  001AE6  05CE               	decf	detectCanisterTurned@state& (0+255),w,b
  3532  001AE8  11CF               	iorwf	(detectCanisterTurned@state+1)& (0+255),w,b
  3533  001AEA  A4D8               	btfss	status,2,c
  3534  001AEC  D05B               	goto	l8591
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;main.c: 546:     {;main.c: 547:         setRight(5);
  3538  001AEE  0E00               	movlw	0
  3539  001AF0  0100               	movlb	0	; () banked
  3540  001AF2  6FFB               	movwf	(setRight@count+1)& (0+255),b
  3541  001AF4  0E05               	movlw	5
  3542  001AF6  6FFA               	movwf	setRight@count& (0+255),b
  3543  001AF8  ECE5  F024         	call	_setRight	;wreg free
  3544                           
  3545                           ;main.c: 548:         if ((curDist - prevDist) >= 30)
  3546  001AFC  C1C5  F060         	movff	detectCanisterTurned@prevDist,___flsub@a
  3547  001B00  C1C6  F061         	movff	detectCanisterTurned@prevDist+1,___flsub@a+1
  3548  001B04  C1C7  F062         	movff	detectCanisterTurned@prevDist+2,___flsub@a+2
  3549  001B08  C1C8  F063         	movff	detectCanisterTurned@prevDist+3,___flsub@a+3
  3550  001B0C  C1B6  F05C         	movff	detectCanisterTurned@curDist,___flsub@b
  3551  001B10  C1B7  F05D         	movff	detectCanisterTurned@curDist+1,___flsub@b+1
  3552  001B14  C1B8  F05E         	movff	detectCanisterTurned@curDist+2,___flsub@b+2
  3553  001B18  C1B9  F05F         	movff	detectCanisterTurned@curDist+3,___flsub@b+3
  3554  001B1C  ECB4  F028         	call	___flsub	;wreg free
  3555  001B20  C05C  F064         	movff	?___flsub,___flge@ff1
  3556  001B24  C05D  F065         	movff	?___flsub+1,___flge@ff1+1
  3557  001B28  C05E  F066         	movff	?___flsub+2,___flge@ff1+2
  3558  001B2C  C05F  F067         	movff	?___flsub+3,___flge@ff1+3
  3559  001B30  0E00               	movlw	0
  3560  001B32  6E68               	movwf	___flge@ff2,c
  3561  001B34  0E00               	movlw	0
  3562  001B36  6E69               	movwf	___flge@ff2+1,c
  3563  001B38  0EF0               	movlw	240
  3564  001B3A  6E6A               	movwf	___flge@ff2+2,c
  3565  001B3C  0E41               	movlw	65
  3566  001B3E  6E6B               	movwf	___flge@ff2+3,c
  3567  001B40  EC7F  F01F         	call	___flge	;wreg free
  3568  001B44  A0D8               	btfss	status,0,c
  3569  001B46  D029               	goto	l8587
  3570                           
  3571                           ;main.c: 549:         {;main.c: 550:             setForward(7);
  3572  001B48  0E00               	movlw	0
  3573  001B4A  0100               	movlb	0	; () banked
  3574  001B4C  6FFB               	movwf	(setForward@count+1)& (0+255),b
  3575  001B4E  0E07               	movlw	7
  3576  001B50  6FFA               	movwf	setForward@count& (0+255),b
  3577  001B52  EC1F  F025         	call	_setForward	;wreg free
  3578                           
  3579                           ;main.c: 551:             moveRobot(0);
  3580  001B56  0E00               	movlw	0
  3581  001B58  6E02               	movwf	moveRobot@move+1,c
  3582  001B5A  0E00               	movlw	0
  3583  001B5C  6E01               	movwf	moveRobot@move,c
  3584  001B5E  EC6C  F024         	call	_moveRobot	;wreg free
  3585                           
  3586                           ;main.c: 552:             success = releaseDoor();
  3587  001B62  EC70  F02A         	call	_releaseDoor	;wreg free
  3588  001B66  0101               	movlb	1	; () banked
  3589  001B68  6FC9               	movwf	detectCanisterTurned@success& (0+255),b
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;main.c: 553:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  3593  001B6A  0E0D               	movlw	13
  3594  001B6C  0100               	movlb	0	; () banked
  3595  001B6E  6FFF               	movwf	(??_detectCanisterTurned+1)& (0+255),b
  3596  001B70  0EAF               	movlw	175
  3597  001B72  6FFE               	movwf	??_detectCanisterTurned& (0+255),b
  3598  001B74  0EB6               	movlw	182
  3599  001B76                     u9617:
  3600  001B76  2EE8               	decfsz	wreg,f,c
  3601  001B78  D7FE               	bra	u9617
  3602  001B7A  2FFE               	decfsz	??_detectCanisterTurned& (0+255),f,b
  3603  001B7C  D7FC               	bra	u9617
  3604  001B7E  2FFF               	decfsz	(??_detectCanisterTurned+1)& (0+255),f,b
  3605  001B80  D7FA               	bra	u9617
  3606  001B82  F000               	nop	
  3607                           
  3608                           ;main.c: 555:             if (success)
  3609  001B84  0101               	movlb	1	; () banked
  3610  001B86  51C9               	movf	detectCanisterTurned@success& (0+255),w,b
  3611  001B88  B4D8               	btfsc	status,2,c
  3612  001B8A  D007               	goto	l8587
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;main.c: 556:             {;main.c: 557:                 increaseNumBalls();
  3616  001B8C  ECBA  F02A         	call	_increaseNumBalls	;wreg free
  3617                           
  3618                           ;main.c: 558:                 status = 1;
  3619  001B90  0E01               	movlw	1
  3620  001B92  0101               	movlb	1	; () banked
  3621  001B94  6FD0               	movwf	detectCanisterTurned@status& (0+255),b
  3622                           
  3623                           ; BSR set to: 1
  3624                           ;main.c: 559:                 deposited = 1;
  3625  001B96  0E01               	movlw	1
  3626  001B98  D004               	goto	L3
  3627  001B9A                     l8587:
  3628                           
  3629                           ;main.c: 562:             {;main.c: 563:                 status = 0;
  3630  001B9A  0E00               	movlw	0
  3631  001B9C  0101               	movlb	1	; () banked
  3632  001B9E                     L2:
  3633  001B9E  6FD0               	movwf	detectCanisterTurned@status& (0+255),b
  3634                           
  3635                           ;main.c: 564:                 deposited = 0;
  3636  001BA0  0E00               	movlw	0
  3637  001BA2                     L3:
  3638  001BA2  6FD1               	movwf	detectCanisterTurned@deposited& (0+255),b
  3639  001BA4                     l8591:
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;main.c: 573:     updateCanData(canID, status, deposited);
  3643  001BA4  C18E  F007         	movff	_canID,updateCanData@id	;volatile
  3644  001BA8  C18F  F008         	movff	_canID+1,updateCanData@id+1	;volatile
  3645  001BAC  C1D0  F009         	movff	detectCanisterTurned@status,updateCanData@status
  3646  001BB0  C1D1  F00A         	movff	detectCanisterTurned@deposited,updateCanData@deposit
  3647  001BB4  EC22  F028         	call	_updateCanData	;wreg free
  3648                           
  3649                           ;main.c: 574:     canID--;
  3650  001BB8  0101               	movlb	1	; () banked
  3651  001BBA  078E               	decf	_canID& (0+255),f,b	;volatile
  3652  001BBC  A0D8               	btfss	status,0,c
  3653  001BBE  078F               	decf	(_canID+1)& (0+255),f,b	;volatile
  3654                           
  3655                           ;main.c: 575:     while(readDigitalSensor())
  3656  001BC0  D006               	goto	l8597
  3657  001BC2                     l8595:
  3658                           
  3659                           ;main.c: 576:     {;main.c: 577:         moveRobot(1);
  3660  001BC2  0E00               	movlw	0
  3661  001BC4  6E02               	movwf	moveRobot@move+1,c
  3662  001BC6  0E01               	movlw	1
  3663  001BC8  6E01               	movwf	moveRobot@move,c
  3664  001BCA  EC6C  F024         	call	_moveRobot	;wreg free
  3665  001BCE                     l8597:
  3666                           
  3667                           ;main.c: 575:     while(readDigitalSensor())
  3668  001BCE  ECCC  F022         	call	_readDigitalSensor	;wreg free
  3669  001BD2  5016               	movf	?_readDigitalSensor,w,c
  3670  001BD4  1017               	iorwf	?_readDigitalSensor+1,w,c
  3671  001BD6  A4D8               	btfss	status,2,c
  3672  001BD8  D7F4               	goto	l8595
  3673                           
  3674                           ;main.c: 579:     LATBbits.LATB3 = 0;
  3675  001BDA  968A               	bcf	3978,3,c	;volatile
  3676  001BDC  0012               	return		;funcret
  3677  001BDE                     __end_of_detectCanisterTurned:
  3678                           	opt callstack 0
  3679                           
  3680 ;; *************** function _updateCanData *****************
  3681 ;; Defined at:
  3682 ;;		line 42 in file "data.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  id              2    6[COMRAM] int 
  3685 ;;  status          1    8[COMRAM] _Bool 
  3686 ;;  deposit         1    9[COMRAM] _Bool 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;Total ram usage:        4 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    2
  3705 ;; This function calls:
  3706 ;;		___wmul
  3707 ;; This function is called by:
  3708 ;;		_detectCanisterTurned
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text4
  3713  005044                     __ptext4:
  3714                           	opt callstack 0
  3715  005044                     _updateCanData:
  3716                           	opt callstack 26
  3717                           
  3718                           ;data.c: 42: void updateCanData(int id, _Bool status, _Bool deposit);data.c: 43: {;data.
      +                          c: 44:     (cans[id-1]).status = status;
  3719                           
  3720                           ;incstack = 0
  3721  005044  C007  F001         	movff	updateCanData@id,___wmul@multiplier
  3722  005048  C008  F002         	movff	updateCanData@id+1,___wmul@multiplier+1
  3723  00504C  0E00               	movlw	0
  3724  00504E  6E04               	movwf	___wmul@multiplicand+1,c
  3725  005050  0E09               	movlw	9
  3726  005052  6E03               	movwf	___wmul@multiplicand,c
  3727  005054  EC4B  F02A         	call	___wmul	;wreg free
  3728  005058  0EFE               	movlw	low (_cans+65534)
  3729  00505A  2401               	addwf	?___wmul,w,c
  3730  00505C  6ED9               	movwf	fsr2l,c
  3731  00505E  0E00               	movlw	high (_cans+65534)
  3732  005060  2002               	addwfc	?___wmul+1,w,c
  3733  005062  6EDA               	movwf	fsr2h,c
  3734  005064  C009  FFDF         	movff	updateCanData@status,indf2
  3735                           
  3736                           ;data.c: 45:     (cans[id-1]).ballDeposited = deposit;
  3737  005068  C007  F001         	movff	updateCanData@id,___wmul@multiplier
  3738  00506C  C008  F002         	movff	updateCanData@id+1,___wmul@multiplier+1
  3739  005070  0E00               	movlw	0
  3740  005072  6E04               	movwf	___wmul@multiplicand+1,c
  3741  005074  0E09               	movlw	9
  3742  005076  6E03               	movwf	___wmul@multiplicand,c
  3743  005078  EC4B  F02A         	call	___wmul	;wreg free
  3744  00507C  0EFF               	movlw	low (_cans+65535)
  3745  00507E  2401               	addwf	?___wmul,w,c
  3746  005080  6ED9               	movwf	fsr2l,c
  3747  005082  0E00               	movlw	high (_cans+65535)
  3748  005084  2002               	addwfc	?___wmul+1,w,c
  3749  005086  6EDA               	movwf	fsr2h,c
  3750  005088  C00A  FFDF         	movff	updateCanData@deposit,indf2
  3751  00508C  0012               	return		;funcret
  3752  00508E                     __end_of_updateCanData:
  3753                           	opt callstack 0
  3754                           
  3755 ;; *************** function _testDrive *****************
  3756 ;; Defined at:
  3757 ;;		line 582 in file "main.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  dist            4   55[BANK1 ] float 
  3762 ;;  newDist         4   51[BANK1 ] float 
  3763 ;;  shaftCount      2   49[BANK1 ] unsigned int 
  3764 ;;  shaftCount2     2   47[BANK1 ] unsigned int 
  3765 ;;  newCount        2    0        int 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;Total ram usage:       15 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:   15
  3782 ;; This function calls:
  3783 ;;		___fladd
  3784 ;;		___flge
  3785 ;;		___flsub
  3786 ;;		_avoidCan
  3787 ;;		_detectCanister
  3788 ;;		_getDistance
  3789 ;;		_initMenu
  3790 ;;		_lcdInst
  3791 ;;		_moveRobot
  3792 ;;		_printf
  3793 ;;		_readDigitalSensor
  3794 ;;		_readFrontSensor
  3795 ;;		_readFrontSensor2
  3796 ;;		_readRemoteStart
  3797 ;;		_shaftEncoderCount
  3798 ;;		_shaftEncoderCount2
  3799 ;; This function is called by:
  3800 ;;		_main
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text5
  3805  001EEA                     __ptext5:
  3806                           	opt callstack 0
  3807  001EEA                     _testDrive:
  3808                           	opt callstack 15
  3809                           
  3810                           ;main.c: 584:     unsigned int shaftCount = shaftEncoderCount();
  3811                           
  3812                           ;incstack = 0
  3813  001EEA  EC34  F022         	call	_shaftEncoderCount	;wreg free
  3814  001EEE  C016  F1E1         	movff	?_shaftEncoderCount,testDrive@shaftCount
  3815  001EF2  C017  F1E2         	movff	?_shaftEncoderCount+1,testDrive@shaftCount+1
  3816                           
  3817                           ;main.c: 586:     unsigned int shaftCount2 = shaftEncoderCount2();
  3818  001EF6  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  3819  001EFA  C016  F1DF         	movff	?_shaftEncoderCount2,testDrive@shaftCount2
  3820  001EFE  C017  F1E0         	movff	?_shaftEncoderCount2+1,testDrive@shaftCount2+1
  3821                           
  3822                           ;main.c: 587:     float newDist = getDistance() - lateralDist;
  3823  001F02  EC56  F027         	call	_getDistance	;wreg free
  3824  001F06  C046  F05C         	movff	?_getDistance,___flsub@b
  3825  001F0A  C047  F05D         	movff	?_getDistance+1,___flsub@b+1
  3826  001F0E  C048  F05E         	movff	?_getDistance+2,___flsub@b+2
  3827  001F12  C049  F05F         	movff	?_getDistance+3,___flsub@b+3
  3828  001F16  C17E  F060         	movff	_lateralDist,___flsub@a	;volatile
  3829  001F1A  C17F  F061         	movff	_lateralDist+1,___flsub@a+1	;volatile
  3830  001F1E  C180  F062         	movff	_lateralDist+2,___flsub@a+2	;volatile
  3831  001F22  C181  F063         	movff	_lateralDist+3,___flsub@a+3	;volatile
  3832  001F26  ECB4  F028         	call	___flsub	;wreg free
  3833  001F2A  C05C  F1E3         	movff	?___flsub,testDrive@newDist
  3834  001F2E  C05D  F1E4         	movff	?___flsub+1,testDrive@newDist+1
  3835  001F32  C05E  F1E5         	movff	?___flsub+2,testDrive@newDist+2
  3836  001F36  C05F  F1E6         	movff	?___flsub+3,testDrive@newDist+3
  3837                           
  3838                           ;main.c: 588:     float dist = newDist;
  3839  001F3A  C1E3  F1E7         	movff	testDrive@newDist,testDrive@dist
  3840  001F3E  C1E4  F1E8         	movff	testDrive@newDist+1,testDrive@dist+1
  3841  001F42  C1E5  F1E9         	movff	testDrive@newDist+2,testDrive@dist+2
  3842  001F46  C1E6  F1EA         	movff	testDrive@newDist+3,testDrive@dist+3
  3843                           
  3844                           ;main.c: 590:     while ((dist - newDist) <= 415)
  3845  001F4A  D113               	goto	l8855
  3846  001F4C                     l8819:
  3847                           
  3848                           ;main.c: 591:     {;main.c: 592:         moveRobot(1);
  3849  001F4C  0E00               	movlw	0
  3850  001F4E  6E02               	movwf	moveRobot@move+1,c
  3851  001F50  0E01               	movlw	1
  3852  001F52  6E01               	movwf	moveRobot@move,c
  3853  001F54  EC6C  F024         	call	_moveRobot	;wreg free
  3854                           
  3855                           ;main.c: 593:         dist = getDistance() - lateralDist;
  3856  001F58  EC56  F027         	call	_getDistance	;wreg free
  3857  001F5C  C046  F05C         	movff	?_getDistance,___flsub@b
  3858  001F60  C047  F05D         	movff	?_getDistance+1,___flsub@b+1
  3859  001F64  C048  F05E         	movff	?_getDistance+2,___flsub@b+2
  3860  001F68  C049  F05F         	movff	?_getDistance+3,___flsub@b+3
  3861  001F6C  C17E  F060         	movff	_lateralDist,___flsub@a	;volatile
  3862  001F70  C17F  F061         	movff	_lateralDist+1,___flsub@a+1	;volatile
  3863  001F74  C180  F062         	movff	_lateralDist+2,___flsub@a+2	;volatile
  3864  001F78  C181  F063         	movff	_lateralDist+3,___flsub@a+3	;volatile
  3865  001F7C  ECB4  F028         	call	___flsub	;wreg free
  3866  001F80  C05C  F1E7         	movff	?___flsub,testDrive@dist
  3867  001F84  C05D  F1E8         	movff	?___flsub+1,testDrive@dist+1
  3868  001F88  C05E  F1E9         	movff	?___flsub+2,testDrive@dist+2
  3869  001F8C  C05F  F1EA         	movff	?___flsub+3,testDrive@dist+3
  3870                           
  3871                           ;main.c: 594:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3872  001F90  0E01               	movlw	1
  3873  001F92  EC9F  F02A         	call	_lcdInst
  3874  001F96  0E11               	movlw	17
  3875  001F98  0101               	movlb	1	; () banked
  3876  001F9A  6FDC               	movwf	??_testDrive& (0+255),b
  3877  001F9C  0E3A               	movlw	58
  3878  001F9E                     u9627:
  3879  001F9E  2EE8               	decfsz	wreg,f,c
  3880  001FA0  D7FE               	bra	u9627
  3881  001FA2  2FDC               	decfsz	??_testDrive& (0+255),f,b
  3882  001FA4  D7FC               	bra	u9627
  3883  001FA6  F000               	nop	
  3884                           
  3885                           ;main.c: 595:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  3886  001FA8  0E80               	movlw	128
  3887  001FAA  EC9F  F02A         	call	_lcdInst
  3888  001FAE  0E07               	movlw	7
  3889  001FB0  0101               	movlb	1	; () banked
  3890  001FB2  6FDC               	movwf	??_testDrive& (0+255),b
  3891  001FB4  0E7D               	movlw	125
  3892  001FB6                     u9637:
  3893  001FB6  2EE8               	decfsz	wreg,f,c
  3894  001FB8  D7FE               	bra	u9637
  3895  001FBA  2FDC               	decfsz	??_testDrive& (0+255),f,b
  3896  001FBC  D7FC               	bra	u9637
  3897                           
  3898                           ;main.c: 596:         printf("%.2f", dist);
  3899  001FBE  0E78               	movlw	low (STR_10+7)
  3900  001FC0  0100               	movlb	0	; () banked
  3901  001FC2  6FEA               	movwf	printf@fmt& (0+255),b
  3902  001FC4  0EFF               	movlw	high (STR_10+7)
  3903  001FC6  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  3904  001FC8  C1E7  F0EC         	movff	testDrive@dist,?_printf+2
  3905  001FCC  C1E8  F0ED         	movff	testDrive@dist+1,?_printf+3
  3906  001FD0  C1E9  F0EE         	movff	testDrive@dist+2,?_printf+4
  3907  001FD4  C1EA  F0EF         	movff	testDrive@dist+3,?_printf+5
  3908  001FD8  EC37  F02A         	call	_printf	;wreg free
  3909                           
  3910                           ;main.c: 603:         if (readDigitalSensor())
  3911  001FDC  ECCC  F022         	call	_readDigitalSensor	;wreg free
  3912  001FE0  5016               	movf	?_readDigitalSensor,w,c
  3913  001FE2  1017               	iorwf	?_readDigitalSensor+1,w,c
  3914  001FE4  B4D8               	btfsc	status,2,c
  3915  001FE6  D070               	goto	l8843
  3916                           
  3917                           ;main.c: 604:         {;main.c: 605:             suspendedDist = getDistance() - lateral
      +                          Dist;
  3918  001FE8  EC56  F027         	call	_getDistance	;wreg free
  3919  001FEC  C046  F05C         	movff	?_getDistance,___flsub@b
  3920  001FF0  C047  F05D         	movff	?_getDistance+1,___flsub@b+1
  3921  001FF4  C048  F05E         	movff	?_getDistance+2,___flsub@b+2
  3922  001FF8  C049  F05F         	movff	?_getDistance+3,___flsub@b+3
  3923  001FFC  C17E  F060         	movff	_lateralDist,___flsub@a	;volatile
  3924  002000  C17F  F061         	movff	_lateralDist+1,___flsub@a+1	;volatile
  3925  002004  C180  F062         	movff	_lateralDist+2,___flsub@a+2	;volatile
  3926  002008  C181  F063         	movff	_lateralDist+3,___flsub@a+3	;volatile
  3927  00200C  ECB4  F028         	call	___flsub	;wreg free
  3928  002010  C05C  F17A         	movff	?___flsub,_suspendedDist	;volatile
  3929  002014  C05D  F17B         	movff	?___flsub+1,_suspendedDist+1	;volatile
  3930  002018  C05E  F17C         	movff	?___flsub+2,_suspendedDist+2	;volatile
  3931  00201C  C05F  F17D         	movff	?___flsub+3,_suspendedDist+3	;volatile
  3932                           
  3933                           ;main.c: 606:             lateralDist -= getDistance();
  3934  002020  C17E  F05C         	movff	_lateralDist,___flsub@b	;volatile
  3935  002024  C17F  F05D         	movff	_lateralDist+1,___flsub@b+1	;volatile
  3936  002028  C180  F05E         	movff	_lateralDist+2,___flsub@b+2	;volatile
  3937  00202C  C181  F05F         	movff	_lateralDist+3,___flsub@b+3	;volatile
  3938  002030  EC56  F027         	call	_getDistance	;wreg free
  3939  002034  C046  F060         	movff	?_getDistance,___flsub@a
  3940  002038  C047  F061         	movff	?_getDistance+1,___flsub@a+1
  3941  00203C  C048  F062         	movff	?_getDistance+2,___flsub@a+2
  3942  002040  C049  F063         	movff	?_getDistance+3,___flsub@a+3
  3943  002044  ECB4  F028         	call	___flsub	;wreg free
  3944  002048  C05C  F17E         	movff	?___flsub,_lateralDist	;volatile
  3945  00204C  C05D  F17F         	movff	?___flsub+1,_lateralDist+1	;volatile
  3946  002050  C05E  F180         	movff	?___flsub+2,_lateralDist+2	;volatile
  3947  002054  C05F  F181         	movff	?___flsub+3,_lateralDist+3	;volatile
  3948                           
  3949                           ;main.c: 607:             detectCanister();
  3950  002058  ECC7  F008         	call	_detectCanister	;wreg free
  3951                           
  3952                           ;main.c: 608:             lateralDist += getDistance();
  3953  00205C  C17E  F04C         	movff	_lateralDist,___fladd@b	;volatile
  3954  002060  C17F  F04D         	movff	_lateralDist+1,___fladd@b+1	;volatile
  3955  002064  C180  F04E         	movff	_lateralDist+2,___fladd@b+2	;volatile
  3956  002068  C181  F04F         	movff	_lateralDist+3,___fladd@b+3	;volatile
  3957  00206C  EC56  F027         	call	_getDistance	;wreg free
  3958  002070  C046  F050         	movff	?_getDistance,___fladd@a
  3959  002074  C047  F051         	movff	?_getDistance+1,___fladd@a+1
  3960  002078  C048  F052         	movff	?_getDistance+2,___fladd@a+2
  3961  00207C  C049  F053         	movff	?_getDistance+3,___fladd@a+3
  3962  002080  ECEF  F00D         	call	___fladd	;wreg free
  3963  002084  C04C  F17E         	movff	?___fladd,_lateralDist	;volatile
  3964  002088  C04D  F17F         	movff	?___fladd+1,_lateralDist+1	;volatile
  3965  00208C  C04E  F180         	movff	?___fladd+2,_lateralDist+2	;volatile
  3966  002090  C04F  F181         	movff	?___fladd+3,_lateralDist+3	;volatile
  3967                           
  3968                           ;main.c: 609:             lateralDist -= 13;
  3969  002094  C17E  F05C         	movff	_lateralDist,___flsub@b	;volatile
  3970  002098  C17F  F05D         	movff	_lateralDist+1,___flsub@b+1	;volatile
  3971  00209C  C180  F05E         	movff	_lateralDist+2,___flsub@b+2	;volatile
  3972  0020A0  C181  F05F         	movff	_lateralDist+3,___flsub@b+3	;volatile
  3973  0020A4  0E00               	movlw	0
  3974  0020A6  6E60               	movwf	___flsub@a,c
  3975  0020A8  0E00               	movlw	0
  3976  0020AA  6E61               	movwf	___flsub@a+1,c
  3977  0020AC  0E50               	movlw	80
  3978  0020AE  6E62               	movwf	___flsub@a+2,c
  3979  0020B0  0E41               	movlw	65
  3980  0020B2  6E63               	movwf	___flsub@a+3,c
  3981  0020B4  ECB4  F028         	call	___flsub	;wreg free
  3982  0020B8  C05C  F17E         	movff	?___flsub,_lateralDist	;volatile
  3983  0020BC  C05D  F17F         	movff	?___flsub+1,_lateralDist+1	;volatile
  3984  0020C0  C05E  F180         	movff	?___flsub+2,_lateralDist+2	;volatile
  3985  0020C4  C05F  F181         	movff	?___flsub+3,_lateralDist+3	;volatile
  3986  0020C8                     l8843:
  3987                           
  3988                           ;main.c: 612:         if(readFrontSensor() || readFrontSensor2())
  3989  0020C8  EC18  F023         	call	_readFrontSensor	;wreg free
  3990  0020CC  5016               	movf	?_readFrontSensor,w,c
  3991  0020CE  1017               	iorwf	?_readFrontSensor+1,w,c
  3992  0020D0  A4D8               	btfss	status,2,c
  3993  0020D2  D006               	goto	u9020
  3994  0020D4  EC9C  F021         	call	_readFrontSensor2	;wreg free
  3995  0020D8  5016               	movf	?_readFrontSensor2,w,c
  3996  0020DA  1017               	iorwf	?_readFrontSensor2+1,w,c
  3997  0020DC  B4D8               	btfsc	status,2,c
  3998  0020DE  D03A               	goto	l187
  3999  0020E0                     u9020:
  4000                           
  4001                           ;main.c: 613:         {;main.c: 614:             lateralDist -= getDistance();
  4002  0020E0  C17E  F05C         	movff	_lateralDist,___flsub@b	;volatile
  4003  0020E4  C17F  F05D         	movff	_lateralDist+1,___flsub@b+1	;volatile
  4004  0020E8  C180  F05E         	movff	_lateralDist+2,___flsub@b+2	;volatile
  4005  0020EC  C181  F05F         	movff	_lateralDist+3,___flsub@b+3	;volatile
  4006  0020F0  EC56  F027         	call	_getDistance	;wreg free
  4007  0020F4  C046  F060         	movff	?_getDistance,___flsub@a
  4008  0020F8  C047  F061         	movff	?_getDistance+1,___flsub@a+1
  4009  0020FC  C048  F062         	movff	?_getDistance+2,___flsub@a+2
  4010  002100  C049  F063         	movff	?_getDistance+3,___flsub@a+3
  4011  002104  ECB4  F028         	call	___flsub	;wreg free
  4012  002108  C05C  F17E         	movff	?___flsub,_lateralDist	;volatile
  4013  00210C  C05D  F17F         	movff	?___flsub+1,_lateralDist+1	;volatile
  4014  002110  C05E  F180         	movff	?___flsub+2,_lateralDist+2	;volatile
  4015  002114  C05F  F181         	movff	?___flsub+3,_lateralDist+3	;volatile
  4016                           
  4017                           ;main.c: 615:             avoidCan();
  4018  002118  EC47  F028         	call	_avoidCan	;wreg free
  4019                           
  4020                           ;main.c: 616:             lateralDist += getDistance();
  4021  00211C  C17E  F04C         	movff	_lateralDist,___fladd@b	;volatile
  4022  002120  C17F  F04D         	movff	_lateralDist+1,___fladd@b+1	;volatile
  4023  002124  C180  F04E         	movff	_lateralDist+2,___fladd@b+2	;volatile
  4024  002128  C181  F04F         	movff	_lateralDist+3,___fladd@b+3	;volatile
  4025  00212C  EC56  F027         	call	_getDistance	;wreg free
  4026  002130  C046  F050         	movff	?_getDistance,___fladd@a
  4027  002134  C047  F051         	movff	?_getDistance+1,___fladd@a+1
  4028  002138  C048  F052         	movff	?_getDistance+2,___fladd@a+2
  4029  00213C  C049  F053         	movff	?_getDistance+3,___fladd@a+3
  4030  002140  ECEF  F00D         	call	___fladd	;wreg free
  4031  002144  C04C  F17E         	movff	?___fladd,_lateralDist	;volatile
  4032  002148  C04D  F17F         	movff	?___fladd+1,_lateralDist+1	;volatile
  4033  00214C  C04E  F180         	movff	?___fladd+2,_lateralDist+2	;volatile
  4034  002150  C04F  F181         	movff	?___fladd+3,_lateralDist+3	;volatile
  4035  002154                     l187:
  4036                           
  4037                           ;main.c: 618:         if (readRemoteStart() == 1)
  4038  002154  ECAA  F020         	call	_readRemoteStart	;wreg free
  4039  002158  0416               	decf	?_readRemoteStart,w,c
  4040  00215A  1017               	iorwf	?_readRemoteStart+1,w,c
  4041  00215C  A4D8               	btfss	status,2,c
  4042  00215E  D009               	goto	l8855
  4043                           
  4044                           ;main.c: 619:         {;main.c: 621:             moveRobot(0);
  4045  002160  0E00               	movlw	0
  4046  002162  6E02               	movwf	moveRobot@move+1,c
  4047  002164  0E00               	movlw	0
  4048  002166  6E01               	movwf	moveRobot@move,c
  4049  002168  EC6C  F024         	call	_moveRobot	;wreg free
  4050                           
  4051                           ;main.c: 622:             TMR0ON = 0;
  4052  00216C  9ED5               	bcf	4053,7,c	;volatile
  4053                           
  4054                           ;main.c: 623:             initMenu();
  4055  00216E  EC73  F013         	call	_initMenu	;wreg free
  4056  002172                     l8855:
  4057                           
  4058                           ;main.c: 590:     while ((dist - newDist) <= 415)
  4059  002172  0E00               	movlw	0
  4060  002174  6E64               	movwf	___flge@ff1,c
  4061  002176  0E80               	movlw	128
  4062  002178  6E65               	movwf	___flge@ff1+1,c
  4063  00217A  0ECF               	movlw	207
  4064  00217C  6E66               	movwf	___flge@ff1+2,c
  4065  00217E  0E43               	movlw	67
  4066  002180  6E67               	movwf	___flge@ff1+3,c
  4067  002182  C1E3  F060         	movff	testDrive@newDist,___flsub@a
  4068  002186  C1E4  F061         	movff	testDrive@newDist+1,___flsub@a+1
  4069  00218A  C1E5  F062         	movff	testDrive@newDist+2,___flsub@a+2
  4070  00218E  C1E6  F063         	movff	testDrive@newDist+3,___flsub@a+3
  4071  002192  C1E7  F05C         	movff	testDrive@dist,___flsub@b
  4072  002196  C1E8  F05D         	movff	testDrive@dist+1,___flsub@b+1
  4073  00219A  C1E9  F05E         	movff	testDrive@dist+2,___flsub@b+2
  4074  00219E  C1EA  F05F         	movff	testDrive@dist+3,___flsub@b+3
  4075  0021A2  ECB4  F028         	call	___flsub	;wreg free
  4076  0021A6  C05C  F068         	movff	?___flsub,___flge@ff2
  4077  0021AA  C05D  F069         	movff	?___flsub+1,___flge@ff2+1
  4078  0021AE  C05E  F06A         	movff	?___flsub+2,___flge@ff2+2
  4079  0021B2  C05F  F06B         	movff	?___flsub+3,___flge@ff2+3
  4080  0021B6  EC7F  F01F         	call	___flge	;wreg free
  4081  0021BA  A0D8               	btfss	status,0,c
  4082  0021BC  0012               	return	
  4083  0021BE  D6C6               	goto	l8819
  4084  0021C0                     __end_of_testDrive:
  4085                           	opt callstack 0
  4086                           
  4087 ;; *************** function _readFrontSensor2 *****************
  4088 ;; Defined at:
  4089 ;;		line 219 in file "sensors.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  i               1   29[COMRAM] unsigned char 
  4094 ;;  count           4   25[COMRAM] unsigned int [2]
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2   21[COMRAM] int 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;Total ram usage:        9 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    3
  4111 ;; This function calls:
  4112 ;;		_I2C_Master_Init
  4113 ;;		_I2C_Master_Read
  4114 ;;		_I2C_Master_Start
  4115 ;;		_I2C_Master_Stop
  4116 ;;		_I2C_Master_Write
  4117 ;; This function is called by:
  4118 ;;		_testDrive
  4119 ;;		_testDrive2
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text6
  4124  004338                     __ptext6:
  4125                           	opt callstack 0
  4126  004338                     _readFrontSensor2:
  4127                           	opt callstack 26
  4128                           
  4129                           ;sensors.c: 221:     unsigned int count[2];;sensors.c: 222:     I2C_Master_Init(100000);
  4130                           
  4131                           ;incstack = 0
  4132  004338  0EA0               	movlw	160
  4133  00433A  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  4134  00433C  0E86               	movlw	134
  4135  00433E  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  4136  004340  0E01               	movlw	1
  4137  004342  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  4138  004344  0E00               	movlw	0
  4139  004346  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  4140  004348  EC28  F027         	call	_I2C_Master_Init	;wreg free
  4141                           
  4142                           ;sensors.c: 226:     I2C_Master_Start();
  4143  00434C  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  4144                           
  4145                           ;sensors.c: 227:     I2C_Master_Write(0b00010000);
  4146  004350  0E00               	movlw	0
  4147  004352  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  4148  004354  0E10               	movlw	16
  4149  004356  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  4150  004358  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  4151                           
  4152                           ;sensors.c: 228:     I2C_Master_Write(10);
  4153  00435C  0E00               	movlw	0
  4154  00435E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  4155  004360  0E0A               	movlw	10
  4156  004362  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  4157  004364  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  4158                           
  4159                           ;sensors.c: 229:     I2C_Master_Stop();
  4160  004368  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  4161                           
  4162                           ;sensors.c: 232:     I2C_Master_Start();
  4163  00436C  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  4164                           
  4165                           ;sensors.c: 233:     I2C_Master_Write(0b00010001);
  4166  004370  0E00               	movlw	0
  4167  004372  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  4168  004374  0E11               	movlw	17
  4169  004376  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  4170  004378  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  4171                           
  4172                           ;sensors.c: 235:     for (unsigned char i = 0; i < 1; i++)
  4173  00437C  0E00               	movlw	0
  4174  00437E  6E1E               	movwf	readFrontSensor2@i,c
  4175  004380                     l8613:
  4176                           
  4177                           ;sensors.c: 236:     {;sensors.c: 237:         count[i] = I2C_Master_Read(0);
  4178  004380  0E00               	movlw	0
  4179  004382  EC5E  F02A         	call	_I2C_Master_Read
  4180  004386  6E18               	movwf	??_readFrontSensor2& (0+255),c
  4181  004388  6A19               	clrf	(??_readFrontSensor2+1)& (0+255),c
  4182  00438A  501E               	movf	readFrontSensor2@i,w,c
  4183  00438C  0D02               	mullw	2
  4184  00438E  0E1A               	movlw	low readFrontSensor2@count
  4185  004390  24F3               	addwf	prodl,w,c
  4186  004392  6ED9               	movwf	fsr2l,c
  4187  004394  0E00               	movlw	high readFrontSensor2@count
  4188  004396  20F4               	addwfc	prodh,w,c
  4189  004398  6EDA               	movwf	fsr2h,c
  4190  00439A  C018  FFDE         	movff	??_readFrontSensor2,postinc2
  4191  00439E  C019  FFDD         	movff	??_readFrontSensor2+1,postdec2
  4192                           
  4193                           ;sensors.c: 238:     }
  4194  0043A2  2A1E               	incf	readFrontSensor2@i,f,c
  4195  0043A4  501E               	movf	readFrontSensor2@i,w,c
  4196  0043A6  B4D8               	btfsc	status,2,c
  4197  0043A8  D7EB               	goto	l8613
  4198                           
  4199                           ;sensors.c: 239:     count[1] = I2C_Master_Read(1);
  4200  0043AA  0E01               	movlw	1
  4201  0043AC  EC5E  F02A         	call	_I2C_Master_Read
  4202  0043B0  6E18               	movwf	??_readFrontSensor2& (0+255),c
  4203  0043B2  5018               	movf	??_readFrontSensor2,w,c
  4204  0043B4  6E1C               	movwf	readFrontSensor2@count+2,c
  4205  0043B6  6A1D               	clrf	readFrontSensor2@count+3,c
  4206                           
  4207                           ;sensors.c: 240:     I2C_Master_Stop();
  4208  0043B8  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  4209                           
  4210                           ;sensors.c: 242:     return (count[0])|(count[1]<<8);
  4211  0043BC  501C               	movf	readFrontSensor2@count+2,w,c
  4212  0043BE  6E19               	movwf	(??_readFrontSensor2+1)& (0+255),c
  4213  0043C0  6A18               	clrf	??_readFrontSensor2& (0+255),c
  4214  0043C2  501A               	movf	readFrontSensor2@count,w,c
  4215  0043C4  1018               	iorwf	??_readFrontSensor2,w,c
  4216  0043C6  6E16               	movwf	?_readFrontSensor2,c
  4217  0043C8  501B               	movf	readFrontSensor2@count+1,w,c
  4218  0043CA  1019               	iorwf	??_readFrontSensor2+1,w,c
  4219  0043CC  6E17               	movwf	?_readFrontSensor2+1,c
  4220  0043CE  0012               	return		;funcret
  4221  0043D0                     __end_of_readFrontSensor2:
  4222                           	opt callstack 0
  4223                           
  4224 ;; *************** function _initMenu *****************
  4225 ;; Defined at:
  4226 ;;		line 109 in file "menu.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  id              2   21[BANK1 ] int 
  4231 ;;  canisters       2   19[BANK1 ] int 
  4232 ;;  ballGiven       2   17[BANK1 ] int 
  4233 ;;  timeElapse      2    0        int 
  4234 ;;  curr            1   23[BANK1 ] enum E2771
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Totals:         0       2       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;Total ram usage:       11 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:   13
  4251 ;; This function calls:
  4252 ;;		_ballsGivenScreen
  4253 ;;		_buildEndScreen
  4254 ;;		_buildEndScreenMenu
  4255 ;;		_buildTimeScreen
  4256 ;;		_canisterDataScreen
  4257 ;;		_canisterSelectScreen
  4258 ;;		_getNumBallsGiven
  4259 ;;		_getNumCanisters
  4260 ;;		_initLCD
  4261 ;;		_lcdInst
  4262 ;;		_numCanistersScreen
  4263 ;;		_printf
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;;		_testDrive
  4267 ;;		_testDrive2
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text7
  4272  0026E6                     __ptext7:
  4273                           	opt callstack 0
  4274  0026E6                     _initMenu:
  4275                           	opt callstack 16
  4276                           
  4277                           ;menu.c: 113:     menState curr = end;
  4278                           
  4279                           ;incstack = 0
  4280  0026E6  0E00               	movlw	0
  4281  0026E8  0101               	movlb	1	; () banked
  4282  0026EA  6FC7               	movwf	initMenu@curr& (0+255),b
  4283                           
  4284                           ;menu.c: 116:     int id = 1;
  4285  0026EC  0E00               	movlw	0
  4286  0026EE  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4287  0026F0  0E01               	movlw	1
  4288  0026F2  6FC5               	movwf	initMenu@id& (0+255),b
  4289                           
  4290                           ; BSR set to: 1
  4291  0026F4  50CE               	movf	4046,w,c	;volatile
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;menu.c: 118:     int ballGiven = getNumBallsGiven();
  4295  0026F6  ECAB  F02A         	call	_getNumBallsGiven	;wreg free
  4296  0026FA  C001  F1C1         	movff	?_getNumBallsGiven,initMenu@ballGiven
  4297  0026FE  C002  F1C2         	movff	?_getNumBallsGiven+1,initMenu@ballGiven+1
  4298                           
  4299                           ;menu.c: 119:     int canisters = getNumCanisters();
  4300  002702  ECB0  F02A         	call	_getNumCanisters	;wreg free
  4301  002706  C001  F1C3         	movff	?_getNumCanisters,initMenu@canisters
  4302  00270A  C002  F1C4         	movff	?_getNumCanisters+1,initMenu@canisters+1
  4303                           
  4304                           ;menu.c: 123:     LATD = 0x00;
  4305  00270E  0E00               	movlw	0
  4306  002710  6E8C               	movwf	3980,c	;volatile
  4307                           
  4308                           ;menu.c: 124:     TRISD = 0x00;
  4309  002712  0E00               	movlw	0
  4310  002714  6E95               	movwf	3989,c	;volatile
  4311                           
  4312                           ;menu.c: 127:     ADCON1 = 0b00001111;
  4313  002716  0E0F               	movlw	15
  4314  002718  6EC1               	movwf	4033,c	;volatile
  4315                           
  4316                           ;menu.c: 130:     TRISBbits.RB7 = 1;
  4317  00271A  8E93               	bsf	3987,7,c	;volatile
  4318                           
  4319                           ;menu.c: 131:     TRISBbits.RB6 = 1;
  4320  00271C  8C93               	bsf	3987,6,c	;volatile
  4321                           
  4322                           ;menu.c: 132:     TRISBbits.RB5 = 1;
  4323  00271E  8A93               	bsf	3987,5,c	;volatile
  4324                           
  4325                           ;menu.c: 133:     TRISBbits.RB4 = 1;
  4326  002720  8893               	bsf	3987,4,c	;volatile
  4327                           
  4328                           ;menu.c: 136:     INTCONbits.GIE = 1;
  4329  002722  8EF2               	bsf	4082,7,c	;volatile
  4330                           
  4331                           ;menu.c: 137:     INTCON3bits.INT1E = 1;
  4332  002724  86F0               	bsf	4080,3,c	;volatile
  4333                           
  4334                           ;menu.c: 138:     (INTCONbits.GIE = 1);
  4335  002726  8EF2               	bsf	4082,7,c	;volatile
  4336                           
  4337                           ;menu.c: 143:     initLCD();
  4338  002728  EC01  F026         	call	_initLCD	;wreg free
  4339  00272C                     l8243:
  4340                           
  4341                           ;menu.c: 145:     buildEndScreen();
  4342  00272C  EC36  F026         	call	_buildEndScreen	;wreg free
  4343  002730                     l8245:
  4344                           
  4345                           ;menu.c: 148:     {;menu.c: 150:         if (key_pressed)
  4346  002730  0101               	movlb	1	; () banked
  4347  002732  5192               	movf	_key_pressed& (0+255),w,b	;volatile
  4348  002734  B4D8               	btfsc	status,2,c
  4349  002736  D0E3               	goto	l8349
  4350                           
  4351                           ; BSR set to: 1
  4352                           ;menu.c: 151:         {;menu.c: 152:             key_pressed = 0;
  4353  002738  0E00               	movlw	0
  4354  00273A  6F92               	movwf	_key_pressed& (0+255),b	;volatile
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;menu.c: 153:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4358  00273C  0E01               	movlw	1
  4359  00273E  EC9F  F02A         	call	_lcdInst
  4360  002742  0E11               	movlw	17
  4361  002744  0100               	movlb	0	; () banked
  4362  002746  6FFA               	movwf	??_initMenu& (0+255),b
  4363  002748  0E3A               	movlw	58
  4364  00274A                     u9647:
  4365  00274A  2EE8               	decfsz	wreg,f,c
  4366  00274C  D7FE               	bra	u9647
  4367  00274E  2FFA               	decfsz	??_initMenu& (0+255),f,b
  4368  002750  D7FC               	bra	u9647
  4369  002752  F000               	nop	
  4370                           
  4371                           ;menu.c: 155:             switch(curr)
  4372  002754  D083               	goto	l8327
  4373  002756                     l8253:
  4374                           
  4375                           ;menu.c: 158:                     curr = endMenu;
  4376  002756  0E01               	movlw	1
  4377  002758  0101               	movlb	1	; () banked
  4378  00275A  D02F               	goto	L9
  4379  00275C                     l8255:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;menu.c: 161:                     if (key == 12)
  4383  00275C  0E0C               	movlw	12
  4384  00275E  0101               	movlb	1	; () banked
  4385  002760  1991               	xorwf	_key& (0+255),w,b	;volatile
  4386  002762  A4D8               	btfss	status,2,c
  4387  002764  D002               	goto	l8259
  4388                           
  4389                           ; BSR set to: 1
  4390                           ;menu.c: 162:                         curr = end;
  4391  002766  0E00               	movlw	0
  4392  002768  D028               	goto	L9
  4393  00276A                     l8259:
  4394                           
  4395                           ; BSR set to: 1
  4396  00276A  5191               	movf	_key& (0+255),w,b	;volatile
  4397  00276C  A4D8               	btfss	status,2,c
  4398  00276E  D002               	goto	l8263
  4399                           
  4400                           ; BSR set to: 1
  4401                           ;menu.c: 164:                         curr = time;
  4402  002770  0E02               	movlw	2
  4403  002772  D023               	goto	L9
  4404  002774                     l8263:
  4405                           
  4406                           ; BSR set to: 1
  4407  002774  0591               	decf	_key& (0+255),w,b	;volatile
  4408  002776  A4D8               	btfss	status,2,c
  4409  002778  D002               	goto	l8267
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;menu.c: 166:                         curr = ballsGive;
  4413  00277A  0E03               	movlw	3
  4414  00277C  D01E               	goto	L9
  4415  00277E                     l8267:
  4416                           
  4417                           ; BSR set to: 1
  4418  00277E  0E02               	movlw	2
  4419  002780  1991               	xorwf	_key& (0+255),w,b	;volatile
  4420  002782  A4D8               	btfss	status,2,c
  4421  002784  D002               	goto	l8271
  4422                           
  4423                           ; BSR set to: 1
  4424                           ;menu.c: 168:                         curr = numCan;
  4425  002786  0E04               	movlw	4
  4426  002788  D018               	goto	L9
  4427  00278A                     l8271:
  4428                           
  4429                           ; BSR set to: 1
  4430  00278A  0E04               	movlw	4
  4431  00278C  1991               	xorwf	_key& (0+255),w,b	;volatile
  4432  00278E  A4D8               	btfss	status,2,c
  4433  002790  D0B6               	goto	l8349
  4434  002792                     u8360:
  4435                           
  4436                           ; BSR set to: 1
  4437                           ;menu.c: 170:                         curr = canSel;
  4438  002792  0E05               	movlw	5
  4439  002794  D012               	goto	L9
  4440  002796                     l8275:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;menu.c: 175:                     if (key == 12)
  4444  002796  0E0C               	movlw	12
  4445  002798  0101               	movlb	1	; () banked
  4446  00279A  1991               	xorwf	_key& (0+255),w,b	;volatile
  4447  00279C  B4D8               	btfsc	status,2,c
  4448  00279E  D7DB               	goto	l8253
  4449  0027A0  D0AE               	goto	l8349
  4450  0027A2                     l8279:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;menu.c: 182:                     if (key == 12)
  4454  0027A2  0E0C               	movlw	12
  4455  0027A4  0101               	movlb	1	; () banked
  4456  0027A6  1991               	xorwf	_key& (0+255),w,b	;volatile
  4457  0027A8  B4D8               	btfsc	status,2,c
  4458  0027AA  D7D5               	goto	l8253
  4459                           
  4460                           ; BSR set to: 1
  4461  0027AC  5191               	movf	_key& (0+255),w,b	;volatile
  4462  0027AE  A4D8               	btfss	status,2,c
  4463  0027B0  D006               	goto	l8287
  4464                           
  4465                           ; BSR set to: 1
  4466                           ;menu.c: 185:                     {;menu.c: 186:                           id = 1;
  4467  0027B2  0E00               	movlw	0
  4468  0027B4  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4469  0027B6  0E01               	movlw	1
  4470  0027B8  D048               	goto	L18
  4471  0027BA                     L9:
  4472  0027BA  6FC7               	movwf	initMenu@curr& (0+255),b
  4473                           
  4474                           ;menu.c: 188:                     }
  4475  0027BC  D0A0               	goto	l8349
  4476  0027BE                     l8287:
  4477                           
  4478                           ; BSR set to: 1
  4479  0027BE  0591               	decf	_key& (0+255),w,b	;volatile
  4480  0027C0  A4D8               	btfss	status,2,c
  4481  0027C2  D004               	goto	l8291
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;menu.c: 190:                     {;menu.c: 191:                           id = 2;
  4485  0027C4  0E00               	movlw	0
  4486  0027C6  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4487  0027C8  0E02               	movlw	2
  4488  0027CA  D03F               	goto	L18
  4489  0027CC                     l8291:
  4490                           
  4491                           ; BSR set to: 1
  4492  0027CC  0E02               	movlw	2
  4493  0027CE  1991               	xorwf	_key& (0+255),w,b	;volatile
  4494  0027D0  A4D8               	btfss	status,2,c
  4495  0027D2  D004               	goto	l8295
  4496                           
  4497                           ; BSR set to: 1
  4498                           ;menu.c: 195:                     {;menu.c: 196:                           id = 3;
  4499  0027D4  0E00               	movlw	0
  4500  0027D6  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4501  0027D8  0E03               	movlw	3
  4502  0027DA  D037               	goto	L18
  4503  0027DC                     l8295:
  4504                           
  4505                           ; BSR set to: 1
  4506  0027DC  0E04               	movlw	4
  4507  0027DE  1991               	xorwf	_key& (0+255),w,b	;volatile
  4508  0027E0  A4D8               	btfss	status,2,c
  4509  0027E2  D004               	goto	l8299
  4510                           
  4511                           ; BSR set to: 1
  4512                           ;menu.c: 200:                     {;menu.c: 201:                           id = 4;
  4513  0027E4  0E00               	movlw	0
  4514  0027E6  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4515  0027E8  0E04               	movlw	4
  4516  0027EA  D02F               	goto	L18
  4517  0027EC                     l8299:
  4518                           
  4519                           ; BSR set to: 1
  4520  0027EC  0E05               	movlw	5
  4521  0027EE  1991               	xorwf	_key& (0+255),w,b	;volatile
  4522  0027F0  A4D8               	btfss	status,2,c
  4523  0027F2  D004               	goto	l8303
  4524                           
  4525                           ; BSR set to: 1
  4526                           ;menu.c: 205:                     {;menu.c: 206:                           id = 5;
  4527  0027F4  0E00               	movlw	0
  4528  0027F6  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4529  0027F8  0E05               	movlw	5
  4530  0027FA  D027               	goto	L18
  4531  0027FC                     l8303:
  4532                           
  4533                           ; BSR set to: 1
  4534  0027FC  0E06               	movlw	6
  4535  0027FE  1991               	xorwf	_key& (0+255),w,b	;volatile
  4536  002800  A4D8               	btfss	status,2,c
  4537  002802  D004               	goto	l8307
  4538                           
  4539                           ; BSR set to: 1
  4540                           ;menu.c: 210:                     {;menu.c: 211:                           id = 6;
  4541  002804  0E00               	movlw	0
  4542  002806  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4543  002808  0E06               	movlw	6
  4544  00280A  D01F               	goto	L18
  4545  00280C                     l8307:
  4546                           
  4547                           ; BSR set to: 1
  4548  00280C  0E08               	movlw	8
  4549  00280E  1991               	xorwf	_key& (0+255),w,b	;volatile
  4550  002810  A4D8               	btfss	status,2,c
  4551  002812  D004               	goto	l8311
  4552                           
  4553                           ; BSR set to: 1
  4554                           ;menu.c: 215:                     {;menu.c: 216:                           id = 7;
  4555  002814  0E00               	movlw	0
  4556  002816  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4557  002818  0E07               	movlw	7
  4558  00281A  D017               	goto	L18
  4559  00281C                     l8311:
  4560                           
  4561                           ; BSR set to: 1
  4562  00281C  0E09               	movlw	9
  4563  00281E  1991               	xorwf	_key& (0+255),w,b	;volatile
  4564  002820  A4D8               	btfss	status,2,c
  4565  002822  D004               	goto	l8315
  4566                           
  4567                           ; BSR set to: 1
  4568                           ;menu.c: 220:                     {;menu.c: 221:                           id = 8;
  4569  002824  0E00               	movlw	0
  4570  002826  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4571  002828  0E08               	movlw	8
  4572  00282A  D00F               	goto	L18
  4573  00282C                     l8315:
  4574                           
  4575                           ; BSR set to: 1
  4576  00282C  0E0A               	movlw	10
  4577  00282E  1991               	xorwf	_key& (0+255),w,b	;volatile
  4578  002830  A4D8               	btfss	status,2,c
  4579  002832  D004               	goto	l8319
  4580                           
  4581                           ; BSR set to: 1
  4582                           ;menu.c: 225:                     {;menu.c: 226:                           id = 9;
  4583  002834  0E00               	movlw	0
  4584  002836  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4585  002838  0E09               	movlw	9
  4586  00283A  D007               	goto	L18
  4587  00283C                     l8319:
  4588                           
  4589                           ; BSR set to: 1
  4590  00283C  0E0D               	movlw	13
  4591  00283E  1991               	xorwf	_key& (0+255),w,b	;volatile
  4592  002840  A4D8               	btfss	status,2,c
  4593  002842  D05D               	goto	l8349
  4594                           
  4595                           ; BSR set to: 1
  4596                           ;menu.c: 230:                     {;menu.c: 231:                         id = 10;
  4597  002844  0E00               	movlw	0
  4598  002846  6FC6               	movwf	(initMenu@id+1)& (0+255),b
  4599  002848  0E0A               	movlw	10
  4600  00284A                     L18:
  4601  00284A  6FC5               	movwf	initMenu@id& (0+255),b
  4602                           
  4603                           ;menu.c: 232:                         curr = canData;
  4604  00284C  0E06               	movlw	6
  4605  00284E  D7B5               	goto	L9
  4606  002850                     l8323:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;menu.c: 236:                     if (key == 12)
  4610  002850  0E0C               	movlw	12
  4611  002852  0101               	movlb	1	; () banked
  4612  002854  1991               	xorwf	_key& (0+255),w,b	;volatile
  4613  002856  B4D8               	btfsc	status,2,c
  4614  002858  D79C               	goto	u8360
  4615  00285A  D051               	goto	l8349
  4616  00285C                     l8327:
  4617  00285C  0101               	movlb	1	; () banked
  4618  00285E  51C7               	movf	initMenu@curr& (0+255),w,b
  4619  002860  0100               	movlb	0	; () banked
  4620  002862  6FFA               	movwf	??_initMenu& (0+255),b
  4621  002864  6BFB               	clrf	(??_initMenu+1)& (0+255),b
  4622                           
  4623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4624                           ; Switch size 1, requested type "simple"
  4625                           ; Number of cases is 1, Range of values is 0 to 0
  4626                           ; switch strategies available:
  4627                           ; Name         Instructions Cycles
  4628                           ; simple_byte            4     3 (average)
  4629                           ;	Chosen strategy is simple_byte
  4630  002866  51FB               	movf	(??_initMenu+1)& (0+255),w,b
  4631  002868  0A00               	xorlw	0	; case 0
  4632  00286A  A4D8               	btfss	status,2,c
  4633  00286C  D048               	goto	l8349
  4634                           
  4635                           ; BSR set to: 0
  4636                           ; Switch size 1, requested type "simple"
  4637                           ; Number of cases is 7, Range of values is 0 to 6
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte           22    12 (average)
  4641                           ;	Chosen strategy is simple_byte
  4642  00286E  51FA               	movf	??_initMenu& (0+255),w,b
  4643  002870  0A00               	xorlw	0	; case 0
  4644  002872  B4D8               	btfsc	status,2,c
  4645  002874  D770               	goto	l8253
  4646  002876  0A01               	xorlw	1	; case 1
  4647  002878  B4D8               	btfsc	status,2,c
  4648  00287A  D770               	goto	l8255
  4649  00287C  0A03               	xorlw	3	; case 2
  4650  00287E  B4D8               	btfsc	status,2,c
  4651  002880  D78A               	goto	l8275
  4652  002882  0A01               	xorlw	1	; case 3
  4653  002884  B4D8               	btfsc	status,2,c
  4654  002886  D787               	goto	l8275
  4655  002888  0A07               	xorlw	7	; case 4
  4656  00288A  B4D8               	btfsc	status,2,c
  4657  00288C  D784               	goto	l8275
  4658  00288E  0A01               	xorlw	1	; case 5
  4659  002890  B4D8               	btfsc	status,2,c
  4660  002892  D787               	goto	l8279
  4661  002894  0A03               	xorlw	3	; case 6
  4662  002896  B4D8               	btfsc	status,2,c
  4663  002898  D7DB               	goto	l8323
  4664  00289A  D031               	goto	l8349
  4665  00289C                     l8331:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;menu.c: 250:                 buildEndScreenMenu();
  4669  00289C  EC6A  F026         	call	_buildEndScreenMenu	;wreg free
  4670                           
  4671                           ;menu.c: 251:                 break;
  4672  0028A0  D747               	goto	l8245
  4673  0028A2                     l8333:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;menu.c: 253:                 buildTimeScreen();
  4677  0028A2  EC2C  F024         	call	_buildTimeScreen	;wreg free
  4678                           
  4679                           ;menu.c: 254:                 break;
  4680  0028A6  D744               	goto	l8245
  4681  0028A8                     l8335:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;menu.c: 256:                 ballsGivenScreen(ballGiven);
  4685  0028A8  C1C1  F0F6         	movff	initMenu@ballGiven,ballsGivenScreen@balls
  4686  0028AC  C1C2  F0F7         	movff	initMenu@ballGiven+1,ballsGivenScreen@balls+1
  4687  0028B0  ECDE  F029         	call	_ballsGivenScreen	;wreg free
  4688                           
  4689                           ;menu.c: 257:                 break;
  4690  0028B4  D73D               	goto	l8245
  4691  0028B6                     l8337:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;menu.c: 259:                 numCanistersScreen(canisters);
  4695  0028B6  C1C3  F0F6         	movff	initMenu@canisters,numCanistersScreen@num
  4696  0028BA  C1C4  F0F7         	movff	initMenu@canisters+1,numCanistersScreen@num+1
  4697  0028BE  ECC7  F029         	call	_numCanistersScreen	;wreg free
  4698                           
  4699                           ;menu.c: 260:                 break;
  4700  0028C2  D736               	goto	l8245
  4701  0028C4                     l8339:
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;menu.c: 262:                 canisterSelectScreen();
  4705  0028C4  ECD5  F027         	call	_canisterSelectScreen	;wreg free
  4706                           
  4707                           ;menu.c: 263:                 break;
  4708  0028C8  D733               	goto	l8245
  4709  0028CA                     l8341:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;menu.c: 265:                 canisterDataScreen(id);
  4713  0028CA  C1C5  F0F6         	movff	initMenu@id,canisterDataScreen@id
  4714  0028CE  C1C6  F0F7         	movff	initMenu@id+1,canisterDataScreen@id+1
  4715  0028D2  ECA8  F01D         	call	_canisterDataScreen	;wreg free
  4716                           
  4717                           ;menu.c: 266:                 break;
  4718  0028D6  D72C               	goto	l8245
  4719  0028D8                     l8343:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;menu.c: 268:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  4723  0028D8  0E80               	movlw	128
  4724  0028DA  EC9F  F02A         	call	_lcdInst
  4725  0028DE  0E07               	movlw	7
  4726  0028E0  0100               	movlb	0	; () banked
  4727  0028E2  6FFA               	movwf	??_initMenu& (0+255),b
  4728  0028E4  0E7D               	movlw	125
  4729  0028E6                     u9657:
  4730  0028E6  2EE8               	decfsz	wreg,f,c
  4731  0028E8  D7FE               	bra	u9657
  4732  0028EA  2FFA               	decfsz	??_initMenu& (0+255),f,b
  4733  0028EC  D7FC               	bra	u9657
  4734                           
  4735                           ;menu.c: 269:                 printf("Error");
  4736  0028EE  0ECE               	movlw	low STR_31
  4737  0028F0  0100               	movlb	0	; () banked
  4738  0028F2  6FEA               	movwf	printf@fmt& (0+255),b
  4739  0028F4  0EFF               	movlw	high STR_31
  4740  0028F6  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  4741  0028F8  EC37  F02A         	call	_printf	;wreg free
  4742                           
  4743                           ;menu.c: 270:         }
  4744  0028FC  D719               	goto	l8245
  4745  0028FE                     l8349:
  4746  0028FE  0101               	movlb	1	; () banked
  4747  002900  51C7               	movf	initMenu@curr& (0+255),w,b
  4748  002902  0100               	movlb	0	; () banked
  4749  002904  6FFA               	movwf	??_initMenu& (0+255),b
  4750  002906  6BFB               	clrf	(??_initMenu+1)& (0+255),b
  4751                           
  4752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4753                           ; Switch size 1, requested type "simple"
  4754                           ; Number of cases is 1, Range of values is 0 to 0
  4755                           ; switch strategies available:
  4756                           ; Name         Instructions Cycles
  4757                           ; simple_byte            4     3 (average)
  4758                           ;	Chosen strategy is simple_byte
  4759  002908  51FB               	movf	(??_initMenu+1)& (0+255),w,b
  4760  00290A  0A00               	xorlw	0	; case 0
  4761  00290C  A4D8               	btfss	status,2,c
  4762  00290E  D7E4               	goto	l8343
  4763                           
  4764                           ; BSR set to: 0
  4765                           ; Switch size 1, requested type "simple"
  4766                           ; Number of cases is 7, Range of values is 0 to 6
  4767                           ; switch strategies available:
  4768                           ; Name         Instructions Cycles
  4769                           ; simple_byte           22    12 (average)
  4770                           ;	Chosen strategy is simple_byte
  4771  002910  51FA               	movf	??_initMenu& (0+255),w,b
  4772  002912  0A00               	xorlw	0	; case 0
  4773  002914  B4D8               	btfsc	status,2,c
  4774  002916  D70A               	goto	l8243
  4775  002918  0A01               	xorlw	1	; case 1
  4776  00291A  B4D8               	btfsc	status,2,c
  4777  00291C  D7BF               	goto	l8331
  4778  00291E  0A03               	xorlw	3	; case 2
  4779  002920  B4D8               	btfsc	status,2,c
  4780  002922  D7BF               	goto	l8333
  4781  002924  0A01               	xorlw	1	; case 3
  4782  002926  B4D8               	btfsc	status,2,c
  4783  002928  D7BF               	goto	l8335
  4784  00292A  0A07               	xorlw	7	; case 4
  4785  00292C  B4D8               	btfsc	status,2,c
  4786  00292E  D7C3               	goto	l8337
  4787  002930  0A01               	xorlw	1	; case 5
  4788  002932  B4D8               	btfsc	status,2,c
  4789  002934  D7C7               	goto	l8339
  4790  002936  0A03               	xorlw	3	; case 6
  4791  002938  B4D8               	btfsc	status,2,c
  4792  00293A  D7C7               	goto	l8341
  4793  00293C  D7CD               	goto	l8343
  4794  00293E                     __end_of_initMenu:
  4795                           	opt callstack 0
  4796                           
  4797 ;; *************** function _numCanistersScreen *****************
  4798 ;; Defined at:
  4799 ;;		line 317 in file "menu.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  num             2  118[BANK0 ] int 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;Total ram usage:        3 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:   12
  4820 ;; This function calls:
  4821 ;;		_lcdInst
  4822 ;;		_printf
  4823 ;; This function is called by:
  4824 ;;		_initMenu
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text8
  4829  00538E                     __ptext8:
  4830                           	opt callstack 0
  4831  00538E                     _numCanistersScreen:
  4832                           	opt callstack 16
  4833                           
  4834                           ;menu.c: 317: void numCanistersScreen(int num);menu.c: 318: {;menu.c: 319:     { lcdInst
      +                          (0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;incstack = 0
  4838  00538E  0E80               	movlw	128
  4839  005390  EC9F  F02A         	call	_lcdInst
  4840  005394  0E07               	movlw	7
  4841  005396  6E7E               	movwf	??_numCanistersScreen& (0+255),c
  4842  005398  0E7D               	movlw	125
  4843  00539A                     u9667:
  4844  00539A  2EE8               	decfsz	wreg,f,c
  4845  00539C  D7FE               	bra	u9667
  4846  00539E  2E7E               	decfsz	??_numCanistersScreen& (0+255),f,c
  4847  0053A0  D7FC               	bra	u9667
  4848  0053A2  F000               	nop	
  4849                           
  4850                           ;menu.c: 320:     printf("# Canisters:%d", num);
  4851  0053A4  0E7C               	movlw	low STR_41
  4852  0053A6  0100               	movlb	0	; () banked
  4853  0053A8  6FEA               	movwf	printf@fmt& (0+255),b
  4854  0053AA  0EFE               	movlw	high STR_41
  4855  0053AC  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  4856  0053AE  C0F6  F0EC         	movff	numCanistersScreen@num,?_printf+2
  4857  0053B2  C0F7  F0ED         	movff	numCanistersScreen@num+1,?_printf+3
  4858  0053B6  EC37  F02A         	call	_printf	;wreg free
  4859  0053BA  0012               	return		;funcret
  4860  0053BC                     __end_of_numCanistersScreen:
  4861                           	opt callstack 0
  4862                           
  4863 ;; *************** function _getNumBallsGiven *****************
  4864 ;; Defined at:
  4865 ;;		line 58 in file "data.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2    0[COMRAM] int 
  4872 ;; Registers used:
  4873 ;;		None
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;Total ram usage:        2 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    1
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_initMenu
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text9
  4894  005556                     __ptext9:
  4895                           	opt callstack 0
  4896  005556                     _getNumBallsGiven:
  4897                           	opt callstack 27
  4898                           
  4899                           ;data.c: 70:     return numBalls;
  4900                           
  4901                           ;incstack = 0
  4902  005556  C18A  F001         	movff	_numBalls,?_getNumBallsGiven	;volatile
  4903  00555A  C18B  F002         	movff	_numBalls+1,?_getNumBallsGiven+1	;volatile
  4904  00555E  0012               	return		;funcret
  4905  005560                     __end_of_getNumBallsGiven:
  4906                           	opt callstack 0
  4907                           
  4908 ;; *************** function _canisterSelectScreen *****************
  4909 ;; Defined at:
  4910 ;;		line 323 in file "menu.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;		None
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;Total ram usage:        1 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:   12
  4931 ;; This function calls:
  4932 ;;		_lcdInst
  4933 ;;		_printf
  4934 ;; This function is called by:
  4935 ;;		_initMenu
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text10
  4940  004FAA                     __ptext10:
  4941                           	opt callstack 0
  4942  004FAA                     _canisterSelectScreen:
  4943                           	opt callstack 16
  4944                           
  4945                           ;menu.c: 325:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  4946                           
  4947                           ;incstack = 0
  4948  004FAA  0E80               	movlw	128
  4949  004FAC  EC9F  F02A         	call	_lcdInst
  4950  004FB0  0E07               	movlw	7
  4951  004FB2  6E7E               	movwf	??_canisterSelectScreen& (0+255),c
  4952  004FB4  0E7D               	movlw	125
  4953  004FB6                     u9677:
  4954  004FB6  2EE8               	decfsz	wreg,f,c
  4955  004FB8  D7FE               	bra	u9677
  4956  004FBA  2E7E               	decfsz	??_canisterSelectScreen& (0+255),f,c
  4957  004FBC  D7FC               	bra	u9677
  4958  004FBE  F000               	nop	
  4959                           
  4960                           ;menu.c: 326:     printf("Press # of ");
  4961  004FC0  0E4D               	movlw	low STR_42
  4962  004FC2  0100               	movlb	0	; () banked
  4963  004FC4  6FEA               	movwf	printf@fmt& (0+255),b
  4964  004FC6  0EFF               	movlw	high STR_42
  4965  004FC8  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  4966  004FCA  EC37  F02A         	call	_printf	;wreg free
  4967  004FCE  0EC0               	movlw	192
  4968  004FD0  EC9F  F02A         	call	_lcdInst
  4969                           
  4970                           ;menu.c: 328:     printf("Canister to be");
  4971  004FD4  0E9A               	movlw	low STR_43
  4972  004FD6  0100               	movlb	0	; () banked
  4973  004FD8  6FEA               	movwf	printf@fmt& (0+255),b
  4974  004FDA  0EFE               	movlw	high STR_43
  4975  004FDC  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  4976  004FDE  EC37  F02A         	call	_printf	;wreg free
  4977  004FE2  0E90               	movlw	144
  4978  004FE4  EC9F  F02A         	call	_lcdInst
  4979                           
  4980                           ;menu.c: 330:     printf("Selected");
  4981  004FE8  0EBC               	movlw	low STR_44
  4982  004FEA  0100               	movlb	0	; () banked
  4983  004FEC  6FEA               	movwf	printf@fmt& (0+255),b
  4984  004FEE  0EFF               	movlw	high STR_44
  4985  004FF0  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  4986  004FF2  EC37  F02A         	call	_printf	;wreg free
  4987  004FF6  0012               	return		;funcret
  4988  004FF8                     __end_of_canisterSelectScreen:
  4989                           	opt callstack 0
  4990                           
  4991 ;; *************** function _canisterDataScreen *****************
  4992 ;; Defined at:
  4993 ;;		line 333 in file "menu.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  id              2  118[BANK0 ] int 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  dist            4    0[BANK1 ] float 
  4998 ;;  can             9    6[BANK1 ] struct canister
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:         1       2      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:       18 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:   12
  5015 ;; This function calls:
  5016 ;;		___fltol
  5017 ;;		_getData
  5018 ;;		_lcdInst
  5019 ;;		_printf
  5020 ;; This function is called by:
  5021 ;;		_initMenu
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text11
  5026  003B50                     __ptext11:
  5027                           	opt callstack 0
  5028  003B50                     _canisterDataScreen:
  5029                           	opt callstack 16
  5030                           
  5031                           ;menu.c: 333: void canisterDataScreen(int id);menu.c: 334: {;menu.c: 335:     canister c
      +                          an = getData(id);
  5032                           
  5033                           ;incstack = 0
  5034  003B50  C0F6  F007         	movff	canisterDataScreen@id,getData@id
  5035  003B54  C0F7  F008         	movff	canisterDataScreen@id+1,getData@id+1
  5036  003B58  EC67  F029         	call	_getData	;wreg free
  5037  003B5C  EE21  F0B6         	lfsr	2,canisterDataScreen@can
  5038  003B60  0E08               	movlw	8
  5039  003B62                     u8251:
  5040  003B62  CFEB FFDB          	movff	plusw0,plusw2
  5041  003B66  06E8               	decf	wreg,f,c
  5042  003B68  E2FC               	bc	u8251
  5043                           
  5044                           ;menu.c: 336:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5045  003B6A  0E80               	movlw	128
  5046  003B6C  EC9F  F02A         	call	_lcdInst
  5047  003B70  0E07               	movlw	7
  5048  003B72  6E7E               	movwf	??_canisterDataScreen& (0+255),c
  5049  003B74  0E7D               	movlw	125
  5050  003B76                     u9687:
  5051  003B76  2EE8               	decfsz	wreg,f,c
  5052  003B78  D7FE               	bra	u9687
  5053  003B7A  2E7E               	decfsz	??_canisterDataScreen& (0+255),f,c
  5054  003B7C  D7FC               	bra	u9687
  5055  003B7E  F000               	nop	
  5056                           
  5057                           ;menu.c: 337:     if (can.id == 0)
  5058  003B80  0101               	movlb	1	; () banked
  5059  003B82  51B6               	movf	canisterDataScreen@can& (0+255),w,b
  5060  003B84  11B7               	iorwf	(canisterDataScreen@can+1)& (0+255),w,b
  5061  003B86  A4D8               	btfss	status,2,c
  5062  003B88  D008               	goto	l8187
  5063                           
  5064                           ; BSR set to: 1
  5065                           ;menu.c: 338:     {;menu.c: 339:         printf("ERROR INVALID");
  5066  003B8A  0EC7               	movlw	low STR_45
  5067  003B8C  0100               	movlb	0	; () banked
  5068  003B8E  6FEA               	movwf	printf@fmt& (0+255),b
  5069  003B90  0EFE               	movlw	high STR_45
  5070  003B92  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5071  003B94  EC37  F02A         	call	_printf	;wreg free
  5072                           
  5073                           ;menu.c: 340:     }
  5074  003B98  0012               	return	
  5075  003B9A                     l8187:
  5076                           
  5077                           ; BSR set to: 1
  5078                           ;menu.c: 342:     {;menu.c: 343:         printf("Canister: %d", id);
  5079  003B9A  0E26               	movlw	low STR_46
  5080  003B9C  0100               	movlb	0	; () banked
  5081  003B9E  6FEA               	movwf	printf@fmt& (0+255),b
  5082  003BA0  0EFF               	movlw	high STR_46
  5083  003BA2  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5084  003BA4  C0F6  F0EC         	movff	canisterDataScreen@id,?_printf+2
  5085  003BA8  C0F7  F0ED         	movff	canisterDataScreen@id+1,?_printf+3
  5086  003BAC  EC37  F02A         	call	_printf	;wreg free
  5087  003BB0  0EC0               	movlw	192
  5088  003BB2  EC9F  F02A         	call	_lcdInst
  5089                           
  5090                           ;menu.c: 347:         if (can.status == 0)
  5091  003BB6  0101               	movlb	1	; () banked
  5092  003BB8  51BD               	movf	(canisterDataScreen@can+7)& (0+255),w,b
  5093  003BBA  A4D8               	btfss	status,2,c
  5094  003BBC  D00C               	goto	l8195
  5095                           
  5096                           ; BSR set to: 1
  5097                           ;menu.c: 348:             printf("Status: %s", "Empty");
  5098  003BBE  0E89               	movlw	low STR_47
  5099  003BC0  0100               	movlb	0	; () banked
  5100  003BC2  6FEA               	movwf	printf@fmt& (0+255),b
  5101  003BC4  0EFF               	movlw	high STR_47
  5102  003BC6  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5103  003BC8  0ED4               	movlw	low STR_48
  5104  003BCA  6FEC               	movwf	(?_printf+2)& (0+255),b
  5105  003BCC  0EFF               	movlw	high STR_48
  5106  003BCE  6FED               	movwf	(?_printf+3)& (0+255),b
  5107  003BD0  EC37  F02A         	call	_printf	;wreg free
  5108  003BD4  D007               	goto	l8197
  5109  003BD6                     l8195:
  5110                           
  5111                           ; BSR set to: 1
  5112                           ;menu.c: 350:             printf("Status: Full");
  5113  003BD6  0E33               	movlw	low STR_49
  5114  003BD8  0100               	movlb	0	; () banked
  5115  003BDA  6FEA               	movwf	printf@fmt& (0+255),b
  5116  003BDC  0EFF               	movlw	high STR_49
  5117  003BDE  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5118  003BE0  EC37  F02A         	call	_printf	;wreg free
  5119  003BE4                     l8197:
  5120  003BE4  0E90               	movlw	144
  5121  003BE6  EC9F  F02A         	call	_lcdInst
  5122                           
  5123                           ;menu.c: 352:         if (can.ballDeposited == 0)
  5124  003BEA  0101               	movlb	1	; () banked
  5125  003BEC  51BE               	movf	(canisterDataScreen@can+8)& (0+255),w,b
  5126  003BEE  A4D8               	btfss	status,2,c
  5127  003BF0  D00C               	goto	l8203
  5128                           
  5129                           ; BSR set to: 1
  5130                           ;menu.c: 353:             printf("Receive Ball?: %c", 'N');
  5131  003BF2  0ED4               	movlw	low STR_50
  5132  003BF4  0100               	movlb	0	; () banked
  5133  003BF6  6FEA               	movwf	printf@fmt& (0+255),b
  5134  003BF8  0EFD               	movlw	high STR_50
  5135  003BFA  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5136  003BFC  0E00               	movlw	0
  5137  003BFE  6FED               	movwf	(?_printf+3)& (0+255),b
  5138  003C00  0E4E               	movlw	78
  5139  003C02  6FEC               	movwf	(?_printf+2)& (0+255),b
  5140  003C04  EC37  F02A         	call	_printf	;wreg free
  5141  003C08  D007               	goto	l8205
  5142  003C0A                     l8203:
  5143                           
  5144                           ; BSR set to: 1
  5145                           ;menu.c: 355:             printf("Receive Ball?: Y");
  5146  003C0A  0EF8               	movlw	low STR_51
  5147  003C0C  0100               	movlb	0	; () banked
  5148  003C0E  6FEA               	movwf	printf@fmt& (0+255),b
  5149  003C10  0EFD               	movlw	high STR_51
  5150  003C12  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5151  003C14  EC37  F02A         	call	_printf	;wreg free
  5152  003C18                     l8205:
  5153  003C18  0ED0               	movlw	208
  5154  003C1A  EC9F  F02A         	call	_lcdInst
  5155                           
  5156                           ;menu.c: 357:         float dist = can.distance;
  5157  003C1E  C1B9  F1B0         	movff	canisterDataScreen@can+3,canisterDataScreen@dist
  5158  003C22  C1BA  F1B1         	movff	canisterDataScreen@can+4,canisterDataScreen@dist+1
  5159  003C26  C1BB  F1B2         	movff	canisterDataScreen@can+5,canisterDataScreen@dist+2
  5160  003C2A  C1BC  F1B3         	movff	canisterDataScreen@can+6,canisterDataScreen@dist+3
  5161                           
  5162                           ;menu.c: 358:         printf("Distance: %d cm", (int) dist);
  5163  003C2E  C1B0  F001         	movff	canisterDataScreen@dist,___fltol@f1
  5164  003C32  C1B1  F002         	movff	canisterDataScreen@dist+1,___fltol@f1+1
  5165  003C36  C1B2  F003         	movff	canisterDataScreen@dist+2,___fltol@f1+2
  5166  003C3A  C1B3  F004         	movff	canisterDataScreen@dist+3,___fltol@f1+3
  5167  003C3E  EC4D  F020         	call	___fltol	;wreg free
  5168  003C42  C001  F1B4         	movff	?___fltol,_canisterDataScreen$3054
  5169  003C46  C002  F1B5         	movff	?___fltol+1,_canisterDataScreen$3054+1
  5170                           
  5171                           ;menu.c: 358:         printf("Distance: %d cm", (int) dist);
  5172  003C4A  0E4C               	movlw	low STR_52
  5173  003C4C  0100               	movlb	0	; () banked
  5174  003C4E  6FEA               	movwf	printf@fmt& (0+255),b
  5175  003C50  0EFE               	movlw	high STR_52
  5176  003C52  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5177  003C54  C1B4  F0EC         	movff	_canisterDataScreen$3054,?_printf+2
  5178  003C58  C1B5  F0ED         	movff	_canisterDataScreen$3054+1,?_printf+3
  5179  003C5C  EC37  F02A         	call	_printf	;wreg free
  5180  003C60  0012               	return		;funcret
  5181  003C62                     __end_of_canisterDataScreen:
  5182                           	opt callstack 0
  5183                           
  5184 ;; *************** function _buildTimeScreen *****************
  5185 ;; Defined at:
  5186 ;;		line 302 in file "menu.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  time            4  118[BANK0 ] float 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;Total ram usage:        5 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:   12
  5207 ;; This function calls:
  5208 ;;		___flmul
  5209 ;;		___xxtofl
  5210 ;;		_lcdInst
  5211 ;;		_printf
  5212 ;; This function is called by:
  5213 ;;		_initMenu
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text12
  5218  004858                     __ptext12:
  5219                           	opt callstack 0
  5220  004858                     _buildTimeScreen:
  5221                           	opt callstack 16
  5222                           
  5223                           ;menu.c: 306:     float time = timeCount*0.0262144;
  5224                           
  5225                           ;incstack = 0
  5226  004858  C162  F01F         	movff	_timeCount,___xxtofl@val	;volatile
  5227  00485C  C163  F020         	movff	_timeCount+1,___xxtofl@val+1	;volatile
  5228  004860  C164  F021         	movff	_timeCount+2,___xxtofl@val+2	;volatile
  5229  004864  C165  F022         	movff	_timeCount+3,___xxtofl@val+3	;volatile
  5230  004868  0E01               	movlw	1
  5231  00486A  EC40  F01B         	call	___xxtofl
  5232  00486E  C01F  F02D         	movff	?___xxtofl,___flmul@b
  5233  004872  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  5234  004876  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  5235  00487A  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  5236  00487E  0E95               	movlw	149
  5237  004880  6E31               	movwf	___flmul@a,c
  5238  004882  0EBF               	movlw	191
  5239  004884  6E32               	movwf	___flmul@a+1,c
  5240  004886  0ED6               	movlw	214
  5241  004888  6E33               	movwf	___flmul@a+2,c
  5242  00488A  0E3C               	movlw	60
  5243  00488C  6E34               	movwf	___flmul@a+3,c
  5244  00488E  ECA4  F00A         	call	___flmul	;wreg free
  5245  004892  C02D  F0F6         	movff	?___flmul,buildTimeScreen@time
  5246  004896  C02E  F0F7         	movff	?___flmul+1,buildTimeScreen@time+1
  5247  00489A  C02F  F0F8         	movff	?___flmul+2,buildTimeScreen@time+2
  5248  00489E  C030  F0F9         	movff	?___flmul+3,buildTimeScreen@time+3
  5249                           
  5250                           ;menu.c: 307:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5251  0048A2  0E80               	movlw	128
  5252  0048A4  EC9F  F02A         	call	_lcdInst
  5253  0048A8  0E07               	movlw	7
  5254  0048AA  6E7E               	movwf	??_buildTimeScreen& (0+255),c
  5255  0048AC  0E7D               	movlw	125
  5256  0048AE                     u9697:
  5257  0048AE  2EE8               	decfsz	wreg,f,c
  5258  0048B0  D7FE               	bra	u9697
  5259  0048B2  2E7E               	decfsz	??_buildTimeScreen& (0+255),f,c
  5260  0048B4  D7FC               	bra	u9697
  5261  0048B6  F000               	nop	
  5262                           
  5263                           ;menu.c: 308:     printf("Time: %3.2f s", time);
  5264  0048B8  0ED5               	movlw	low STR_39
  5265  0048BA  0100               	movlb	0	; () banked
  5266  0048BC  6FEA               	movwf	printf@fmt& (0+255),b
  5267  0048BE  0EFE               	movlw	high STR_39
  5268  0048C0  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5269  0048C2  C0F6  F0EC         	movff	buildTimeScreen@time,?_printf+2
  5270  0048C6  C0F7  F0ED         	movff	buildTimeScreen@time+1,?_printf+3
  5271  0048CA  C0F8  F0EE         	movff	buildTimeScreen@time+2,?_printf+4
  5272  0048CE  C0F9  F0EF         	movff	buildTimeScreen@time+3,?_printf+5
  5273  0048D2  EC37  F02A         	call	_printf	;wreg free
  5274  0048D6  0012               	return		;funcret
  5275  0048D8                     __end_of_buildTimeScreen:
  5276                           	opt callstack 0
  5277                           
  5278 ;; *************** function _buildEndScreenMenu *****************
  5279 ;; Defined at:
  5280 ;;		line 289 in file "menu.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;Total ram usage:        1 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:   12
  5301 ;; This function calls:
  5302 ;;		_lcdInst
  5303 ;;		_printf
  5304 ;; This function is called by:
  5305 ;;		_initMenu
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text13
  5310  004CD4                     __ptext13:
  5311                           	opt callstack 0
  5312  004CD4                     _buildEndScreenMenu:
  5313                           	opt callstack 16
  5314                           
  5315                           ;menu.c: 291:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5316                           
  5317                           ;incstack = 0
  5318  004CD4  0E80               	movlw	128
  5319  004CD6  EC9F  F02A         	call	_lcdInst
  5320  004CDA  0E07               	movlw	7
  5321  004CDC  6E7E               	movwf	??_buildEndScreenMenu& (0+255),c
  5322  004CDE  0E7D               	movlw	125
  5323  004CE0                     u9707:
  5324  004CE0  2EE8               	decfsz	wreg,f,c
  5325  004CE2  D7FE               	bra	u9707
  5326  004CE4  2E7E               	decfsz	??_buildEndScreenMenu& (0+255),f,c
  5327  004CE6  D7FC               	bra	u9707
  5328  004CE8  F000               	nop	
  5329                           
  5330                           ;menu.c: 292:     printf("1.Operation Time");
  5331  004CEA  0E1A               	movlw	low STR_35
  5332  004CEC  0100               	movlb	0	; () banked
  5333  004CEE  6FEA               	movwf	printf@fmt& (0+255),b
  5334  004CF0  0EFE               	movlw	high STR_35
  5335  004CF2  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5336  004CF4  EC37  F02A         	call	_printf	;wreg free
  5337  004CF8  0EC0               	movlw	192
  5338  004CFA  EC9F  F02A         	call	_lcdInst
  5339                           
  5340                           ;menu.c: 294:     printf("2.# Balls Given");
  5341  004CFE  0E5C               	movlw	low STR_36
  5342  004D00  0100               	movlb	0	; () banked
  5343  004D02  6FEA               	movwf	printf@fmt& (0+255),b
  5344  004D04  0EFE               	movlw	high STR_36
  5345  004D06  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5346  004D08  EC37  F02A         	call	_printf	;wreg free
  5347  004D0C  0E90               	movlw	144
  5348  004D0E  EC9F  F02A         	call	_lcdInst
  5349                           
  5350                           ;menu.c: 296:     printf("3.# Canisters");
  5351  004D12  0EE3               	movlw	low STR_37
  5352  004D14  0100               	movlb	0	; () banked
  5353  004D16  6FEA               	movwf	printf@fmt& (0+255),b
  5354  004D18  0EFE               	movlw	high STR_37
  5355  004D1A  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5356  004D1C  EC37  F02A         	call	_printf	;wreg free
  5357  004D20  0ED0               	movlw	208
  5358  004D22  EC9F  F02A         	call	_lcdInst
  5359                           
  5360                           ;menu.c: 298:     printf("4.Canister Data");
  5361  004D26  0E3C               	movlw	low STR_38
  5362  004D28  0100               	movlb	0	; () banked
  5363  004D2A  6FEA               	movwf	printf@fmt& (0+255),b
  5364  004D2C  0EFE               	movlw	high STR_38
  5365  004D2E  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5366  004D30  EC37  F02A         	call	_printf	;wreg free
  5367  004D34  0012               	return		;funcret
  5368  004D36                     __end_of_buildEndScreenMenu:
  5369                           	opt callstack 0
  5370                           
  5371 ;; *************** function _buildEndScreen *****************
  5372 ;; Defined at:
  5373 ;;		line 276 in file "menu.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  can             9    4[BANK1 ] struct canister
  5378 ;;  dist            4    0        float 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Totals:         1       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;Total ram usage:       14 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:   12
  5395 ;; This function calls:
  5396 ;;		_getData
  5397 ;;		_lcdInst
  5398 ;;		_printf
  5399 ;; This function is called by:
  5400 ;;		_initMenu
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text14
  5405  004C6C                     __ptext14:
  5406                           	opt callstack 0
  5407  004C6C                     _buildEndScreen:
  5408                           	opt callstack 16
  5409                           
  5410                           ;menu.c: 278:     canister can = getData(1);
  5411                           
  5412                           ;incstack = 0
  5413  004C6C  0E00               	movlw	0
  5414  004C6E  6E08               	movwf	getData@id+1,c
  5415  004C70  0E01               	movlw	1
  5416  004C72  6E07               	movwf	getData@id,c
  5417  004C74  EC67  F029         	call	_getData	;wreg free
  5418  004C78  EE21  F0B4         	lfsr	2,buildEndScreen@can
  5419  004C7C  0E08               	movlw	8
  5420  004C7E                     u8241:
  5421  004C7E  CFEB FFDB          	movff	plusw0,plusw2
  5422  004C82  06E8               	decf	wreg,f,c
  5423  004C84  E2FC               	bc	u8241
  5424                           
  5425                           ;menu.c: 280:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5426  004C86  0E80               	movlw	128
  5427  004C88  EC9F  F02A         	call	_lcdInst
  5428  004C8C  0E07               	movlw	7
  5429  004C8E  6E7E               	movwf	??_buildEndScreen& (0+255),c
  5430  004C90  0E7D               	movlw	125
  5431  004C92                     u9717:
  5432  004C92  2EE8               	decfsz	wreg,f,c
  5433  004C94  D7FE               	bra	u9717
  5434  004C96  2E7E               	decfsz	??_buildEndScreen& (0+255),f,c
  5435  004C98  D7FC               	bra	u9717
  5436  004C9A  F000               	nop	
  5437                           
  5438                           ;menu.c: 281:     printf("Task Completed");
  5439  004C9C  0E8B               	movlw	low STR_32
  5440  004C9E  0100               	movlb	0	; () banked
  5441  004CA0  6FEA               	movwf	printf@fmt& (0+255),b
  5442  004CA2  0EFE               	movlw	high STR_32
  5443  004CA4  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5444  004CA6  EC37  F02A         	call	_printf	;wreg free
  5445  004CAA  0E90               	movlw	144
  5446  004CAC  EC9F  F02A         	call	_lcdInst
  5447                           
  5448                           ;menu.c: 284:     printf("Press Any Key");
  5449  004CB0  0EF1               	movlw	low STR_27
  5450  004CB2  0100               	movlb	0	; () banked
  5451  004CB4  6FEA               	movwf	printf@fmt& (0+255),b
  5452  004CB6  0EFE               	movlw	high STR_27
  5453  004CB8  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5454  004CBA  EC37  F02A         	call	_printf	;wreg free
  5455  004CBE  0ED0               	movlw	208
  5456  004CC0  EC9F  F02A         	call	_lcdInst
  5457                           
  5458                           ;menu.c: 286:     printf("To Continue");
  5459  004CC4  0E59               	movlw	low STR_34
  5460  004CC6  0100               	movlb	0	; () banked
  5461  004CC8  6FEA               	movwf	printf@fmt& (0+255),b
  5462  004CCA  0EFF               	movlw	high STR_34
  5463  004CCC  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5464  004CCE  EC37  F02A         	call	_printf	;wreg free
  5465  004CD2  0012               	return		;funcret
  5466  004CD4                     __end_of_buildEndScreen:
  5467                           	opt callstack 0
  5468                           
  5469 ;; *************** function _ballsGivenScreen *****************
  5470 ;; Defined at:
  5471 ;;		line 311 in file "menu.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  balls           2  118[BANK0 ] int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:        3 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:   12
  5492 ;; This function calls:
  5493 ;;		_lcdInst
  5494 ;;		_printf
  5495 ;; This function is called by:
  5496 ;;		_initMenu
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text15
  5501  0053BC                     __ptext15:
  5502                           	opt callstack 0
  5503  0053BC                     _ballsGivenScreen:
  5504                           	opt callstack 16
  5505                           
  5506                           ;menu.c: 311: void ballsGivenScreen(int balls);menu.c: 312: {;menu.c: 313:     { lcdInst
      +                          (0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5507                           
  5508                           ;incstack = 0
  5509  0053BC  0E80               	movlw	128
  5510  0053BE  EC9F  F02A         	call	_lcdInst
  5511  0053C2  0E07               	movlw	7
  5512  0053C4  6E7E               	movwf	??_ballsGivenScreen& (0+255),c
  5513  0053C6  0E7D               	movlw	125
  5514  0053C8                     u9727:
  5515  0053C8  2EE8               	decfsz	wreg,f,c
  5516  0053CA  D7FE               	bra	u9727
  5517  0053CC  2E7E               	decfsz	??_ballsGivenScreen& (0+255),f,c
  5518  0053CE  D7FC               	bra	u9727
  5519  0053D0  F000               	nop	
  5520                           
  5521                           ;menu.c: 314:     printf("# Balls Given:%d", balls);
  5522  0053D2  0E09               	movlw	low STR_40
  5523  0053D4  0100               	movlb	0	; () banked
  5524  0053D6  6FEA               	movwf	printf@fmt& (0+255),b
  5525  0053D8  0EFE               	movlw	high STR_40
  5526  0053DA  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  5527  0053DC  C0F6  F0EC         	movff	ballsGivenScreen@balls,?_printf+2
  5528  0053E0  C0F7  F0ED         	movff	ballsGivenScreen@balls+1,?_printf+3
  5529  0053E4  EC37  F02A         	call	_printf	;wreg free
  5530  0053E8  0012               	return		;funcret
  5531  0053EA                     __end_of_ballsGivenScreen:
  5532                           	opt callstack 0
  5533                           
  5534 ;; *************** function _getDistance *****************
  5535 ;; Defined at:
  5536 ;;		line 289 in file "sensors.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  count           2   73[COMRAM] int 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  4   69[COMRAM] float 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;Total ram usage:        6 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    4
  5557 ;; This function calls:
  5558 ;;		___flmul
  5559 ;;		___xxtofl
  5560 ;;		_shaftEncoderCount
  5561 ;; This function is called by:
  5562 ;;		_testDrive
  5563 ;;		_testDrive2
  5564 ;;		_testShaftEncoder
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text16
  5569  004EAC                     __ptext16:
  5570                           	opt callstack 0
  5571  004EAC                     _getDistance:
  5572                           	opt callstack 25
  5573                           
  5574                           ;sensors.c: 291:     int count = shaftEncoderCount();
  5575                           
  5576                           ;incstack = 0
  5577  004EAC  EC34  F022         	call	_shaftEncoderCount	;wreg free
  5578  004EB0  C016  F04A         	movff	?_shaftEncoderCount,getDistance@count
  5579  004EB4  C017  F04B         	movff	?_shaftEncoderCount+1,getDistance@count+1
  5580                           
  5581                           ;sensors.c: 292:     return 1.409743*count;
  5582  004EB8  C04A  F01F         	movff	getDistance@count,___xxtofl@val
  5583  004EBC  C04B  F020         	movff	getDistance@count+1,___xxtofl@val+1
  5584  004EC0  0E00               	movlw	0
  5585  004EC2  BE20               	btfsc	___xxtofl@val+1,7,c
  5586  004EC4  0EFF               	movlw	-1
  5587  004EC6  6E21               	movwf	___xxtofl@val+2,c
  5588  004EC8  6E22               	movwf	___xxtofl@val+3,c
  5589  004ECA  0E01               	movlw	1
  5590  004ECC  EC40  F01B         	call	___xxtofl
  5591  004ED0  C01F  F02D         	movff	?___xxtofl,___flmul@b
  5592  004ED4  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  5593  004ED8  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  5594  004EDC  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  5595  004EE0  0E75               	movlw	117
  5596  004EE2  6E31               	movwf	___flmul@a,c
  5597  004EE4  0E72               	movlw	114
  5598  004EE6  6E32               	movwf	___flmul@a+1,c
  5599  004EE8  0EB4               	movlw	180
  5600  004EEA  6E33               	movwf	___flmul@a+2,c
  5601  004EEC  0E3F               	movlw	63
  5602  004EEE  6E34               	movwf	___flmul@a+3,c
  5603  004EF0  ECA4  F00A         	call	___flmul	;wreg free
  5604  004EF4  C02D  F046         	movff	?___flmul,?_getDistance
  5605  004EF8  C02E  F047         	movff	?___flmul+1,?_getDistance+1
  5606  004EFC  C02F  F048         	movff	?___flmul+2,?_getDistance+2
  5607  004F00  C030  F049         	movff	?___flmul+3,?_getDistance+3
  5608  004F04  0012               	return		;funcret
  5609  004F06                     __end_of_getDistance:
  5610                           	opt callstack 0
  5611                           
  5612 ;; *************** function _detectCanister *****************
  5613 ;; Defined at:
  5614 ;;		line 210 in file "main.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  prevCan         9   13[BANK1 ] struct canister
  5619 ;;  location        4   30[BANK1 ] float 
  5620 ;;  oldLocation     4   22[BANK1 ] float 
  5621 ;;  avgDist         4    0        float 
  5622 ;;  dist3           2   42[BANK1 ] int 
  5623 ;;  state           2   40[BANK1 ] int 
  5624 ;;  dist2           2   38[BANK1 ] int 
  5625 ;;  prevID          2   34[BANK1 ] int 
  5626 ;;  dist4           2   27[BANK1 ] int 
  5627 ;;  dist1           2   11[BANK1 ] int 
  5628 ;;  i               2    0        int 
  5629 ;;  dist5           2    0        int 
  5630 ;;  oldDist         2    0        int 
  5631 ;;  newDist         2    0        int 
  5632 ;;  deposited       1   37[BANK1 ] _Bool 
  5633 ;;  status          1   36[BANK1 ] _Bool 
  5634 ;;  facing          1   29[BANK1 ] enum E2833
  5635 ;;  success         1   26[BANK1 ] _Bool 
  5636 ;;  right           1   10[BANK1 ] _Bool 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         0       2      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:       40 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:   14
  5653 ;; This function calls:
  5654 ;;		___fladd
  5655 ;;		___flge
  5656 ;;		___flsub
  5657 ;;		_distFromCanister
  5658 ;;		_getData
  5659 ;;		_getNumCanisters
  5660 ;;		_increaseNumBalls
  5661 ;;		_lcdInst
  5662 ;;		_moveRobot
  5663 ;;		_printf
  5664 ;;		_readDigitalSensor
  5665 ;;		_releaseDoor
  5666 ;;		_setBackward
  5667 ;;		_setForward
  5668 ;;		_setRight
  5669 ;;		_storeCanisterData
  5670 ;; This function is called by:
  5671 ;;		_testDrive
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text17
  5676  00118E                     __ptext17:
  5677                           	opt callstack 0
  5678  00118E                     _detectCanister:
  5679                           	opt callstack 15
  5680                           
  5681                           ;main.c: 215:     int i;;main.c: 216:     direction facing;;main.c: 217:     float locat
      +                          ion, oldLocation;;main.c: 218:     canister prevCan;;main.c: 219:     int prevID;;main.c
      +                          : 220:     int state;;main.c: 221:     _Bool status, deposited;;main.c: 222:     _Bool s
      +                          uccess;;main.c: 223:     _Bool right = 0;
  5682                           
  5683                           ;incstack = 0
  5684  00118E  0E00               	movlw	0
  5685  001190  0101               	movlb	1	; () banked
  5686  001192  6FBA               	movwf	detectCanister@right& (0+255),b
  5687                           
  5688                           ; BSR set to: 1
  5689                           ;main.c: 225:     LATBbits.LATB3 = 1;
  5690  001194  868A               	bsf	3978,3,c	;volatile
  5691                           
  5692                           ; BSR set to: 1
  5693                           ;main.c: 227:     prevID = getNumCanisters();
  5694  001196  ECB0  F02A         	call	_getNumCanisters	;wreg free
  5695  00119A  C001  F1D2         	movff	?_getNumCanisters,detectCanister@prevID
  5696  00119E  C002  F1D3         	movff	?_getNumCanisters+1,detectCanister@prevID+1
  5697                           
  5698                           ;main.c: 228:     if (prevID >0)
  5699  0011A2  0101               	movlb	1	; () banked
  5700  0011A4  BFD3               	btfsc	(detectCanister@prevID+1)& (0+255),7,b
  5701  0011A6  D01B               	goto	l8375
  5702  0011A8  51D3               	movf	(detectCanister@prevID+1)& (0+255),w,b
  5703  0011AA  E103               	bnz	u8500
  5704  0011AC  05D2               	decf	detectCanister@prevID& (0+255),w,b
  5705  0011AE  A0D8               	btfss	status,0,c
  5706  0011B0  D016               	goto	l8375
  5707  0011B2                     u8500:
  5708                           
  5709                           ; BSR set to: 1
  5710                           ;main.c: 229:     {;main.c: 230:         prevCan = getData(prevID);
  5711  0011B2  C1D2  F007         	movff	detectCanister@prevID,getData@id
  5712  0011B6  C1D3  F008         	movff	detectCanister@prevID+1,getData@id+1
  5713  0011BA  EC67  F029         	call	_getData	;wreg free
  5714  0011BE  EE21  F0BD         	lfsr	2,detectCanister@prevCan
  5715  0011C2  0E08               	movlw	8
  5716  0011C4                     u8511:
  5717  0011C4  CFEB FFDB          	movff	plusw0,plusw2
  5718  0011C8  06E8               	decf	wreg,f,c
  5719  0011CA  E2FC               	bc	u8511
  5720                           
  5721                           ;main.c: 231:         oldLocation = prevCan.distance;
  5722  0011CC  C1C0  F1C6         	movff	detectCanister@prevCan+3,detectCanister@oldLocation
  5723  0011D0  C1C1  F1C7         	movff	detectCanister@prevCan+4,detectCanister@oldLocation+1
  5724  0011D4  C1C2  F1C8         	movff	detectCanister@prevCan+5,detectCanister@oldLocation+2
  5725  0011D8  C1C3  F1C9         	movff	detectCanister@prevCan+6,detectCanister@oldLocation+3
  5726                           
  5727                           ;main.c: 232:     }
  5728  0011DC  D008               	goto	l8377
  5729  0011DE                     l8375:
  5730                           
  5731                           ; BSR set to: 1
  5732                           ;main.c: 234:     {;main.c: 235:         oldLocation = -30;
  5733  0011DE  0E00               	movlw	0
  5734  0011E0  6FC6               	movwf	detectCanister@oldLocation& (0+255),b
  5735  0011E2  0E00               	movlw	0
  5736  0011E4  6FC7               	movwf	(detectCanister@oldLocation+1)& (0+255),b
  5737  0011E6  0EF0               	movlw	240
  5738  0011E8  6FC8               	movwf	(detectCanister@oldLocation+2)& (0+255),b
  5739  0011EA  0EC1               	movlw	193
  5740  0011EC  6FC9               	movwf	(detectCanister@oldLocation+3)& (0+255),b
  5741  0011EE                     l8377:
  5742                           
  5743                           ;main.c: 258:     location = suspendedDist + 4;
  5744  0011EE  C17A  F04C         	movff	_suspendedDist,___fladd@b	;volatile
  5745  0011F2  C17B  F04D         	movff	_suspendedDist+1,___fladd@b+1	;volatile
  5746  0011F6  C17C  F04E         	movff	_suspendedDist+2,___fladd@b+2	;volatile
  5747  0011FA  C17D  F04F         	movff	_suspendedDist+3,___fladd@b+3	;volatile
  5748  0011FE  0E00               	movlw	0
  5749  001200  6E50               	movwf	___fladd@a,c
  5750  001202  0E00               	movlw	0
  5751  001204  6E51               	movwf	___fladd@a+1,c
  5752  001206  0E80               	movlw	128
  5753  001208  6E52               	movwf	___fladd@a+2,c
  5754  00120A  0E40               	movlw	64
  5755  00120C  6E53               	movwf	___fladd@a+3,c
  5756  00120E  ECEF  F00D         	call	___fladd	;wreg free
  5757  001212  C04C  F1CE         	movff	?___fladd,detectCanister@location
  5758  001216  C04D  F1CF         	movff	?___fladd+1,detectCanister@location+1
  5759  00121A  C04E  F1D0         	movff	?___fladd+2,detectCanister@location+2
  5760  00121E  C04F  F1D1         	movff	?___fladd+3,detectCanister@location+3
  5761                           
  5762                           ;main.c: 260:     while(readDigitalSensor())
  5763  001222  D006               	goto	l8381
  5764  001224                     l8379:
  5765                           
  5766                           ;main.c: 261:     {;main.c: 262:         moveRobot(1);
  5767  001224  0E00               	movlw	0
  5768  001226  6E02               	movwf	moveRobot@move+1,c
  5769  001228  0E01               	movlw	1
  5770  00122A  6E01               	movwf	moveRobot@move,c
  5771  00122C  EC6C  F024         	call	_moveRobot	;wreg free
  5772  001230                     l8381:
  5773                           
  5774                           ;main.c: 260:     while(readDigitalSensor())
  5775  001230  ECCC  F022         	call	_readDigitalSensor	;wreg free
  5776  001234  5016               	movf	?_readDigitalSensor,w,c
  5777  001236  1017               	iorwf	?_readDigitalSensor+1,w,c
  5778  001238  B4D8               	btfsc	status,2,c
  5779  00123A  D007               	goto	l8385
  5780  00123C  D7F3               	goto	l8379
  5781  00123E                     l8383:
  5782                           
  5783                           ;main.c: 265:     {;main.c: 266:         moveRobot(2);
  5784  00123E  0E00               	movlw	0
  5785  001240  6E02               	movwf	moveRobot@move+1,c
  5786  001242  0E02               	movlw	2
  5787  001244  6E01               	movwf	moveRobot@move,c
  5788  001246  EC6C  F024         	call	_moveRobot	;wreg free
  5789  00124A                     l8385:
  5790                           
  5791                           ;main.c: 264:     while(!readDigitalSensor())
  5792  00124A  ECCC  F022         	call	_readDigitalSensor	;wreg free
  5793  00124E  5016               	movf	?_readDigitalSensor,w,c
  5794  001250  1017               	iorwf	?_readDigitalSensor+1,w,c
  5795  001252  B4D8               	btfsc	status,2,c
  5796  001254  D7F4               	goto	l8383
  5797                           
  5798                           ;main.c: 268:     setBackward(1);
  5799  001256  0E00               	movlw	0
  5800  001258  0100               	movlb	0	; () banked
  5801  00125A  6FFB               	movwf	(setBackward@count+1)& (0+255),b
  5802  00125C  0E01               	movlw	1
  5803  00125E  6FFA               	movwf	setBackward@count& (0+255),b
  5804  001260  EC59  F025         	call	_setBackward	;wreg free
  5805                           
  5806                           ;main.c: 270:     dist2 = distFromCanister(2);
  5807  001264  0E00               	movlw	0
  5808  001266  6E17               	movwf	distFromCanister@sensor+1,c
  5809  001268  0E02               	movlw	2
  5810  00126A  6E16               	movwf	distFromCanister@sensor,c
  5811  00126C  EC80  F01C         	call	_distFromCanister	;wreg free
  5812  001270  C016  F1D6         	movff	?_distFromCanister,detectCanister@dist2
  5813  001274  C017  F1D7         	movff	?_distFromCanister+1,detectCanister@dist2+1
  5814                           
  5815                           ;main.c: 271:     dist3 = distFromCanister(7);
  5816  001278  0E00               	movlw	0
  5817  00127A  6E17               	movwf	distFromCanister@sensor+1,c
  5818  00127C  0E07               	movlw	7
  5819  00127E  6E16               	movwf	distFromCanister@sensor,c
  5820  001280  EC80  F01C         	call	_distFromCanister	;wreg free
  5821  001284  C016  F1DA         	movff	?_distFromCanister,detectCanister@dist3
  5822  001288  C017  F1DB         	movff	?_distFromCanister+1,detectCanister@dist3+1
  5823  00128C  0E00               	movlw	0
  5824  00128E  6E17               	movwf	distFromCanister@sensor+1,c
  5825  001290  0E08               	movlw	8
  5826  001292  6E16               	movwf	distFromCanister@sensor,c
  5827  001294  EC80  F01C         	call	_distFromCanister	;wreg free
  5828                           
  5829                           ;main.c: 273:     if (dist2 > 0 )
  5830  001298  0101               	movlb	1	; () banked
  5831  00129A  BFD7               	btfsc	(detectCanister@dist2+1)& (0+255),7,b
  5832  00129C  D044               	goto	u8580
  5833  00129E  51D7               	movf	(detectCanister@dist2+1)& (0+255),w,b
  5834  0012A0  E131               	bnz	l8411
  5835  0012A2  05D6               	decf	detectCanister@dist2& (0+255),w,b
  5836  0012A4  B0D8               	btfsc	status,0,c
  5837  0012A6  D02E               	goto	l8411
  5838  0012A8  D03E               	goto	u8580
  5839  0012AA                     l8399:
  5840                           
  5841                           ; BSR set to: 1
  5842                           ;main.c: 276:         {;main.c: 277:             if ((dist3 > 975))
  5843  0012AA  BFDB               	btfsc	(detectCanister@dist3+1)& (0+255),7,b
  5844  0012AC  D00D               	goto	l8403
  5845  0012AE  0ED0               	movlw	208
  5846  0012B0  5DDA               	subwf	detectCanister@dist3& (0+255),w,b
  5847  0012B2  0E03               	movlw	3
  5848  0012B4  59DB               	subwfb	(detectCanister@dist3+1)& (0+255),w,b
  5849  0012B6  A0D8               	btfss	status,0,c
  5850  0012B8  D007               	goto	l8403
  5851                           
  5852                           ; BSR set to: 1
  5853                           ;main.c: 278:                 moveRobot(3);
  5854  0012BA  0E00               	movlw	0
  5855  0012BC  6E02               	movwf	moveRobot@move+1,c
  5856  0012BE  0E03               	movlw	3
  5857  0012C0  6E01               	movwf	moveRobot@move,c
  5858  0012C2  EC6C  F024         	call	_moveRobot	;wreg free
  5859  0012C6  D00E               	goto	l8407
  5860  0012C8                     l8403:
  5861                           
  5862                           ; BSR set to: 1
  5863  0012C8  BFDB               	btfsc	(detectCanister@dist3+1)& (0+255),7,b
  5864  0012CA  D006               	goto	u8560
  5865  0012CC  0ECF               	movlw	207
  5866  0012CE  5DDA               	subwf	detectCanister@dist3& (0+255),w,b
  5867  0012D0  0E03               	movlw	3
  5868  0012D2  59DB               	subwfb	(detectCanister@dist3+1)& (0+255),w,b
  5869  0012D4  B0D8               	btfsc	status,0,c
  5870  0012D6  D006               	goto	l8407
  5871  0012D8                     u8560:
  5872                           
  5873                           ; BSR set to: 1
  5874                           ;main.c: 280:                 moveRobot(4);
  5875  0012D8  0E00               	movlw	0
  5876  0012DA  6E02               	movwf	moveRobot@move+1,c
  5877  0012DC  0E04               	movlw	4
  5878  0012DE  6E01               	movwf	moveRobot@move,c
  5879  0012E0  EC6C  F024         	call	_moveRobot	;wreg free
  5880  0012E4                     l8407:
  5881                           
  5882                           ;main.c: 282:             dist3 = distFromCanister(7);
  5883  0012E4  0E00               	movlw	0
  5884  0012E6  6E17               	movwf	distFromCanister@sensor+1,c
  5885  0012E8  0E07               	movlw	7
  5886  0012EA  6E16               	movwf	distFromCanister@sensor,c
  5887  0012EC  EC80  F01C         	call	_distFromCanister	;wreg free
  5888  0012F0  C016  F1DA         	movff	?_distFromCanister,detectCanister@dist3
  5889  0012F4  C017  F1DB         	movff	?_distFromCanister+1,detectCanister@dist3+1
  5890  0012F8  0E00               	movlw	0
  5891  0012FA  6E17               	movwf	distFromCanister@sensor+1,c
  5892  0012FC  0E08               	movlw	8
  5893  0012FE  6E16               	movwf	distFromCanister@sensor,c
  5894  001300  EC80  F01C         	call	_distFromCanister	;wreg free
  5895  001304                     l8411:
  5896                           
  5897                           ;main.c: 275:         while ((dist3 > 975)|| (dist3 < 975))
  5898  001304  0101               	movlb	1	; () banked
  5899  001306  BFDB               	btfsc	(detectCanister@dist3+1)& (0+255),7,b
  5900  001308  D006               	goto	u8570
  5901  00130A  0ED0               	movlw	208
  5902  00130C  5DDA               	subwf	detectCanister@dist3& (0+255),w,b
  5903  00130E  0E03               	movlw	3
  5904  001310  59DB               	subwfb	(detectCanister@dist3+1)& (0+255),w,b
  5905  001312  B0D8               	btfsc	status,0,c
  5906  001314  D7CA               	goto	l8399
  5907  001316                     u8570:
  5908                           
  5909                           ; BSR set to: 1
  5910  001316  BFDB               	btfsc	(detectCanister@dist3+1)& (0+255),7,b
  5911  001318  D7C8               	goto	l8399
  5912  00131A  0ECF               	movlw	207
  5913  00131C  5DDA               	subwf	detectCanister@dist3& (0+255),w,b
  5914  00131E  0E03               	movlw	3
  5915  001320  59DB               	subwfb	(detectCanister@dist3+1)& (0+255),w,b
  5916  001322  A0D8               	btfss	status,0,c
  5917  001324  D7C2               	goto	l8399
  5918  001326                     u8580:
  5919                           
  5920                           ; BSR set to: 1
  5921                           ;main.c: 287:     moveRobot(0);
  5922  001326  0E00               	movlw	0
  5923  001328  6E02               	movwf	moveRobot@move+1,c
  5924  00132A  0E00               	movlw	0
  5925  00132C  6E01               	movwf	moveRobot@move,c
  5926  00132E  EC6C  F024         	call	_moveRobot	;wreg free
  5927                           
  5928                           ;main.c: 289:     _delay((unsigned long)((500)*(10000000/4000.0)));
  5929  001332  0E07               	movlw	7
  5930  001334  0100               	movlb	0	; () banked
  5931  001336  6FFF               	movwf	(??_detectCanister+1)& (0+255),b
  5932  001338  0E58               	movlw	88
  5933  00133A  6FFE               	movwf	??_detectCanister& (0+255),b
  5934  00133C  0E59               	movlw	89
  5935  00133E                     u9737:
  5936  00133E  2EE8               	decfsz	wreg,f,c
  5937  001340  D7FE               	bra	u9737
  5938  001342  2FFE               	decfsz	??_detectCanister& (0+255),f,b
  5939  001344  D7FC               	bra	u9737
  5940  001346  2FFF               	decfsz	(??_detectCanister+1)& (0+255),f,b
  5941  001348  D7FA               	bra	u9737
  5942  00134A  D000               	nop2	
  5943                           
  5944                           ;main.c: 291:     dist1 = distFromCanister(1);
  5945  00134C  0E00               	movlw	0
  5946  00134E  6E17               	movwf	distFromCanister@sensor+1,c
  5947  001350  0E01               	movlw	1
  5948  001352  6E16               	movwf	distFromCanister@sensor,c
  5949  001354  EC80  F01C         	call	_distFromCanister	;wreg free
  5950  001358  C016  F1BB         	movff	?_distFromCanister,detectCanister@dist1
  5951  00135C  C017  F1BC         	movff	?_distFromCanister+1,detectCanister@dist1+1
  5952                           
  5953                           ;main.c: 293:     dist2 = distFromCanister(2);
  5954  001360  0E00               	movlw	0
  5955  001362  6E17               	movwf	distFromCanister@sensor+1,c
  5956  001364  0E02               	movlw	2
  5957  001366  6E16               	movwf	distFromCanister@sensor,c
  5958  001368  EC80  F01C         	call	_distFromCanister	;wreg free
  5959  00136C  C016  F1D6         	movff	?_distFromCanister,detectCanister@dist2
  5960  001370  C017  F1D7         	movff	?_distFromCanister+1,detectCanister@dist2+1
  5961  001374  0E00               	movlw	0
  5962  001376  6E17               	movwf	distFromCanister@sensor+1,c
  5963  001378  0E07               	movlw	7
  5964  00137A  6E16               	movwf	distFromCanister@sensor,c
  5965  00137C  EC80  F01C         	call	_distFromCanister	;wreg free
  5966                           
  5967                           ;main.c: 296:     dist4 = distFromCanister(8);
  5968  001380  0E00               	movlw	0
  5969  001382  6E17               	movwf	distFromCanister@sensor+1,c
  5970  001384  0E08               	movlw	8
  5971  001386  6E16               	movwf	distFromCanister@sensor,c
  5972  001388  EC80  F01C         	call	_distFromCanister	;wreg free
  5973  00138C  C016  F1CB         	movff	?_distFromCanister,detectCanister@dist4
  5974  001390  C017  F1CC         	movff	?_distFromCanister+1,detectCanister@dist4+1
  5975                           
  5976                           ;main.c: 297:     if ((dist1 > 700)&&(dist2 > 500)&&(dist4 < 750))
  5977  001394  0101               	movlb	1	; () banked
  5978  001396  BFBC               	btfsc	(detectCanister@dist1+1)& (0+255),7,b
  5979  001398  D019               	goto	l8435
  5980  00139A  0EBD               	movlw	189
  5981  00139C  5DBB               	subwf	detectCanister@dist1& (0+255),w,b
  5982  00139E  0E02               	movlw	2
  5983  0013A0  59BC               	subwfb	(detectCanister@dist1+1)& (0+255),w,b
  5984  0013A2  B0D8               	btfsc	status,0,c
  5985                           
  5986                           ; BSR set to: 1
  5987  0013A4  BFD7               	btfsc	(detectCanister@dist2+1)& (0+255),7,b
  5988  0013A6  D012               	goto	l8435
  5989  0013A8  0EF5               	movlw	245
  5990  0013AA  5DD6               	subwf	detectCanister@dist2& (0+255),w,b
  5991  0013AC  0E01               	movlw	1
  5992  0013AE  59D7               	subwfb	(detectCanister@dist2+1)& (0+255),w,b
  5993  0013B0  A0D8               	btfss	status,0,c
  5994  0013B2  D00C               	goto	l8435
  5995                           
  5996                           ; BSR set to: 1
  5997  0013B4  BFCC               	btfsc	(detectCanister@dist4+1)& (0+255),7,b
  5998  0013B6  D006               	goto	u8610
  5999  0013B8  0EEE               	movlw	238
  6000  0013BA  5DCB               	subwf	detectCanister@dist4& (0+255),w,b
  6001  0013BC  0E02               	movlw	2
  6002  0013BE  59CC               	subwfb	(detectCanister@dist4+1)& (0+255),w,b
  6003  0013C0  B0D8               	btfsc	status,0,c
  6004  0013C2  D004               	goto	l8435
  6005  0013C4                     u8610:
  6006                           
  6007                           ; BSR set to: 1
  6008                           ;main.c: 298:     {;main.c: 299:         state = 1;
  6009  0013C4  0E00               	movlw	0
  6010  0013C6  6FD9               	movwf	(detectCanister@state+1)& (0+255),b
  6011  0013C8  0E01               	movlw	1
  6012  0013CA  D003               	goto	L19
  6013  0013CC                     l8435:
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;main.c: 302:     {;main.c: 303:         state = 0;
  6017  0013CC  0E00               	movlw	0
  6018  0013CE  6FD9               	movwf	(detectCanister@state+1)& (0+255),b
  6019  0013D0  0E00               	movlw	0
  6020  0013D2                     L19:
  6021  0013D2  6FD8               	movwf	detectCanister@state& (0+255),b
  6022                           
  6023                           ; BSR set to: 1
  6024                           ;main.c: 355:     if (state == 0)
  6025  0013D4  51D8               	movf	detectCanister@state& (0+255),w,b
  6026  0013D6  11D9               	iorwf	(detectCanister@state+1)& (0+255),w,b
  6027  0013D8  A4D8               	btfss	status,2,c
  6028  0013DA  D007               	goto	l8441
  6029                           
  6030                           ; BSR set to: 1
  6031                           ;main.c: 356:     {;main.c: 358:         facing = 0;
  6032  0013DC  0E00               	movlw	0
  6033  0013DE  6FCD               	movwf	detectCanister@facing& (0+255),b
  6034                           
  6035                           ;main.c: 359:         deposited = 0;
  6036  0013E0  0E00               	movlw	0
  6037  0013E2  6FD5               	movwf	detectCanister@deposited& (0+255),b
  6038                           
  6039                           ;main.c: 360:         status = 0;
  6040  0013E4  0E00               	movlw	0
  6041  0013E6  6FD4               	movwf	detectCanister@status& (0+255),b
  6042                           
  6043                           ;main.c: 362:     }
  6044  0013E8  D091               	goto	l8481
  6045  0013EA                     l8441:
  6046                           
  6047                           ; BSR set to: 1
  6048  0013EA  05D8               	decf	detectCanister@state& (0+255),w,b
  6049  0013EC  11D9               	iorwf	(detectCanister@state+1)& (0+255),w,b
  6050  0013EE  A4D8               	btfss	status,2,c
  6051  0013F0  D08D               	goto	l8481
  6052                           
  6053                           ; BSR set to: 1
  6054                           ;main.c: 364:     {;main.c: 365:         facing = 1;
  6055  0013F2  0E01               	movlw	1
  6056  0013F4  6FCD               	movwf	detectCanister@facing& (0+255),b
  6057                           
  6058                           ; BSR set to: 1
  6059                           ;main.c: 366:         setRight(5);
  6060  0013F6  0E00               	movlw	0
  6061  0013F8  0100               	movlb	0	; () banked
  6062  0013FA  6FFB               	movwf	(setRight@count+1)& (0+255),b
  6063  0013FC  0E05               	movlw	5
  6064  0013FE  6FFA               	movwf	setRight@count& (0+255),b
  6065  001400  ECE5  F024         	call	_setRight	;wreg free
  6066                           
  6067                           ;main.c: 367:         if ((location - oldLocation) >= 30)
  6068  001404  C1C6  F060         	movff	detectCanister@oldLocation,___flsub@a
  6069  001408  C1C7  F061         	movff	detectCanister@oldLocation+1,___flsub@a+1
  6070  00140C  C1C8  F062         	movff	detectCanister@oldLocation+2,___flsub@a+2
  6071  001410  C1C9  F063         	movff	detectCanister@oldLocation+3,___flsub@a+3
  6072  001414  C1CE  F05C         	movff	detectCanister@location,___flsub@b
  6073  001418  C1CF  F05D         	movff	detectCanister@location+1,___flsub@b+1
  6074  00141C  C1D0  F05E         	movff	detectCanister@location+2,___flsub@b+2
  6075  001420  C1D1  F05F         	movff	detectCanister@location+3,___flsub@b+3
  6076  001424  ECB4  F028         	call	___flsub	;wreg free
  6077  001428  C05C  F064         	movff	?___flsub,___flge@ff1
  6078  00142C  C05D  F065         	movff	?___flsub+1,___flge@ff1+1
  6079  001430  C05E  F066         	movff	?___flsub+2,___flge@ff1+2
  6080  001434  C05F  F067         	movff	?___flsub+3,___flge@ff1+3
  6081  001438  0E00               	movlw	0
  6082  00143A  6E68               	movwf	___flge@ff2,c
  6083  00143C  0E00               	movlw	0
  6084  00143E  6E69               	movwf	___flge@ff2+1,c
  6085  001440  0EF0               	movlw	240
  6086  001442  6E6A               	movwf	___flge@ff2+2,c
  6087  001444  0E41               	movlw	65
  6088  001446  6E6B               	movwf	___flge@ff2+3,c
  6089  001448  EC7F  F01F         	call	___flge	;wreg free
  6090  00144C  A0D8               	btfss	status,0,c
  6091  00144E  D059               	goto	l8477
  6092                           
  6093                           ;main.c: 368:         {;main.c: 369:             moveRobot(0);
  6094  001450  0E00               	movlw	0
  6095  001452  6E02               	movwf	moveRobot@move+1,c
  6096  001454  0E00               	movlw	0
  6097  001456  6E01               	movwf	moveRobot@move,c
  6098  001458  EC6C  F024         	call	_moveRobot	;wreg free
  6099                           
  6100                           ;main.c: 370:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  6101  00145C  0E01               	movlw	1
  6102  00145E  EC9F  F02A         	call	_lcdInst
  6103  001462  0E11               	movlw	17
  6104  001464  0100               	movlb	0	; () banked
  6105  001466  6FFE               	movwf	??_detectCanister& (0+255),b
  6106  001468  0E3A               	movlw	58
  6107  00146A                     u9747:
  6108  00146A  2EE8               	decfsz	wreg,f,c
  6109  00146C  D7FE               	bra	u9747
  6110  00146E  2FFE               	decfsz	??_detectCanister& (0+255),f,b
  6111  001470  D7FC               	bra	u9747
  6112  001472  F000               	nop	
  6113                           
  6114                           ;main.c: 371:             { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0))
      +                          );};
  6115  001474  0E80               	movlw	128
  6116  001476  EC9F  F02A         	call	_lcdInst
  6117  00147A  0E07               	movlw	7
  6118  00147C  0100               	movlb	0	; () banked
  6119  00147E  6FFE               	movwf	??_detectCanister& (0+255),b
  6120  001480  0E7D               	movlw	125
  6121  001482                     u9757:
  6122  001482  2EE8               	decfsz	wreg,f,c
  6123  001484  D7FE               	bra	u9757
  6124  001486  2FFE               	decfsz	??_detectCanister& (0+255),f,b
  6125  001488  D7FC               	bra	u9757
  6126                           
  6127                           ;main.c: 372:             printf("Depositing Ball");
  6128  00148A  0E6C               	movlw	low STR_1
  6129  00148C  0100               	movlb	0	; () banked
  6130  00148E  6FEA               	movwf	printf@fmt& (0+255),b
  6131  001490  0EFE               	movlw	high STR_1
  6132  001492  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  6133  001494  EC37  F02A         	call	_printf	;wreg free
  6134                           
  6135                           ;main.c: 373:             setForward(7);
  6136  001498  0E00               	movlw	0
  6137  00149A  0100               	movlb	0	; () banked
  6138  00149C  6FFB               	movwf	(setForward@count+1)& (0+255),b
  6139  00149E  0E07               	movlw	7
  6140  0014A0  6FFA               	movwf	setForward@count& (0+255),b
  6141  0014A2  EC1F  F025         	call	_setForward	;wreg free
  6142                           
  6143                           ;main.c: 374:             moveRobot(0);
  6144  0014A6  0E00               	movlw	0
  6145  0014A8  6E02               	movwf	moveRobot@move+1,c
  6146  0014AA  0E00               	movlw	0
  6147  0014AC  6E01               	movwf	moveRobot@move,c
  6148  0014AE  EC6C  F024         	call	_moveRobot	;wreg free
  6149                           
  6150                           ;main.c: 375:             success = releaseDoor();
  6151  0014B2  EC70  F02A         	call	_releaseDoor	;wreg free
  6152  0014B6  0101               	movlb	1	; () banked
  6153  0014B8  6FCA               	movwf	detectCanister@success& (0+255),b
  6154                           
  6155                           ; BSR set to: 1
  6156                           ;main.c: 376:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  6157  0014BA  0E0D               	movlw	13
  6158  0014BC  0100               	movlb	0	; () banked
  6159  0014BE  6FFF               	movwf	(??_detectCanister+1)& (0+255),b
  6160  0014C0  0EAF               	movlw	175
  6161  0014C2  6FFE               	movwf	??_detectCanister& (0+255),b
  6162  0014C4  0EB6               	movlw	182
  6163  0014C6                     u9767:
  6164  0014C6  2EE8               	decfsz	wreg,f,c
  6165  0014C8  D7FE               	bra	u9767
  6166  0014CA  2FFE               	decfsz	??_detectCanister& (0+255),f,b
  6167  0014CC  D7FC               	bra	u9767
  6168  0014CE  2FFF               	decfsz	(??_detectCanister+1)& (0+255),f,b
  6169  0014D0  D7FA               	bra	u9767
  6170  0014D2  F000               	nop	
  6171                           
  6172                           ;main.c: 377:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  6173  0014D4  0E01               	movlw	1
  6174  0014D6  EC9F  F02A         	call	_lcdInst
  6175  0014DA  0E11               	movlw	17
  6176  0014DC  0100               	movlb	0	; () banked
  6177  0014DE  6FFE               	movwf	??_detectCanister& (0+255),b
  6178  0014E0  0E3A               	movlw	58
  6179  0014E2                     u9777:
  6180  0014E2  2EE8               	decfsz	wreg,f,c
  6181  0014E4  D7FE               	bra	u9777
  6182  0014E6  2FFE               	decfsz	??_detectCanister& (0+255),f,b
  6183  0014E8  D7FC               	bra	u9777
  6184  0014EA  F000               	nop	
  6185                           
  6186                           ;main.c: 378:             if (success)
  6187  0014EC  0101               	movlb	1	; () banked
  6188  0014EE  51CA               	movf	detectCanister@success& (0+255),w,b
  6189  0014F0  B4D8               	btfsc	status,2,c
  6190  0014F2  D007               	goto	l8477
  6191                           
  6192                           ; BSR set to: 1
  6193                           ;main.c: 379:             {;main.c: 380:                 increaseNumBalls();
  6194  0014F4  ECBA  F02A         	call	_increaseNumBalls	;wreg free
  6195                           
  6196                           ;main.c: 381:                 status = 1;
  6197  0014F8  0E01               	movlw	1
  6198  0014FA  0101               	movlb	1	; () banked
  6199  0014FC  6FD4               	movwf	detectCanister@status& (0+255),b
  6200                           
  6201                           ; BSR set to: 1
  6202                           ;main.c: 382:                 deposited = 1;
  6203  0014FE  0E01               	movlw	1
  6204  001500  D004               	goto	L20
  6205  001502                     l8477:
  6206                           
  6207                           ;main.c: 385:             {;main.c: 386:                 status = 0;
  6208  001502  0E00               	movlw	0
  6209  001504  0101               	movlb	1	; () banked
  6210  001506  6FD4               	movwf	detectCanister@status& (0+255),b
  6211                           
  6212                           ;main.c: 387:                 deposited = 0;
  6213  001508  0E00               	movlw	0
  6214  00150A                     L20:
  6215  00150A  6FD5               	movwf	detectCanister@deposited& (0+255),b
  6216  00150C                     l8481:
  6217                           
  6218                           ; BSR set to: 1
  6219                           ;main.c: 396:     storeCanisterData(facing, location, status, deposited);
  6220  00150C  C1CE  F007         	movff	detectCanister@location,storeCanisterData@dist
  6221  001510  C1CF  F008         	movff	detectCanister@location+1,storeCanisterData@dist+1
  6222  001514  C1D0  F009         	movff	detectCanister@location+2,storeCanisterData@dist+2
  6223  001518  C1D1  F00A         	movff	detectCanister@location+3,storeCanisterData@dist+3
  6224  00151C  C1D4  F00B         	movff	detectCanister@status,storeCanisterData@status
  6225  001520  C1D5  F00C         	movff	detectCanister@deposited,storeCanisterData@deposit
  6226  001524  51CD               	movf	detectCanister@facing& (0+255),w,b
  6227  001526  ECAB  F01E         	call	_storeCanisterData
  6228                           
  6229                           ;main.c: 451:     while(readDigitalSensor())
  6230  00152A  D006               	goto	l8485
  6231  00152C                     l8483:
  6232                           
  6233                           ;main.c: 452:     {;main.c: 453:         moveRobot(1);
  6234  00152C  0E00               	movlw	0
  6235  00152E  6E02               	movwf	moveRobot@move+1,c
  6236  001530  0E01               	movlw	1
  6237  001532  6E01               	movwf	moveRobot@move,c
  6238  001534  EC6C  F024         	call	_moveRobot	;wreg free
  6239  001538                     l8485:
  6240                           
  6241                           ;main.c: 451:     while(readDigitalSensor())
  6242  001538  ECCC  F022         	call	_readDigitalSensor	;wreg free
  6243  00153C  5016               	movf	?_readDigitalSensor,w,c
  6244  00153E  1017               	iorwf	?_readDigitalSensor+1,w,c
  6245  001540  A4D8               	btfss	status,2,c
  6246  001542  D7F4               	goto	l8483
  6247                           
  6248                           ;main.c: 455:     LATBbits.LATB3 = 0;
  6249  001544  968A               	bcf	3978,3,c	;volatile
  6250  001546  0012               	return		;funcret
  6251  001548                     __end_of_detectCanister:
  6252                           	opt callstack 0
  6253                           
  6254 ;; *************** function _storeCanisterData *****************
  6255 ;; Defined at:
  6256 ;;		line 31 in file "data.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;  facing          1    wreg     enum E145
  6259 ;;  dist            4    6[COMRAM] float 
  6260 ;;  status          1   10[COMRAM] _Bool 
  6261 ;;  deposit         1   11[COMRAM] _Bool 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  facing          1   12[COMRAM] enum E145
  6264 ;;  id              2   13[COMRAM] int 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6274 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;Total ram usage:        9 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    2
  6281 ;; This function calls:
  6282 ;;		___wmul
  6283 ;; This function is called by:
  6284 ;;		_detectCanister
  6285 ;;		_setCanisterData
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text18
  6290  003D56                     __ptext18:
  6291                           	opt callstack 0
  6292  003D56                     _storeCanisterData:
  6293                           	opt callstack 26
  6294                           
  6295                           ;incstack = 0
  6296                           ;storeCanisterData@facing stored from wreg
  6297  003D56  6E0D               	movwf	storeCanisterData@facing,c
  6298                           
  6299                           ;data.c: 31: void storeCanisterData(direction facing, float dist, _Bool status, _Bool de
      +                          posit);data.c: 32: {;data.c: 33:     numCans++;
  6300  003D58  0101               	movlb	1	; () banked
  6301  003D5A  4B8C               	infsnz	_numCans& (0+255),f,b	;volatile
  6302  003D5C  2B8D               	incf	(_numCans+1)& (0+255),f,b	;volatile
  6303                           
  6304                           ; BSR set to: 1
  6305                           ;data.c: 34:     int id = numCans;
  6306  003D5E  C18C  F00E         	movff	_numCans,storeCanisterData@id	;volatile
  6307  003D62  C18D  F00F         	movff	_numCans+1,storeCanisterData@id+1	;volatile
  6308                           
  6309                           ; BSR set to: 1
  6310                           ;data.c: 35:     (cans[id-1]).id = id;
  6311  003D66  C00E  F001         	movff	storeCanisterData@id,___wmul@multiplier
  6312  003D6A  C00F  F002         	movff	storeCanisterData@id+1,___wmul@multiplier+1
  6313  003D6E  0E00               	movlw	0
  6314  003D70  6E04               	movwf	___wmul@multiplicand+1,c
  6315  003D72  0E09               	movlw	9
  6316  003D74  6E03               	movwf	___wmul@multiplicand,c
  6317  003D76  EC4B  F02A         	call	___wmul	;wreg free
  6318  003D7A  0EF7               	movlw	low (_cans+65527)
  6319  003D7C  2401               	addwf	?___wmul,w,c
  6320  003D7E  6ED9               	movwf	fsr2l,c
  6321  003D80  0E00               	movlw	high (_cans+65527)
  6322  003D82  2002               	addwfc	?___wmul+1,w,c
  6323  003D84  6EDA               	movwf	fsr2h,c
  6324  003D86  C00E  FFDE         	movff	storeCanisterData@id,postinc2
  6325  003D8A  C00F  FFDD         	movff	storeCanisterData@id+1,postdec2
  6326                           
  6327                           ;data.c: 36:     (cans[id-1]).facing = facing;
  6328  003D8E  C00E  F001         	movff	storeCanisterData@id,___wmul@multiplier
  6329  003D92  C00F  F002         	movff	storeCanisterData@id+1,___wmul@multiplier+1
  6330  003D96  0E00               	movlw	0
  6331  003D98  6E04               	movwf	___wmul@multiplicand+1,c
  6332  003D9A  0E09               	movlw	9
  6333  003D9C  6E03               	movwf	___wmul@multiplicand,c
  6334  003D9E  EC4B  F02A         	call	___wmul	;wreg free
  6335  003DA2  0EF9               	movlw	low (_cans+65529)
  6336  003DA4  2401               	addwf	?___wmul,w,c
  6337  003DA6  6ED9               	movwf	fsr2l,c
  6338  003DA8  0E00               	movlw	high (_cans+65529)
  6339  003DAA  2002               	addwfc	?___wmul+1,w,c
  6340  003DAC  6EDA               	movwf	fsr2h,c
  6341  003DAE  C00D  FFDF         	movff	storeCanisterData@facing,indf2
  6342                           
  6343                           ;data.c: 37:     (cans[id-1]).distance = dist;
  6344  003DB2  C00E  F001         	movff	storeCanisterData@id,___wmul@multiplier
  6345  003DB6  C00F  F002         	movff	storeCanisterData@id+1,___wmul@multiplier+1
  6346  003DBA  0E00               	movlw	0
  6347  003DBC  6E04               	movwf	___wmul@multiplicand+1,c
  6348  003DBE  0E09               	movlw	9
  6349  003DC0  6E03               	movwf	___wmul@multiplicand,c
  6350  003DC2  EC4B  F02A         	call	___wmul	;wreg free
  6351  003DC6  0EFA               	movlw	low (_cans+65530)
  6352  003DC8  2401               	addwf	?___wmul,w,c
  6353  003DCA  6ED9               	movwf	fsr2l,c
  6354  003DCC  0E00               	movlw	high (_cans+65530)
  6355  003DCE  2002               	addwfc	?___wmul+1,w,c
  6356  003DD0  6EDA               	movwf	fsr2h,c
  6357  003DD2  C007  FFDE         	movff	storeCanisterData@dist,postinc2
  6358  003DD6  C008  FFDE         	movff	storeCanisterData@dist+1,postinc2
  6359  003DDA  C009  FFDE         	movff	storeCanisterData@dist+2,postinc2
  6360  003DDE  C00A  FFDE         	movff	storeCanisterData@dist+3,postinc2
  6361                           
  6362                           ;data.c: 38:     (cans[id-1]).status = status;
  6363  003DE2  C00E  F001         	movff	storeCanisterData@id,___wmul@multiplier
  6364  003DE6  C00F  F002         	movff	storeCanisterData@id+1,___wmul@multiplier+1
  6365  003DEA  0E00               	movlw	0
  6366  003DEC  6E04               	movwf	___wmul@multiplicand+1,c
  6367  003DEE  0E09               	movlw	9
  6368  003DF0  6E03               	movwf	___wmul@multiplicand,c
  6369  003DF2  EC4B  F02A         	call	___wmul	;wreg free
  6370  003DF6  0EFE               	movlw	low (_cans+65534)
  6371  003DF8  2401               	addwf	?___wmul,w,c
  6372  003DFA  6ED9               	movwf	fsr2l,c
  6373  003DFC  0E00               	movlw	high (_cans+65534)
  6374  003DFE  2002               	addwfc	?___wmul+1,w,c
  6375  003E00  6EDA               	movwf	fsr2h,c
  6376  003E02  C00B  FFDF         	movff	storeCanisterData@status,indf2
  6377                           
  6378                           ;data.c: 39:     (cans[id-1]).ballDeposited = deposit;
  6379  003E06  C00E  F001         	movff	storeCanisterData@id,___wmul@multiplier
  6380  003E0A  C00F  F002         	movff	storeCanisterData@id+1,___wmul@multiplier+1
  6381  003E0E  0E00               	movlw	0
  6382  003E10  6E04               	movwf	___wmul@multiplicand+1,c
  6383  003E12  0E09               	movlw	9
  6384  003E14  6E03               	movwf	___wmul@multiplicand,c
  6385  003E16  EC4B  F02A         	call	___wmul	;wreg free
  6386  003E1A  0EFF               	movlw	low (_cans+65535)
  6387  003E1C  2401               	addwf	?___wmul,w,c
  6388  003E1E  6ED9               	movwf	fsr2l,c
  6389  003E20  0E00               	movlw	high (_cans+65535)
  6390  003E22  2002               	addwfc	?___wmul+1,w,c
  6391  003E24  6EDA               	movwf	fsr2h,c
  6392  003E26  C00C  FFDF         	movff	storeCanisterData@deposit,indf2
  6393  003E2A  0012               	return		;funcret
  6394  003E2C                     __end_of_storeCanisterData:
  6395                           	opt callstack 0
  6396                           
  6397 ;; *************** function _setRight *****************
  6398 ;; Defined at:
  6399 ;;		line 769 in file "main.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;  count           2  122[BANK0 ] int 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  shaftCount      2    4[BANK1 ] unsigned int 
  6404 ;;  shaftCount2     2    2[BANK1 ] unsigned int 
  6405 ;;  newCount        2    0[BANK1 ] int 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;Total ram usage:       10 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:   13
  6422 ;; This function calls:
  6423 ;;		_moveRobot
  6424 ;;		_sensorData
  6425 ;;		_shaftEncoderCount
  6426 ;;		_shaftEncoderCount2
  6427 ;; This function is called by:
  6428 ;;		_detectCanister
  6429 ;;		_detectCanisterTurned
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text19
  6434  0049CA                     __ptext19:
  6435                           	opt callstack 0
  6436  0049CA                     _setRight:
  6437                           	opt callstack 15
  6438                           
  6439                           ;main.c: 769: void setRight(int count);main.c: 770: {;main.c: 771:     unsigned int shaf
      +                          tCount = shaftEncoderCount();
  6440                           
  6441                           ;incstack = 0
  6442  0049CA  EC34  F022         	call	_shaftEncoderCount	;wreg free
  6443  0049CE  C016  F1B4         	movff	?_shaftEncoderCount,setRight@shaftCount
  6444  0049D2  C017  F1B5         	movff	?_shaftEncoderCount+1,setRight@shaftCount+1
  6445                           
  6446                           ;main.c: 772:     int newCount = shaftCount;
  6447  0049D6  C1B4  F1B0         	movff	setRight@shaftCount,setRight@newCount
  6448  0049DA  C1B5  F1B1         	movff	setRight@shaftCount+1,setRight@newCount+1
  6449  0049DE  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  6450                           
  6451                           ;main.c: 774:     while ((shaftCount - newCount) <= count)
  6452  0049E2  D01C               	goto	l8033
  6453  0049E4                     l8025:
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;main.c: 775:     {;main.c: 776:         moveRobot(4);
  6457  0049E4  0E00               	movlw	0
  6458  0049E6  6E02               	movwf	moveRobot@move+1,c
  6459  0049E8  0E04               	movlw	4
  6460  0049EA  6E01               	movwf	moveRobot@move,c
  6461  0049EC  EC6C  F024         	call	_moveRobot	;wreg free
  6462                           
  6463                           ;main.c: 777:         shaftCount = shaftEncoderCount();
  6464  0049F0  EC34  F022         	call	_shaftEncoderCount	;wreg free
  6465  0049F4  C016  F1B4         	movff	?_shaftEncoderCount,setRight@shaftCount
  6466  0049F8  C017  F1B5         	movff	?_shaftEncoderCount+1,setRight@shaftCount+1
  6467                           
  6468                           ;main.c: 778:         shaftCount2 = shaftEncoderCount2();
  6469  0049FC  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  6470  004A00  C016  F1B2         	movff	?_shaftEncoderCount2,setRight@shaftCount2
  6471  004A04  C017  F1B3         	movff	?_shaftEncoderCount2+1,setRight@shaftCount2+1
  6472                           
  6473                           ;main.c: 779:         sensorData(shaftCount, shaftCount2);
  6474  004A08  C1B4  F0F6         	movff	setRight@shaftCount,sensorData@data
  6475  004A0C  C1B5  F0F7         	movff	setRight@shaftCount+1,sensorData@data+1
  6476  004A10  C1B2  F0F8         	movff	setRight@shaftCount2,sensorData@data2
  6477  004A14  C1B3  F0F9         	movff	setRight@shaftCount2+1,sensorData@data2+1
  6478  004A18  EC9B  F026         	call	_sensorData	;wreg free
  6479  004A1C                     l8033:
  6480                           
  6481                           ;main.c: 774:     while ((shaftCount - newCount) <= count)
  6482  004A1C  0101               	movlb	1	; () banked
  6483  004A1E  51B0               	movf	setRight@newCount& (0+255),w,b
  6484  004A20  5DB4               	subwf	setRight@shaftCount& (0+255),w,b
  6485  004A22  0100               	movlb	0	; () banked
  6486  004A24  6FFC               	movwf	??_setRight& (0+255),b
  6487  004A26  0101               	movlb	1	; () banked
  6488  004A28  51B1               	movf	(setRight@newCount+1)& (0+255),w,b
  6489  004A2A  59B5               	subwfb	(setRight@shaftCount+1)& (0+255),w,b
  6490  004A2C  0100               	movlb	0	; () banked
  6491  004A2E  6FFD               	movwf	(??_setRight+1)& (0+255),b
  6492  004A30  51FC               	movf	??_setRight& (0+255),w,b
  6493  004A32  5DFA               	subwf	setRight@count& (0+255),w,b
  6494  004A34  51FD               	movf	(??_setRight+1)& (0+255),w,b
  6495  004A36  59FB               	subwfb	(setRight@count+1)& (0+255),w,b
  6496  004A38  A0D8               	btfss	status,0,c
  6497  004A3A  0012               	return	
  6498  004A3C  D7D3               	goto	l8025
  6499  004A3E                     __end_of_setRight:
  6500                           	opt callstack 0
  6501                           
  6502 ;; *************** function _setForward *****************
  6503 ;; Defined at:
  6504 ;;		line 715 in file "main.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  count           2  122[BANK0 ] int 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  shaftCount      2    4[BANK1 ] unsigned int 
  6509 ;;  shaftCount2     2    2[BANK1 ] unsigned int 
  6510 ;;  newCount        2    0[BANK1 ] int 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6520 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;Total ram usage:       10 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:   13
  6527 ;; This function calls:
  6528 ;;		_moveRobot
  6529 ;;		_sensorData
  6530 ;;		_shaftEncoderCount
  6531 ;;		_shaftEncoderCount2
  6532 ;; This function is called by:
  6533 ;;		_main
  6534 ;;		_detectCanister
  6535 ;;		_detectCanisterTurned
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text20
  6540  004A3E                     __ptext20:
  6541                           	opt callstack 0
  6542  004A3E                     _setForward:
  6543                           	opt callstack 15
  6544                           
  6545                           ;main.c: 715: void setForward(int count);main.c: 716: {;main.c: 717:     unsigned int sh
      +                          aftCount = shaftEncoderCount();
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;incstack = 0
  6549  004A3E  EC34  F022         	call	_shaftEncoderCount	;wreg free
  6550  004A42  C016  F1B4         	movff	?_shaftEncoderCount,setForward@shaftCount
  6551  004A46  C017  F1B5         	movff	?_shaftEncoderCount+1,setForward@shaftCount+1
  6552                           
  6553                           ;main.c: 718:     int newCount = shaftCount;
  6554  004A4A  C1B4  F1B0         	movff	setForward@shaftCount,setForward@newCount
  6555  004A4E  C1B5  F1B1         	movff	setForward@shaftCount+1,setForward@newCount+1
  6556  004A52  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  6557                           
  6558                           ;main.c: 720:     while ((shaftCount - newCount) <= count)
  6559  004A56  D01C               	goto	l7983
  6560  004A58                     l7975:
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;main.c: 721:     {;main.c: 722:         moveRobot(1);
  6564  004A58  0E00               	movlw	0
  6565  004A5A  6E02               	movwf	moveRobot@move+1,c
  6566  004A5C  0E01               	movlw	1
  6567  004A5E  6E01               	movwf	moveRobot@move,c
  6568  004A60  EC6C  F024         	call	_moveRobot	;wreg free
  6569                           
  6570                           ;main.c: 723:         shaftCount = shaftEncoderCount();
  6571  004A64  EC34  F022         	call	_shaftEncoderCount	;wreg free
  6572  004A68  C016  F1B4         	movff	?_shaftEncoderCount,setForward@shaftCount
  6573  004A6C  C017  F1B5         	movff	?_shaftEncoderCount+1,setForward@shaftCount+1
  6574                           
  6575                           ;main.c: 724:         shaftCount2 = shaftEncoderCount2();
  6576  004A70  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  6577  004A74  C016  F1B2         	movff	?_shaftEncoderCount2,setForward@shaftCount2
  6578  004A78  C017  F1B3         	movff	?_shaftEncoderCount2+1,setForward@shaftCount2+1
  6579                           
  6580                           ;main.c: 725:         sensorData(shaftCount, shaftCount2);
  6581  004A7C  C1B4  F0F6         	movff	setForward@shaftCount,sensorData@data
  6582  004A80  C1B5  F0F7         	movff	setForward@shaftCount+1,sensorData@data+1
  6583  004A84  C1B2  F0F8         	movff	setForward@shaftCount2,sensorData@data2
  6584  004A88  C1B3  F0F9         	movff	setForward@shaftCount2+1,sensorData@data2+1
  6585  004A8C  EC9B  F026         	call	_sensorData	;wreg free
  6586  004A90                     l7983:
  6587                           
  6588                           ;main.c: 720:     while ((shaftCount - newCount) <= count)
  6589  004A90  0101               	movlb	1	; () banked
  6590  004A92  51B0               	movf	setForward@newCount& (0+255),w,b
  6591  004A94  5DB4               	subwf	setForward@shaftCount& (0+255),w,b
  6592  004A96  0100               	movlb	0	; () banked
  6593  004A98  6FFC               	movwf	??_setForward& (0+255),b
  6594  004A9A  0101               	movlb	1	; () banked
  6595  004A9C  51B1               	movf	(setForward@newCount+1)& (0+255),w,b
  6596  004A9E  59B5               	subwfb	(setForward@shaftCount+1)& (0+255),w,b
  6597  004AA0  0100               	movlb	0	; () banked
  6598  004AA2  6FFD               	movwf	(??_setForward+1)& (0+255),b
  6599  004AA4  51FC               	movf	??_setForward& (0+255),w,b
  6600  004AA6  5DFA               	subwf	setForward@count& (0+255),w,b
  6601  004AA8  51FD               	movf	(??_setForward+1)& (0+255),w,b
  6602  004AAA  59FB               	subwfb	(setForward@count+1)& (0+255),w,b
  6603  004AAC  A0D8               	btfss	status,0,c
  6604  004AAE  0012               	return	
  6605  004AB0  D7D3               	goto	l7975
  6606  004AB2                     __end_of_setForward:
  6607                           	opt callstack 0
  6608                           
  6609 ;; *************** function _setBackward *****************
  6610 ;; Defined at:
  6611 ;;		line 742 in file "main.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  count           2  122[BANK0 ] int 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  shaftCount      2    4[BANK1 ] unsigned int 
  6616 ;;  shaftCount2     2    2[BANK1 ] unsigned int 
  6617 ;;  newCount        2    0[BANK1 ] int 
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6628 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6629 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;Total ram usage:       10 bytes
  6632 ;; Hardware stack levels used:    1
  6633 ;; Hardware stack levels required when called:   13
  6634 ;; This function calls:
  6635 ;;		_moveRobot
  6636 ;;		_sensorData
  6637 ;;		_shaftEncoderCount
  6638 ;;		_shaftEncoderCount2
  6639 ;; This function is called by:
  6640 ;;		_detectCanister
  6641 ;;		_detectCanisterTurned
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text21
  6646  004AB2                     __ptext21:
  6647                           	opt callstack 0
  6648  004AB2                     _setBackward:
  6649                           	opt callstack 15
  6650                           
  6651                           ;main.c: 742: void setBackward(int count);main.c: 743: {;main.c: 744:     unsigned int s
      +                          haftCount = shaftEncoderCount();
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;incstack = 0
  6655  004AB2  EC34  F022         	call	_shaftEncoderCount	;wreg free
  6656  004AB6  C016  F1B4         	movff	?_shaftEncoderCount,setBackward@shaftCount
  6657  004ABA  C017  F1B5         	movff	?_shaftEncoderCount+1,setBackward@shaftCount+1
  6658                           
  6659                           ;main.c: 745:     int newCount = shaftCount;
  6660  004ABE  C1B4  F1B0         	movff	setBackward@shaftCount,setBackward@newCount
  6661  004AC2  C1B5  F1B1         	movff	setBackward@shaftCount+1,setBackward@newCount+1
  6662  004AC6  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  6663                           
  6664                           ;main.c: 747:     while ((shaftCount - newCount) <= count)
  6665  004ACA  D01C               	goto	l8019
  6666  004ACC                     l8011:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;main.c: 748:     {;main.c: 749:         moveRobot(2);
  6670  004ACC  0E00               	movlw	0
  6671  004ACE  6E02               	movwf	moveRobot@move+1,c
  6672  004AD0  0E02               	movlw	2
  6673  004AD2  6E01               	movwf	moveRobot@move,c
  6674  004AD4  EC6C  F024         	call	_moveRobot	;wreg free
  6675                           
  6676                           ;main.c: 750:         shaftCount = shaftEncoderCount();
  6677  004AD8  EC34  F022         	call	_shaftEncoderCount	;wreg free
  6678  004ADC  C016  F1B4         	movff	?_shaftEncoderCount,setBackward@shaftCount
  6679  004AE0  C017  F1B5         	movff	?_shaftEncoderCount+1,setBackward@shaftCount+1
  6680                           
  6681                           ;main.c: 751:         shaftCount2 = shaftEncoderCount2();
  6682  004AE4  ECE8  F021         	call	_shaftEncoderCount2	;wreg free
  6683  004AE8  C016  F1B2         	movff	?_shaftEncoderCount2,setBackward@shaftCount2
  6684  004AEC  C017  F1B3         	movff	?_shaftEncoderCount2+1,setBackward@shaftCount2+1
  6685                           
  6686                           ;main.c: 752:         sensorData(shaftCount, shaftCount2);
  6687  004AF0  C1B4  F0F6         	movff	setBackward@shaftCount,sensorData@data
  6688  004AF4  C1B5  F0F7         	movff	setBackward@shaftCount+1,sensorData@data+1
  6689  004AF8  C1B2  F0F8         	movff	setBackward@shaftCount2,sensorData@data2
  6690  004AFC  C1B3  F0F9         	movff	setBackward@shaftCount2+1,sensorData@data2+1
  6691  004B00  EC9B  F026         	call	_sensorData	;wreg free
  6692  004B04                     l8019:
  6693                           
  6694                           ;main.c: 747:     while ((shaftCount - newCount) <= count)
  6695  004B04  0101               	movlb	1	; () banked
  6696  004B06  51B0               	movf	setBackward@newCount& (0+255),w,b
  6697  004B08  5DB4               	subwf	setBackward@shaftCount& (0+255),w,b
  6698  004B0A  0100               	movlb	0	; () banked
  6699  004B0C  6FFC               	movwf	??_setBackward& (0+255),b
  6700  004B0E  0101               	movlb	1	; () banked
  6701  004B10  51B1               	movf	(setBackward@newCount+1)& (0+255),w,b
  6702  004B12  59B5               	subwfb	(setBackward@shaftCount+1)& (0+255),w,b
  6703  004B14  0100               	movlb	0	; () banked
  6704  004B16  6FFD               	movwf	(??_setBackward+1)& (0+255),b
  6705  004B18  51FC               	movf	??_setBackward& (0+255),w,b
  6706  004B1A  5DFA               	subwf	setBackward@count& (0+255),w,b
  6707  004B1C  51FD               	movf	(??_setBackward+1)& (0+255),w,b
  6708  004B1E  59FB               	subwfb	(setBackward@count+1)& (0+255),w,b
  6709  004B20  A0D8               	btfss	status,0,c
  6710  004B22  0012               	return	
  6711  004B24  D7D3               	goto	l8011
  6712  004B26                     __end_of_setBackward:
  6713                           	opt callstack 0
  6714                           
  6715 ;; *************** function _shaftEncoderCount2 *****************
  6716 ;; Defined at:
  6717 ;;		line 35 in file "sensors.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  i               1   29[COMRAM] unsigned char 
  6722 ;;  count           4   25[COMRAM] unsigned int [2]
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  2   21[COMRAM] int 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;Total ram usage:        9 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    3
  6739 ;; This function calls:
  6740 ;;		_I2C_Master_Init
  6741 ;;		_I2C_Master_Read
  6742 ;;		_I2C_Master_Start
  6743 ;;		_I2C_Master_Stop
  6744 ;;		_I2C_Master_Write
  6745 ;; This function is called by:
  6746 ;;		_testDrive
  6747 ;;		_testDrive2
  6748 ;;		_testTurn
  6749 ;;		_setForward
  6750 ;;		_setBackward
  6751 ;;		_setRight
  6752 ;;		_testShaftEncoder
  6753 ;;		_getDistance2
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text22
  6758  0043D0                     __ptext22:
  6759                           	opt callstack 0
  6760  0043D0                     _shaftEncoderCount2:
  6761                           	opt callstack 26
  6762                           
  6763                           ;sensors.c: 37:     unsigned int count[2];;sensors.c: 38:     I2C_Master_Init(100000);
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;incstack = 0
  6767  0043D0  0EA0               	movlw	160
  6768  0043D2  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  6769  0043D4  0E86               	movlw	134
  6770  0043D6  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  6771  0043D8  0E01               	movlw	1
  6772  0043DA  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  6773  0043DC  0E00               	movlw	0
  6774  0043DE  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  6775  0043E0  EC28  F027         	call	_I2C_Master_Init	;wreg free
  6776                           
  6777                           ;sensors.c: 42:     I2C_Master_Start();
  6778  0043E4  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  6779                           
  6780                           ;sensors.c: 43:     I2C_Master_Write(0b00010000);
  6781  0043E8  0E00               	movlw	0
  6782  0043EA  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6783  0043EC  0E10               	movlw	16
  6784  0043EE  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6785  0043F0  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  6786                           
  6787                           ;sensors.c: 44:     I2C_Master_Write(6);
  6788  0043F4  0E00               	movlw	0
  6789  0043F6  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6790  0043F8  0E06               	movlw	6
  6791  0043FA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6792  0043FC  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  6793                           
  6794                           ;sensors.c: 45:     I2C_Master_Stop();
  6795  004400  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  6796                           
  6797                           ;sensors.c: 48:     I2C_Master_Start();
  6798  004404  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  6799                           
  6800                           ;sensors.c: 49:     I2C_Master_Write(0b00010001);
  6801  004408  0E00               	movlw	0
  6802  00440A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6803  00440C  0E11               	movlw	17
  6804  00440E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6805  004410  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  6806                           
  6807                           ;sensors.c: 51:     for (unsigned char i = 0; i < 1; i++)
  6808  004414  0E00               	movlw	0
  6809  004416  6E1E               	movwf	shaftEncoderCount2@i,c
  6810  004418                     l7851:
  6811                           
  6812                           ;sensors.c: 52:     {;sensors.c: 53:         count[i] = I2C_Master_Read(0);
  6813  004418  0E00               	movlw	0
  6814  00441A  EC5E  F02A         	call	_I2C_Master_Read
  6815  00441E  6E18               	movwf	??_shaftEncoderCount2& (0+255),c
  6816  004420  6A19               	clrf	(??_shaftEncoderCount2+1)& (0+255),c
  6817  004422  501E               	movf	shaftEncoderCount2@i,w,c
  6818  004424  0D02               	mullw	2
  6819  004426  0E1A               	movlw	low shaftEncoderCount2@count
  6820  004428  24F3               	addwf	prodl,w,c
  6821  00442A  6ED9               	movwf	fsr2l,c
  6822  00442C  0E00               	movlw	high shaftEncoderCount2@count
  6823  00442E  20F4               	addwfc	prodh,w,c
  6824  004430  6EDA               	movwf	fsr2h,c
  6825  004432  C018  FFDE         	movff	??_shaftEncoderCount2,postinc2
  6826  004436  C019  FFDD         	movff	??_shaftEncoderCount2+1,postdec2
  6827                           
  6828                           ;sensors.c: 54:     }
  6829  00443A  2A1E               	incf	shaftEncoderCount2@i,f,c
  6830  00443C  501E               	movf	shaftEncoderCount2@i,w,c
  6831  00443E  B4D8               	btfsc	status,2,c
  6832  004440  D7EB               	goto	l7851
  6833                           
  6834                           ;sensors.c: 55:     count[1] = I2C_Master_Read(1);
  6835  004442  0E01               	movlw	1
  6836  004444  EC5E  F02A         	call	_I2C_Master_Read
  6837  004448  6E18               	movwf	??_shaftEncoderCount2& (0+255),c
  6838  00444A  5018               	movf	??_shaftEncoderCount2,w,c
  6839  00444C  6E1C               	movwf	shaftEncoderCount2@count+2,c
  6840  00444E  6A1D               	clrf	shaftEncoderCount2@count+3,c
  6841                           
  6842                           ;sensors.c: 56:     I2C_Master_Stop();
  6843  004450  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  6844                           
  6845                           ;sensors.c: 58:     return (count[0])|(count[1]<<8);
  6846  004454  501C               	movf	shaftEncoderCount2@count+2,w,c
  6847  004456  6E19               	movwf	(??_shaftEncoderCount2+1)& (0+255),c
  6848  004458  6A18               	clrf	??_shaftEncoderCount2& (0+255),c
  6849  00445A  501A               	movf	shaftEncoderCount2@count,w,c
  6850  00445C  1018               	iorwf	??_shaftEncoderCount2,w,c
  6851  00445E  6E16               	movwf	?_shaftEncoderCount2,c
  6852  004460  501B               	movf	shaftEncoderCount2@count+1,w,c
  6853  004462  1019               	iorwf	??_shaftEncoderCount2+1,w,c
  6854  004464  6E17               	movwf	?_shaftEncoderCount2+1,c
  6855  004466  0012               	return		;funcret
  6856  004468                     __end_of_shaftEncoderCount2:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function _shaftEncoderCount *****************
  6860 ;; Defined at:
  6861 ;;		line 9 in file "sensors.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;		None
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  i               1   29[COMRAM] unsigned char 
  6866 ;;  count           4   25[COMRAM] unsigned int [2]
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  2   21[COMRAM] int 
  6869 ;; Registers used:
  6870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;Total ram usage:        9 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    3
  6883 ;; This function calls:
  6884 ;;		_I2C_Master_Init
  6885 ;;		_I2C_Master_Read
  6886 ;;		_I2C_Master_Start
  6887 ;;		_I2C_Master_Stop
  6888 ;;		_I2C_Master_Write
  6889 ;; This function is called by:
  6890 ;;		_testDrive
  6891 ;;		_testDrive2
  6892 ;;		_testTurn
  6893 ;;		_setForward
  6894 ;;		_setBackward
  6895 ;;		_setRight
  6896 ;;		_getDistance
  6897 ;;		_testShaftEncoder
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text23
  6902  004468                     __ptext23:
  6903                           	opt callstack 0
  6904  004468                     _shaftEncoderCount:
  6905                           	opt callstack 26
  6906                           
  6907                           ;sensors.c: 11:     unsigned int count[2];;sensors.c: 12:     I2C_Master_Init(100000);
  6908                           
  6909                           ;incstack = 0
  6910  004468  0EA0               	movlw	160
  6911  00446A  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  6912  00446C  0E86               	movlw	134
  6913  00446E  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  6914  004470  0E01               	movlw	1
  6915  004472  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  6916  004474  0E00               	movlw	0
  6917  004476  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  6918  004478  EC28  F027         	call	_I2C_Master_Init	;wreg free
  6919                           
  6920                           ;sensors.c: 16:     I2C_Master_Start();
  6921  00447C  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  6922                           
  6923                           ;sensors.c: 17:     I2C_Master_Write(0b00010000);
  6924  004480  0E00               	movlw	0
  6925  004482  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6926  004484  0E10               	movlw	16
  6927  004486  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6928  004488  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  6929                           
  6930                           ;sensors.c: 18:     I2C_Master_Write(0);
  6931  00448C  0E00               	movlw	0
  6932  00448E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6933  004490  0E00               	movlw	0
  6934  004492  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6935  004494  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  6936                           
  6937                           ;sensors.c: 19:     I2C_Master_Stop();
  6938  004498  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  6939                           
  6940                           ;sensors.c: 22:     I2C_Master_Start();
  6941  00449C  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  6942                           
  6943                           ;sensors.c: 23:     I2C_Master_Write(0b00010001);
  6944  0044A0  0E00               	movlw	0
  6945  0044A2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6946  0044A4  0E11               	movlw	17
  6947  0044A6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6948  0044A8  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  6949                           
  6950                           ;sensors.c: 25:     for (unsigned char i = 0; i < 1; i++)
  6951  0044AC  0E00               	movlw	0
  6952  0044AE  6E1E               	movwf	shaftEncoderCount@i,c
  6953  0044B0                     l7831:
  6954                           
  6955                           ;sensors.c: 26:     {;sensors.c: 27:         count[i] = I2C_Master_Read(0);
  6956  0044B0  0E00               	movlw	0
  6957  0044B2  EC5E  F02A         	call	_I2C_Master_Read
  6958  0044B6  6E18               	movwf	??_shaftEncoderCount& (0+255),c
  6959  0044B8  6A19               	clrf	(??_shaftEncoderCount+1)& (0+255),c
  6960  0044BA  501E               	movf	shaftEncoderCount@i,w,c
  6961  0044BC  0D02               	mullw	2
  6962  0044BE  0E1A               	movlw	low shaftEncoderCount@count
  6963  0044C0  24F3               	addwf	prodl,w,c
  6964  0044C2  6ED9               	movwf	fsr2l,c
  6965  0044C4  0E00               	movlw	high shaftEncoderCount@count
  6966  0044C6  20F4               	addwfc	prodh,w,c
  6967  0044C8  6EDA               	movwf	fsr2h,c
  6968  0044CA  C018  FFDE         	movff	??_shaftEncoderCount,postinc2
  6969  0044CE  C019  FFDD         	movff	??_shaftEncoderCount+1,postdec2
  6970                           
  6971                           ;sensors.c: 28:     }
  6972  0044D2  2A1E               	incf	shaftEncoderCount@i,f,c
  6973  0044D4  501E               	movf	shaftEncoderCount@i,w,c
  6974  0044D6  B4D8               	btfsc	status,2,c
  6975  0044D8  D7EB               	goto	l7831
  6976                           
  6977                           ;sensors.c: 29:     count[1] = I2C_Master_Read(1);
  6978  0044DA  0E01               	movlw	1
  6979  0044DC  EC5E  F02A         	call	_I2C_Master_Read
  6980  0044E0  6E18               	movwf	??_shaftEncoderCount& (0+255),c
  6981  0044E2  5018               	movf	??_shaftEncoderCount,w,c
  6982  0044E4  6E1C               	movwf	shaftEncoderCount@count+2,c
  6983  0044E6  6A1D               	clrf	shaftEncoderCount@count+3,c
  6984                           
  6985                           ;sensors.c: 30:     I2C_Master_Stop();
  6986  0044E8  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  6987                           
  6988                           ;sensors.c: 32:     return (count[0])|(count[1]<<8);
  6989  0044EC  501C               	movf	shaftEncoderCount@count+2,w,c
  6990  0044EE  6E19               	movwf	(??_shaftEncoderCount+1)& (0+255),c
  6991  0044F0  6A18               	clrf	??_shaftEncoderCount& (0+255),c
  6992  0044F2  501A               	movf	shaftEncoderCount@count,w,c
  6993  0044F4  1018               	iorwf	??_shaftEncoderCount,w,c
  6994  0044F6  6E16               	movwf	?_shaftEncoderCount,c
  6995  0044F8  501B               	movf	shaftEncoderCount@count+1,w,c
  6996  0044FA  1019               	iorwf	??_shaftEncoderCount+1,w,c
  6997  0044FC  6E17               	movwf	?_shaftEncoderCount+1,c
  6998  0044FE  0012               	return		;funcret
  6999  004500                     __end_of_shaftEncoderCount:
  7000                           	opt callstack 0
  7001                           
  7002 ;; *************** function _sensorData *****************
  7003 ;; Defined at:
  7004 ;;		line 363 in file "menu.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  data            2  118[BANK0 ] int 
  7007 ;;  data2           2  120[BANK0 ] int 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7019 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;Total ram usage:        5 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:   12
  7026 ;; This function calls:
  7027 ;;		_lcdInst
  7028 ;;		_printf
  7029 ;; This function is called by:
  7030 ;;		_testTurn
  7031 ;;		_setForward
  7032 ;;		_setBackward
  7033 ;;		_setRight
  7034 ;;		_dispSensors2
  7035 ;;		_testShaftEncoder
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text24
  7040  004D36                     __ptext24:
  7041                           	opt callstack 0
  7042  004D36                     _sensorData:
  7043                           	opt callstack 17
  7044                           
  7045                           ;menu.c: 363: void sensorData(int data, int data2);menu.c: 364: {;menu.c: 365:     { lcd
      +                          Inst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7046                           
  7047                           ;incstack = 0
  7048  004D36  0E01               	movlw	1
  7049  004D38  EC9F  F02A         	call	_lcdInst
  7050  004D3C  0E11               	movlw	17
  7051  004D3E  6E7E               	movwf	??_sensorData& (0+255),c
  7052  004D40  0E3A               	movlw	58
  7053  004D42                     u9787:
  7054  004D42  2EE8               	decfsz	wreg,f,c
  7055  004D44  D7FE               	bra	u9787
  7056  004D46  2E7E               	decfsz	??_sensorData& (0+255),f,c
  7057  004D48  D7FC               	bra	u9787
  7058  004D4A  D000               	nop2	
  7059                           
  7060                           ;menu.c: 366:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  7061  004D4C  0E80               	movlw	128
  7062  004D4E  EC9F  F02A         	call	_lcdInst
  7063  004D52  0E07               	movlw	7
  7064  004D54  6E7E               	movwf	??_sensorData& (0+255),c
  7065  004D56  0E7D               	movlw	125
  7066  004D58                     u9797:
  7067  004D58  2EE8               	decfsz	wreg,f,c
  7068  004D5A  D7FE               	bra	u9797
  7069  004D5C  2E7E               	decfsz	??_sensorData& (0+255),f,c
  7070  004D5E  D7FC               	bra	u9797
  7071  004D60  F000               	nop	
  7072                           
  7073                           ;menu.c: 367:     printf("Distance: %d cm", data);
  7074  004D62  0E4C               	movlw	low STR_52
  7075  004D64  0100               	movlb	0	; () banked
  7076  004D66  6FEA               	movwf	printf@fmt& (0+255),b
  7077  004D68  0EFE               	movlw	high STR_52
  7078  004D6A  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  7079  004D6C  C0F6  F0EC         	movff	sensorData@data,?_printf+2
  7080  004D70  C0F7  F0ED         	movff	sensorData@data+1,?_printf+3
  7081  004D74  EC37  F02A         	call	_printf	;wreg free
  7082  004D78  0EC0               	movlw	192
  7083  004D7A  EC9F  F02A         	call	_lcdInst
  7084                           
  7085                           ;menu.c: 369:     printf("Distance2: %d cm", data2);
  7086  004D7E  0E2B               	movlw	low STR_54
  7087  004D80  0100               	movlb	0	; () banked
  7088  004D82  6FEA               	movwf	printf@fmt& (0+255),b
  7089  004D84  0EFE               	movlw	high STR_54
  7090  004D86  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  7091  004D88  C0F8  F0EC         	movff	sensorData@data2,?_printf+2
  7092  004D8C  C0F9  F0ED         	movff	sensorData@data2+1,?_printf+3
  7093  004D90  EC37  F02A         	call	_printf	;wreg free
  7094  004D94  0012               	return		;funcret
  7095  004D96                     __end_of_sensorData:
  7096                           	opt callstack 0
  7097                           
  7098 ;; *************** function _releaseDoor *****************
  7099 ;; Defined at:
  7100 ;;		line 58 in file "BallDispensingRobot.X/motion.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      _Bool 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        0 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:    5
  7121 ;; This function calls:
  7122 ;;		_readHallEffect
  7123 ;;		_releaseDoor1
  7124 ;;		_releaseDoor2
  7125 ;; This function is called by:
  7126 ;;		_detectCanister
  7127 ;;		_detectCanisterTurned
  7128 ;;		_depositBall
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text25
  7133  0054E0                     __ptext25:
  7134                           	opt callstack 0
  7135  0054E0                     _releaseDoor:
  7136                           	opt callstack 23
  7137                           
  7138                           ;BallDispensingRobot.X/motion.c: 60:     if (readHallEffect() == 1)
  7139                           
  7140                           ;incstack = 0
  7141  0054E0  EC80  F022         	call	_readHallEffect	;wreg free
  7142  0054E4  0416               	decf	?_readHallEffect,w,c
  7143  0054E6  1017               	iorwf	?_readHallEffect+1,w,c
  7144  0054E8  A4D8               	btfss	status,2,c
  7145  0054EA  D003               	goto	l8043
  7146                           
  7147                           ;BallDispensingRobot.X/motion.c: 61:         return releaseDoor1();
  7148  0054EC  EC16  F01F         	call	_releaseDoor1	;wreg free
  7149  0054F0  0012               	return	
  7150  0054F2                     l8043:
  7151                           
  7152                           ;BallDispensingRobot.X/motion.c: 63:         return releaseDoor2();
  7153  0054F2  ECB7  F017         	call	_releaseDoor2	;wreg free
  7154  0054F6  0012               	return		;funcret
  7155  0054F8                     __end_of_releaseDoor:
  7156                           	opt callstack 0
  7157                           
  7158 ;; *************** function _releaseDoor2 *****************
  7159 ;; Defined at:
  7160 ;;		line 82 in file "BallDispensingRobot.X/motion.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  start           4  111[COMRAM] float 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      _Bool 
  7167 ;; Registers used:
  7168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;Total ram usage:        4 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    4
  7181 ;; This function calls:
  7182 ;;		___flge
  7183 ;;		___flsub
  7184 ;;		_getTime
  7185 ;;		_readHallEffect
  7186 ;; This function is called by:
  7187 ;;		_releaseDoor
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text26
  7192  002F6E                     __ptext26:
  7193                           	opt callstack 0
  7194  002F6E                     _releaseDoor2:
  7195                           	opt callstack 23
  7196                           
  7197                           ;BallDispensingRobot.X/motion.c: 84:     TRISCbits.RC5 = 0;
  7198                           
  7199                           ;incstack = 0
  7200  002F6E  9A94               	bcf	3988,5,c	;volatile
  7201                           
  7202                           ;BallDispensingRobot.X/motion.c: 86:     float start = getTime();
  7203  002F70  ECFA  F026         	call	_getTime	;wreg free
  7204  002F74  C046  F070         	movff	?_getTime,releaseDoor2@start
  7205  002F78  C047  F071         	movff	?_getTime+1,releaseDoor2@start+1
  7206  002F7C  C048  F072         	movff	?_getTime+2,releaseDoor2@start+2
  7207  002F80  C049  F073         	movff	?_getTime+3,releaseDoor2@start+3
  7208                           
  7209                           ;BallDispensingRobot.X/motion.c: 88:     while (readHallEffect() == 0 && (getTime() - st
      +                          art) < 0.6)
  7210  002F84  D007               	goto	l7903
  7211  002F86                     l655:
  7212                           
  7213                           ;BallDispensingRobot.X/motion.c: 89:     {;BallDispensingRobot.X/motion.c: 90:         L
      +                          ATCbits.LATC5 = 1;
  7214  002F86  8A8B               	bsf	3979,5,c	;volatile
  7215                           
  7216                           ;BallDispensingRobot.X/motion.c: 91:         if (readHallEffect()==1)
  7217  002F88  EC80  F022         	call	_readHallEffect	;wreg free
  7218  002F8C  0416               	decf	?_readHallEffect,w,c
  7219  002F8E  1017               	iorwf	?_readHallEffect+1,w,c
  7220  002F90  B4D8               	btfsc	status,2,c
  7221  002F92  D02E               	goto	u8080
  7222  002F94                     l7903:
  7223                           
  7224                           ;BallDispensingRobot.X/motion.c: 88:     while (readHallEffect() == 0 && (getTime() - st
      +                          art) < 0.6)
  7225  002F94  EC80  F022         	call	_readHallEffect	;wreg free
  7226  002F98  5016               	movf	?_readHallEffect,w,c
  7227  002F9A  1017               	iorwf	?_readHallEffect+1,w,c
  7228  002F9C  A4D8               	btfss	status,2,c
  7229  002F9E  D028               	goto	u8080
  7230  002FA0  C070  F060         	movff	releaseDoor2@start,___flsub@a
  7231  002FA4  C071  F061         	movff	releaseDoor2@start+1,___flsub@a+1
  7232  002FA8  C072  F062         	movff	releaseDoor2@start+2,___flsub@a+2
  7233  002FAC  C073  F063         	movff	releaseDoor2@start+3,___flsub@a+3
  7234  002FB0  ECFA  F026         	call	_getTime	;wreg free
  7235  002FB4  C046  F05C         	movff	?_getTime,___flsub@b
  7236  002FB8  C047  F05D         	movff	?_getTime+1,___flsub@b+1
  7237  002FBC  C048  F05E         	movff	?_getTime+2,___flsub@b+2
  7238  002FC0  C049  F05F         	movff	?_getTime+3,___flsub@b+3
  7239  002FC4  ECB4  F028         	call	___flsub	;wreg free
  7240  002FC8  C05C  F064         	movff	?___flsub,___flge@ff1
  7241  002FCC  C05D  F065         	movff	?___flsub+1,___flge@ff1+1
  7242  002FD0  C05E  F066         	movff	?___flsub+2,___flge@ff1+2
  7243  002FD4  C05F  F067         	movff	?___flsub+3,___flge@ff1+3
  7244  002FD8  0E9A               	movlw	154
  7245  002FDA  6E68               	movwf	___flge@ff2,c
  7246  002FDC  0E99               	movlw	153
  7247  002FDE  6E69               	movwf	___flge@ff2+1,c
  7248  002FE0  0E19               	movlw	25
  7249  002FE2  6E6A               	movwf	___flge@ff2+2,c
  7250  002FE4  0E3F               	movlw	63
  7251  002FE6  6E6B               	movwf	___flge@ff2+3,c
  7252  002FE8  EC7F  F01F         	call	___flge	;wreg free
  7253  002FEC  A0D8               	btfss	status,0,c
  7254  002FEE  D7CB               	goto	l655
  7255  002FF0                     u8080:
  7256                           
  7257                           ;BallDispensingRobot.X/motion.c: 96:     if ((getTime() - start) > 0.6)
  7258  002FF0  0E9A               	movlw	154
  7259  002FF2  6E64               	movwf	___flge@ff1,c
  7260  002FF4  0E99               	movlw	153
  7261  002FF6  6E65               	movwf	___flge@ff1+1,c
  7262  002FF8  0E19               	movlw	25
  7263  002FFA  6E66               	movwf	___flge@ff1+2,c
  7264  002FFC  0E3F               	movlw	63
  7265  002FFE  6E67               	movwf	___flge@ff1+3,c
  7266  003000  C070  F060         	movff	releaseDoor2@start,___flsub@a
  7267  003004  C071  F061         	movff	releaseDoor2@start+1,___flsub@a+1
  7268  003008  C072  F062         	movff	releaseDoor2@start+2,___flsub@a+2
  7269  00300C  C073  F063         	movff	releaseDoor2@start+3,___flsub@a+3
  7270  003010  ECFA  F026         	call	_getTime	;wreg free
  7271  003014  C046  F05C         	movff	?_getTime,___flsub@b
  7272  003018  C047  F05D         	movff	?_getTime+1,___flsub@b+1
  7273  00301C  C048  F05E         	movff	?_getTime+2,___flsub@b+2
  7274  003020  C049  F05F         	movff	?_getTime+3,___flsub@b+3
  7275  003024  ECB4  F028         	call	___flsub	;wreg free
  7276  003028  C05C  F068         	movff	?___flsub,___flge@ff2
  7277  00302C  C05D  F069         	movff	?___flsub+1,___flge@ff2+1
  7278  003030  C05E  F06A         	movff	?___flsub+2,___flge@ff2+2
  7279  003034  C05F  F06B         	movff	?___flsub+3,___flge@ff2+3
  7280  003038  EC7F  F01F         	call	___flge	;wreg free
  7281  00303C  B0D8               	btfsc	status,0,c
  7282  00303E  D003               	goto	l7915
  7283  003040                     u8090:
  7284                           
  7285                           ;BallDispensingRobot.X/motion.c: 97:     {;BallDispensingRobot.X/motion.c: 98:         L
      +                          ATCbits.LATC5 = 0;
  7286  003040  9A8B               	bcf	3979,5,c	;volatile
  7287                           
  7288                           ;BallDispensingRobot.X/motion.c: 99:         return 0;
  7289  003042  0E00               	movlw	0
  7290  003044  0012               	return	
  7291  003046                     l7915:
  7292                           
  7293                           ;BallDispensingRobot.X/motion.c: 101:     start = getTime();
  7294  003046  ECFA  F026         	call	_getTime	;wreg free
  7295  00304A  C046  F070         	movff	?_getTime,releaseDoor2@start
  7296  00304E  C047  F071         	movff	?_getTime+1,releaseDoor2@start+1
  7297  003052  C048  F072         	movff	?_getTime+2,releaseDoor2@start+2
  7298  003056  C049  F073         	movff	?_getTime+3,releaseDoor2@start+3
  7299                           
  7300                           ;BallDispensingRobot.X/motion.c: 102:     while (readHallEffect() && (getTime() - start)
      +                           < 0.6)
  7301  00305A  D001               	goto	l7917
  7302  00305C                     l663:
  7303                           
  7304                           ;BallDispensingRobot.X/motion.c: 103:     {;BallDispensingRobot.X/motion.c: 104:        
      +                           LATCbits.LATC5 = 1;
  7305  00305C  8A8B               	bsf	3979,5,c	;volatile
  7306  00305E                     l7917:
  7307                           
  7308                           ;BallDispensingRobot.X/motion.c: 102:     while (readHallEffect() && (getTime() - start)
      +                           < 0.6)
  7309  00305E  EC80  F022         	call	_readHallEffect	;wreg free
  7310  003062  5016               	movf	?_readHallEffect,w,c
  7311  003064  1017               	iorwf	?_readHallEffect+1,w,c
  7312  003066  B4D8               	btfsc	status,2,c
  7313  003068  D028               	goto	u8110
  7314  00306A  C070  F060         	movff	releaseDoor2@start,___flsub@a
  7315  00306E  C071  F061         	movff	releaseDoor2@start+1,___flsub@a+1
  7316  003072  C072  F062         	movff	releaseDoor2@start+2,___flsub@a+2
  7317  003076  C073  F063         	movff	releaseDoor2@start+3,___flsub@a+3
  7318  00307A  ECFA  F026         	call	_getTime	;wreg free
  7319  00307E  C046  F05C         	movff	?_getTime,___flsub@b
  7320  003082  C047  F05D         	movff	?_getTime+1,___flsub@b+1
  7321  003086  C048  F05E         	movff	?_getTime+2,___flsub@b+2
  7322  00308A  C049  F05F         	movff	?_getTime+3,___flsub@b+3
  7323  00308E  ECB4  F028         	call	___flsub	;wreg free
  7324  003092  C05C  F064         	movff	?___flsub,___flge@ff1
  7325  003096  C05D  F065         	movff	?___flsub+1,___flge@ff1+1
  7326  00309A  C05E  F066         	movff	?___flsub+2,___flge@ff1+2
  7327  00309E  C05F  F067         	movff	?___flsub+3,___flge@ff1+3
  7328  0030A2  0E9A               	movlw	154
  7329  0030A4  6E68               	movwf	___flge@ff2,c
  7330  0030A6  0E99               	movlw	153
  7331  0030A8  6E69               	movwf	___flge@ff2+1,c
  7332  0030AA  0E19               	movlw	25
  7333  0030AC  6E6A               	movwf	___flge@ff2+2,c
  7334  0030AE  0E3F               	movlw	63
  7335  0030B0  6E6B               	movwf	___flge@ff2+3,c
  7336  0030B2  EC7F  F01F         	call	___flge	;wreg free
  7337  0030B6  A0D8               	btfss	status,0,c
  7338  0030B8  D7D1               	goto	l663
  7339  0030BA                     u8110:
  7340                           
  7341                           ;BallDispensingRobot.X/motion.c: 107:     if ((getTime() - start) > 0.6)
  7342  0030BA  0E9A               	movlw	154
  7343  0030BC  6E64               	movwf	___flge@ff1,c
  7344  0030BE  0E99               	movlw	153
  7345  0030C0  6E65               	movwf	___flge@ff1+1,c
  7346  0030C2  0E19               	movlw	25
  7347  0030C4  6E66               	movwf	___flge@ff1+2,c
  7348  0030C6  0E3F               	movlw	63
  7349  0030C8  6E67               	movwf	___flge@ff1+3,c
  7350  0030CA  C070  F060         	movff	releaseDoor2@start,___flsub@a
  7351  0030CE  C071  F061         	movff	releaseDoor2@start+1,___flsub@a+1
  7352  0030D2  C072  F062         	movff	releaseDoor2@start+2,___flsub@a+2
  7353  0030D6  C073  F063         	movff	releaseDoor2@start+3,___flsub@a+3
  7354  0030DA  ECFA  F026         	call	_getTime	;wreg free
  7355  0030DE  C046  F05C         	movff	?_getTime,___flsub@b
  7356  0030E2  C047  F05D         	movff	?_getTime+1,___flsub@b+1
  7357  0030E6  C048  F05E         	movff	?_getTime+2,___flsub@b+2
  7358  0030EA  C049  F05F         	movff	?_getTime+3,___flsub@b+3
  7359  0030EE  ECB4  F028         	call	___flsub	;wreg free
  7360  0030F2  C05C  F068         	movff	?___flsub,___flge@ff2
  7361  0030F6  C05D  F069         	movff	?___flsub+1,___flge@ff2+1
  7362  0030FA  C05E  F06A         	movff	?___flsub+2,___flge@ff2+2
  7363  0030FE  C05F  F06B         	movff	?___flsub+3,___flge@ff2+3
  7364  003102  EC7F  F01F         	call	___flge	;wreg free
  7365  003106  A0D8               	btfss	status,0,c
  7366  003108  D79B               	goto	u8090
  7367                           
  7368                           ;BallDispensingRobot.X/motion.c: 112:     LATCbits.LATC5 = 0;
  7369                           
  7370                           ;BallDispensingRobot.X/motion.c: 111:     }
  7371                           
  7372                           ;BallDispensingRobot.X/motion.c: 108:     {;BallDispensingRobot.X/motion.c: 109:        
      +                           LATCbits.LATC5 = 0;
  7373  00310A  9A8B               	bcf	3979,5,c	;volatile
  7374                           
  7375                           ;BallDispensingRobot.X/motion.c: 113:     return 1;
  7376  00310C  0E01               	movlw	1
  7377  00310E  0012               	return		;funcret
  7378  003110                     __end_of_releaseDoor2:
  7379                           	opt callstack 0
  7380                           
  7381 ;; *************** function _releaseDoor1 *****************
  7382 ;; Defined at:
  7383 ;;		line 65 in file "BallDispensingRobot.X/motion.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;		None
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  start           4  111[COMRAM] float 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      _Bool 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;Total ram usage:        4 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:    4
  7404 ;; This function calls:
  7405 ;;		___flge
  7406 ;;		___flsub
  7407 ;;		_getTime
  7408 ;;		_readHallEffect
  7409 ;; This function is called by:
  7410 ;;		_releaseDoor
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text27
  7415  003E2C                     __ptext27:
  7416                           	opt callstack 0
  7417  003E2C                     _releaseDoor1:
  7418                           	opt callstack 23
  7419                           
  7420                           ;BallDispensingRobot.X/motion.c: 67:     TRISCbits.RC5 = 0;
  7421                           
  7422                           ;incstack = 0
  7423  003E2C  9A94               	bcf	3988,5,c	;volatile
  7424                           
  7425                           ;BallDispensingRobot.X/motion.c: 69:     float start = getTime();
  7426  003E2E  ECFA  F026         	call	_getTime	;wreg free
  7427  003E32  C046  F070         	movff	?_getTime,releaseDoor1@start
  7428  003E36  C047  F071         	movff	?_getTime+1,releaseDoor1@start+1
  7429  003E3A  C048  F072         	movff	?_getTime+2,releaseDoor1@start+2
  7430  003E3E  C049  F073         	movff	?_getTime+3,releaseDoor1@start+3
  7431                           
  7432                           ;BallDispensingRobot.X/motion.c: 70:     while (readHallEffect() && (getTime() - start) 
      +                          < 0.6)
  7433  003E42  D001               	goto	l7879
  7434  003E44                     l646:
  7435                           
  7436                           ;BallDispensingRobot.X/motion.c: 71:     {;BallDispensingRobot.X/motion.c: 72:         L
      +                          ATCbits.LATC5 = 1;
  7437  003E44  8A8B               	bsf	3979,5,c	;volatile
  7438  003E46                     l7879:
  7439                           
  7440                           ;BallDispensingRobot.X/motion.c: 70:     while (readHallEffect() && (getTime() - start) 
      +                          < 0.6)
  7441  003E46  EC80  F022         	call	_readHallEffect	;wreg free
  7442  003E4A  5016               	movf	?_readHallEffect,w,c
  7443  003E4C  1017               	iorwf	?_readHallEffect+1,w,c
  7444  003E4E  B4D8               	btfsc	status,2,c
  7445  003E50  D028               	goto	u8040
  7446  003E52  C070  F060         	movff	releaseDoor1@start,___flsub@a
  7447  003E56  C071  F061         	movff	releaseDoor1@start+1,___flsub@a+1
  7448  003E5A  C072  F062         	movff	releaseDoor1@start+2,___flsub@a+2
  7449  003E5E  C073  F063         	movff	releaseDoor1@start+3,___flsub@a+3
  7450  003E62  ECFA  F026         	call	_getTime	;wreg free
  7451  003E66  C046  F05C         	movff	?_getTime,___flsub@b
  7452  003E6A  C047  F05D         	movff	?_getTime+1,___flsub@b+1
  7453  003E6E  C048  F05E         	movff	?_getTime+2,___flsub@b+2
  7454  003E72  C049  F05F         	movff	?_getTime+3,___flsub@b+3
  7455  003E76  ECB4  F028         	call	___flsub	;wreg free
  7456  003E7A  C05C  F064         	movff	?___flsub,___flge@ff1
  7457  003E7E  C05D  F065         	movff	?___flsub+1,___flge@ff1+1
  7458  003E82  C05E  F066         	movff	?___flsub+2,___flge@ff1+2
  7459  003E86  C05F  F067         	movff	?___flsub+3,___flge@ff1+3
  7460  003E8A  0E9A               	movlw	154
  7461  003E8C  6E68               	movwf	___flge@ff2,c
  7462  003E8E  0E99               	movlw	153
  7463  003E90  6E69               	movwf	___flge@ff2+1,c
  7464  003E92  0E19               	movlw	25
  7465  003E94  6E6A               	movwf	___flge@ff2+2,c
  7466  003E96  0E3F               	movlw	63
  7467  003E98  6E6B               	movwf	___flge@ff2+3,c
  7468  003E9A  EC7F  F01F         	call	___flge	;wreg free
  7469  003E9E  A0D8               	btfss	status,0,c
  7470  003EA0  D7D1               	goto	l646
  7471  003EA2                     u8040:
  7472                           
  7473                           ;BallDispensingRobot.X/motion.c: 74:     if ((getTime() - start) > 0.6)
  7474  003EA2  0E9A               	movlw	154
  7475  003EA4  6E64               	movwf	___flge@ff1,c
  7476  003EA6  0E99               	movlw	153
  7477  003EA8  6E65               	movwf	___flge@ff1+1,c
  7478  003EAA  0E19               	movlw	25
  7479  003EAC  6E66               	movwf	___flge@ff1+2,c
  7480  003EAE  0E3F               	movlw	63
  7481  003EB0  6E67               	movwf	___flge@ff1+3,c
  7482  003EB2  C070  F060         	movff	releaseDoor1@start,___flsub@a
  7483  003EB6  C071  F061         	movff	releaseDoor1@start+1,___flsub@a+1
  7484  003EBA  C072  F062         	movff	releaseDoor1@start+2,___flsub@a+2
  7485  003EBE  C073  F063         	movff	releaseDoor1@start+3,___flsub@a+3
  7486  003EC2  ECFA  F026         	call	_getTime	;wreg free
  7487  003EC6  C046  F05C         	movff	?_getTime,___flsub@b
  7488  003ECA  C047  F05D         	movff	?_getTime+1,___flsub@b+1
  7489  003ECE  C048  F05E         	movff	?_getTime+2,___flsub@b+2
  7490  003ED2  C049  F05F         	movff	?_getTime+3,___flsub@b+3
  7491  003ED6  ECB4  F028         	call	___flsub	;wreg free
  7492  003EDA  C05C  F068         	movff	?___flsub,___flge@ff2
  7493  003EDE  C05D  F069         	movff	?___flsub+1,___flge@ff2+1
  7494  003EE2  C05E  F06A         	movff	?___flsub+2,___flge@ff2+2
  7495  003EE6  C05F  F06B         	movff	?___flsub+3,___flge@ff2+3
  7496  003EEA  EC7F  F01F         	call	___flge	;wreg free
  7497  003EEE  B0D8               	btfsc	status,0,c
  7498  003EF0  D003               	goto	l650
  7499                           
  7500                           ;BallDispensingRobot.X/motion.c: 75:     {;BallDispensingRobot.X/motion.c: 76:          
      +                             LATCbits.LATC5 = 0;
  7501  003EF2  9A8B               	bcf	3979,5,c	;volatile
  7502                           
  7503                           ;BallDispensingRobot.X/motion.c: 77:             return 0;
  7504  003EF4  0E00               	movlw	0
  7505  003EF6  0012               	return	
  7506  003EF8                     l650:
  7507                           
  7508                           ;BallDispensingRobot.X/motion.c: 79:     LATCbits.LATC5 = 0;
  7509  003EF8  9A8B               	bcf	3979,5,c	;volatile
  7510                           
  7511                           ;BallDispensingRobot.X/motion.c: 80:     return 1;
  7512  003EFA  0E01               	movlw	1
  7513  003EFC  0012               	return		;funcret
  7514  003EFE                     __end_of_releaseDoor1:
  7515                           	opt callstack 0
  7516                           
  7517 ;; *************** function _readHallEffect *****************
  7518 ;; Defined at:
  7519 ;;		line 166 in file "sensors.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  i               1   29[COMRAM] unsigned char 
  7524 ;;  count           4   25[COMRAM] unsigned int [2]
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  2   21[COMRAM] int 
  7527 ;; Registers used:
  7528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;Total ram usage:        9 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:    3
  7541 ;; This function calls:
  7542 ;;		_I2C_Master_Init
  7543 ;;		_I2C_Master_Read
  7544 ;;		_I2C_Master_Start
  7545 ;;		_I2C_Master_Stop
  7546 ;;		_I2C_Master_Write
  7547 ;; This function is called by:
  7548 ;;		_releaseDoor
  7549 ;;		_releaseDoor1
  7550 ;;		_releaseDoor2
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text28
  7555  004500                     __ptext28:
  7556                           	opt callstack 0
  7557  004500                     _readHallEffect:
  7558                           	opt callstack 23
  7559                           
  7560                           ;sensors.c: 168:     unsigned int count[2];;sensors.c: 169:     I2C_Master_Init(100000);
  7561                           
  7562                           ;incstack = 0
  7563  004500  0EA0               	movlw	160
  7564  004502  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  7565  004504  0E86               	movlw	134
  7566  004506  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  7567  004508  0E01               	movlw	1
  7568  00450A  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  7569  00450C  0E00               	movlw	0
  7570  00450E  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  7571  004510  EC28  F027         	call	_I2C_Master_Init	;wreg free
  7572                           
  7573                           ;sensors.c: 173:     I2C_Master_Start();
  7574  004514  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  7575                           
  7576                           ;sensors.c: 174:     I2C_Master_Write(0b00010000);
  7577  004518  0E00               	movlw	0
  7578  00451A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  7579  00451C  0E10               	movlw	16
  7580  00451E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  7581  004520  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  7582                           
  7583                           ;sensors.c: 175:     I2C_Master_Write(4);
  7584  004524  0E00               	movlw	0
  7585  004526  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  7586  004528  0E04               	movlw	4
  7587  00452A  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  7588  00452C  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  7589                           
  7590                           ;sensors.c: 176:     I2C_Master_Stop();
  7591  004530  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  7592                           
  7593                           ;sensors.c: 179:     I2C_Master_Start();
  7594  004534  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  7595                           
  7596                           ;sensors.c: 180:     I2C_Master_Write(0b00010001);
  7597  004538  0E00               	movlw	0
  7598  00453A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  7599  00453C  0E11               	movlw	17
  7600  00453E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  7601  004540  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  7602                           
  7603                           ;sensors.c: 182:     for (unsigned char i = 0; i < 1; i++)
  7604  004544  0E00               	movlw	0
  7605  004546  6E1E               	movwf	readHallEffect@i,c
  7606  004548                     l7799:
  7607                           
  7608                           ;sensors.c: 183:     {;sensors.c: 184:         count[i] = I2C_Master_Read(0);
  7609  004548  0E00               	movlw	0
  7610  00454A  EC5E  F02A         	call	_I2C_Master_Read
  7611  00454E  6E18               	movwf	??_readHallEffect& (0+255),c
  7612  004550  6A19               	clrf	(??_readHallEffect+1)& (0+255),c
  7613  004552  501E               	movf	readHallEffect@i,w,c
  7614  004554  0D02               	mullw	2
  7615  004556  0E1A               	movlw	low readHallEffect@count
  7616  004558  24F3               	addwf	prodl,w,c
  7617  00455A  6ED9               	movwf	fsr2l,c
  7618  00455C  0E00               	movlw	high readHallEffect@count
  7619  00455E  20F4               	addwfc	prodh,w,c
  7620  004560  6EDA               	movwf	fsr2h,c
  7621  004562  C018  FFDE         	movff	??_readHallEffect,postinc2
  7622  004566  C019  FFDD         	movff	??_readHallEffect+1,postdec2
  7623                           
  7624                           ;sensors.c: 185:     }
  7625  00456A  2A1E               	incf	readHallEffect@i,f,c
  7626  00456C  501E               	movf	readHallEffect@i,w,c
  7627  00456E  B4D8               	btfsc	status,2,c
  7628  004570  D7EB               	goto	l7799
  7629                           
  7630                           ;sensors.c: 186:     count[1] = I2C_Master_Read(1);
  7631  004572  0E01               	movlw	1
  7632  004574  EC5E  F02A         	call	_I2C_Master_Read
  7633  004578  6E18               	movwf	??_readHallEffect& (0+255),c
  7634  00457A  5018               	movf	??_readHallEffect,w,c
  7635  00457C  6E1C               	movwf	readHallEffect@count+2,c
  7636  00457E  6A1D               	clrf	readHallEffect@count+3,c
  7637                           
  7638                           ;sensors.c: 187:     I2C_Master_Stop();
  7639  004580  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  7640                           
  7641                           ;sensors.c: 189:     return (count[0])|(count[1]<<8);
  7642  004584  501C               	movf	readHallEffect@count+2,w,c
  7643  004586  6E19               	movwf	(??_readHallEffect+1)& (0+255),c
  7644  004588  6A18               	clrf	??_readHallEffect& (0+255),c
  7645  00458A  501A               	movf	readHallEffect@count,w,c
  7646  00458C  1018               	iorwf	??_readHallEffect,w,c
  7647  00458E  6E16               	movwf	?_readHallEffect,c
  7648  004590  501B               	movf	readHallEffect@count+1,w,c
  7649  004592  1019               	iorwf	??_readHallEffect+1,w,c
  7650  004594  6E17               	movwf	?_readHallEffect+1,c
  7651  004596  0012               	return		;funcret
  7652  004598                     __end_of_readHallEffect:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _getTime *****************
  7656 ;; Defined at:
  7657 ;;		line 397 in file "menu.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  time            4   73[COMRAM] float 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  4   69[COMRAM] float 
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;Total ram usage:        8 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    2
  7678 ;; This function calls:
  7679 ;;		___flmul
  7680 ;;		___xxtofl
  7681 ;; This function is called by:
  7682 ;;		_releaseDoor1
  7683 ;;		_releaseDoor2
  7684 ;;		_printState
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text29
  7689  004DF4                     __ptext29:
  7690                           	opt callstack 0
  7691  004DF4                     _getTime:
  7692                           	opt callstack 24
  7693                           
  7694                           ;menu.c: 399:     float time = timeCount*0.0262144;
  7695                           
  7696                           ;incstack = 0
  7697  004DF4  C162  F01F         	movff	_timeCount,___xxtofl@val	;volatile
  7698  004DF8  C163  F020         	movff	_timeCount+1,___xxtofl@val+1	;volatile
  7699  004DFC  C164  F021         	movff	_timeCount+2,___xxtofl@val+2	;volatile
  7700  004E00  C165  F022         	movff	_timeCount+3,___xxtofl@val+3	;volatile
  7701  004E04  0E01               	movlw	1
  7702  004E06  EC40  F01B         	call	___xxtofl
  7703  004E0A  C01F  F02D         	movff	?___xxtofl,___flmul@b
  7704  004E0E  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  7705  004E12  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  7706  004E16  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  7707  004E1A  0E95               	movlw	149
  7708  004E1C  6E31               	movwf	___flmul@a,c
  7709  004E1E  0EBF               	movlw	191
  7710  004E20  6E32               	movwf	___flmul@a+1,c
  7711  004E22  0ED6               	movlw	214
  7712  004E24  6E33               	movwf	___flmul@a+2,c
  7713  004E26  0E3C               	movlw	60
  7714  004E28  6E34               	movwf	___flmul@a+3,c
  7715  004E2A  ECA4  F00A         	call	___flmul	;wreg free
  7716  004E2E  C02D  F04A         	movff	?___flmul,getTime@time
  7717  004E32  C02E  F04B         	movff	?___flmul+1,getTime@time+1
  7718  004E36  C02F  F04C         	movff	?___flmul+2,getTime@time+2
  7719  004E3A  C030  F04D         	movff	?___flmul+3,getTime@time+3
  7720                           
  7721                           ;menu.c: 400:     return time;
  7722  004E3E  C04A  F046         	movff	getTime@time,?_getTime
  7723  004E42  C04B  F047         	movff	getTime@time+1,?_getTime+1
  7724  004E46  C04C  F048         	movff	getTime@time+2,?_getTime+2
  7725  004E4A  C04D  F049         	movff	getTime@time+3,?_getTime+3
  7726  004E4E  0012               	return		;funcret
  7727  004E50                     __end_of_getTime:
  7728                           	opt callstack 0
  7729                           
  7730 ;; *************** function ___xxtofl *****************
  7731 ;; Defined at:
  7732 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  sign            1    wreg     unsigned char 
  7735 ;;  val             4   30[COMRAM] long 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  sign            1   38[COMRAM] unsigned char 
  7738 ;;  arg             4   40[COMRAM] unsigned long 
  7739 ;;  exp             1   39[COMRAM] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  4   30[COMRAM] unsigned char 
  7742 ;; Registers used:
  7743 ;;		wreg, status,2, status,0
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;Total ram usage:       14 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_main
  7760 ;;		_buildTimeScreen
  7761 ;;		_getTime
  7762 ;;		_getDistance
  7763 ;;		_printState
  7764 ;;		_adjustCanister
  7765 ;;		_mapDist
  7766 ;;		_getDistance2
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text30
  7771  003680                     __ptext30:
  7772                           	opt callstack 0
  7773  003680                     ___xxtofl:
  7774                           	opt callstack 26
  7775                           
  7776                           ;incstack = 0
  7777                           ;___xxtofl@sign stored from wreg
  7778  003680  6E27               	movwf	___xxtofl@sign,c
  7779  003682  5027               	movf	___xxtofl@sign,w,c
  7780  003684  A4D8               	btfss	status,2,c
  7781  003686  AE22               	btfss	___xxtofl@val+3,7,c
  7782  003688  D01A               	goto	l2013
  7783  00368A  C01F  F023         	movff	___xxtofl@val,??___xxtofl
  7784  00368E  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
  7785  003692  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
  7786  003696  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
  7787  00369A  1E23               	comf	??___xxtofl,f,c
  7788  00369C  1E24               	comf	??___xxtofl+1,f,c
  7789  00369E  1E25               	comf	??___xxtofl+2,f,c
  7790  0036A0  1E26               	comf	??___xxtofl+3,f,c
  7791  0036A2  2A23               	incf	??___xxtofl,f,c
  7792  0036A4  0E00               	movlw	0
  7793  0036A6  2224               	addwfc	??___xxtofl+1,f,c
  7794  0036A8  2225               	addwfc	??___xxtofl+2,f,c
  7795  0036AA  2226               	addwfc	??___xxtofl+3,f,c
  7796  0036AC  C023  F029         	movff	??___xxtofl,___xxtofl@arg
  7797  0036B0  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
  7798  0036B4  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
  7799  0036B8  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
  7800  0036BC  D008               	goto	l7735
  7801  0036BE                     l2013:
  7802  0036BE  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
  7803  0036C2  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7804  0036C6  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7805  0036CA  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7806  0036CE                     l7735:
  7807  0036CE  501F               	movf	___xxtofl@val,w,c
  7808  0036D0  1020               	iorwf	___xxtofl@val+1,w,c
  7809  0036D2  1021               	iorwf	___xxtofl@val+2,w,c
  7810  0036D4  1022               	iorwf	___xxtofl@val+3,w,c
  7811  0036D6  A4D8               	btfss	status,2,c
  7812  0036D8  D009               	goto	l7741
  7813  0036DA  0E00               	movlw	0
  7814  0036DC  6E1F               	movwf	?___xxtofl,c
  7815  0036DE  0E00               	movlw	0
  7816  0036E0  6E20               	movwf	?___xxtofl+1,c
  7817  0036E2  0E00               	movlw	0
  7818  0036E4  6E21               	movwf	?___xxtofl+2,c
  7819  0036E6  0E00               	movlw	0
  7820  0036E8  6E22               	movwf	?___xxtofl+3,c
  7821  0036EA  0012               	return	
  7822  0036EC                     l7741:
  7823  0036EC  0E96               	movlw	150
  7824  0036EE  6E28               	movwf	___xxtofl@exp,c
  7825  0036F0  D006               	goto	l7745
  7826  0036F2                     l7743:
  7827  0036F2  2A28               	incf	___xxtofl@exp,f,c
  7828  0036F4  90D8               	bcf	status,0,c
  7829  0036F6  322C               	rrcf	___xxtofl@arg+3,f,c
  7830  0036F8  322B               	rrcf	___xxtofl@arg+2,f,c
  7831  0036FA  322A               	rrcf	___xxtofl@arg+1,f,c
  7832  0036FC  3229               	rrcf	___xxtofl@arg,f,c
  7833  0036FE                     l7745:
  7834  0036FE  0E00               	movlw	0
  7835  003700  1429               	andwf	___xxtofl@arg,w,c
  7836  003702  6E23               	movwf	??___xxtofl& (0+255),c
  7837  003704  0E00               	movlw	0
  7838  003706  142A               	andwf	___xxtofl@arg+1,w,c
  7839  003708  6E24               	movwf	(??___xxtofl+1)& (0+255),c
  7840  00370A  0E00               	movlw	0
  7841  00370C  142B               	andwf	___xxtofl@arg+2,w,c
  7842  00370E  6E25               	movwf	(??___xxtofl+2)& (0+255),c
  7843  003710  0EFE               	movlw	254
  7844  003712  142C               	andwf	___xxtofl@arg+3,w,c
  7845  003714  6E26               	movwf	(??___xxtofl+3)& (0+255),c
  7846  003716  5023               	movf	??___xxtofl,w,c
  7847  003718  1024               	iorwf	??___xxtofl+1,w,c
  7848  00371A  1025               	iorwf	??___xxtofl+2,w,c
  7849  00371C  1026               	iorwf	??___xxtofl+3,w,c
  7850  00371E  B4D8               	btfsc	status,2,c
  7851  003720  D00D               	goto	l2020
  7852  003722  D7E7               	goto	l7743
  7853  003724                     l7747:
  7854  003724  2A28               	incf	___xxtofl@exp,f,c
  7855  003726  0E01               	movlw	1
  7856  003728  2629               	addwf	___xxtofl@arg,f,c
  7857  00372A  0E00               	movlw	0
  7858  00372C  222A               	addwfc	___xxtofl@arg+1,f,c
  7859  00372E  222B               	addwfc	___xxtofl@arg+2,f,c
  7860  003730  222C               	addwfc	___xxtofl@arg+3,f,c
  7861  003732  90D8               	bcf	status,0,c
  7862  003734  322C               	rrcf	___xxtofl@arg+3,f,c
  7863  003736  322B               	rrcf	___xxtofl@arg+2,f,c
  7864  003738  322A               	rrcf	___xxtofl@arg+1,f,c
  7865  00373A  3229               	rrcf	___xxtofl@arg,f,c
  7866  00373C                     l2020:
  7867  00373C  0E00               	movlw	0
  7868  00373E  1429               	andwf	___xxtofl@arg,w,c
  7869  003740  6E23               	movwf	??___xxtofl& (0+255),c
  7870  003742  0E00               	movlw	0
  7871  003744  142A               	andwf	___xxtofl@arg+1,w,c
  7872  003746  6E24               	movwf	(??___xxtofl+1)& (0+255),c
  7873  003748  0E00               	movlw	0
  7874  00374A  142B               	andwf	___xxtofl@arg+2,w,c
  7875  00374C  6E25               	movwf	(??___xxtofl+2)& (0+255),c
  7876  00374E  0EFF               	movlw	255
  7877  003750  142C               	andwf	___xxtofl@arg+3,w,c
  7878  003752  6E26               	movwf	(??___xxtofl+3)& (0+255),c
  7879  003754  5023               	movf	??___xxtofl,w,c
  7880  003756  1024               	iorwf	??___xxtofl+1,w,c
  7881  003758  1025               	iorwf	??___xxtofl+2,w,c
  7882  00375A  1026               	iorwf	??___xxtofl+3,w,c
  7883  00375C  B4D8               	btfsc	status,2,c
  7884  00375E  D007               	goto	l7755
  7885  003760  D7E1               	goto	l7747
  7886  003762                     l7753:
  7887  003762  0628               	decf	___xxtofl@exp,f,c
  7888  003764  90D8               	bcf	status,0,c
  7889  003766  3629               	rlcf	___xxtofl@arg,f,c
  7890  003768  362A               	rlcf	___xxtofl@arg+1,f,c
  7891  00376A  362B               	rlcf	___xxtofl@arg+2,f,c
  7892  00376C  362C               	rlcf	___xxtofl@arg+3,f,c
  7893  00376E                     l7755:
  7894  00376E  BE2B               	btfsc	___xxtofl@arg+2,7,c
  7895  003770  D003               	goto	u7950
  7896  003772  0E02               	movlw	2
  7897  003774  6028               	cpfslt	___xxtofl@exp,c
  7898  003776  D7F5               	goto	l7753
  7899  003778                     u7950:
  7900  003778  A028               	btfss	___xxtofl@exp,0,c
  7901  00377A  9E2B               	bcf	___xxtofl@arg+2,7,c
  7902  00377C  90D8               	bcf	status,0,c
  7903  00377E  3228               	rrcf	___xxtofl@exp,f,c
  7904  003780  C028  F023         	movff	___xxtofl@exp,??___xxtofl
  7905  003784  6A24               	clrf	(??___xxtofl+1)& (0+255),c
  7906  003786  6A25               	clrf	(??___xxtofl+2)& (0+255),c
  7907  003788  6A26               	clrf	(??___xxtofl+3)& (0+255),c
  7908  00378A  C023  F026         	movff	??___xxtofl,??___xxtofl+3
  7909  00378E  6A25               	clrf	??___xxtofl+2,c
  7910  003790  6A24               	clrf	??___xxtofl+1,c
  7911  003792  6A23               	clrf	??___xxtofl,c
  7912  003794  5023               	movf	??___xxtofl,w,c
  7913  003796  1229               	iorwf	___xxtofl@arg,f,c
  7914  003798  5024               	movf	??___xxtofl+1,w,c
  7915  00379A  122A               	iorwf	___xxtofl@arg+1,f,c
  7916  00379C  5025               	movf	??___xxtofl+2,w,c
  7917  00379E  122B               	iorwf	___xxtofl@arg+2,f,c
  7918  0037A0  5026               	movf	??___xxtofl+3,w,c
  7919  0037A2  122C               	iorwf	___xxtofl@arg+3,f,c
  7920  0037A4  5027               	movf	___xxtofl@sign,w,c
  7921  0037A6  A4D8               	btfss	status,2,c
  7922  0037A8  AE22               	btfss	___xxtofl@val+3,7,c
  7923  0037AA  D001               	goto	l7771
  7924  0037AC  8E2C               	bsf	___xxtofl@arg+3,7,c
  7925  0037AE                     l7771:
  7926  0037AE  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
  7927  0037B2  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
  7928  0037B6  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
  7929  0037BA  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
  7930  0037BE  0012               	return		;funcret
  7931  0037C0                     __end_of___xxtofl:
  7932                           	opt callstack 0
  7933                           
  7934 ;; *************** function _readDigitalSensor *****************
  7935 ;; Defined at:
  7936 ;;		line 140 in file "sensors.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;		None
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  i               1   29[COMRAM] unsigned char 
  7941 ;;  count           4   25[COMRAM] unsigned int [2]
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  2   21[COMRAM] int 
  7944 ;; Registers used:
  7945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;Total ram usage:        9 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    3
  7958 ;; This function calls:
  7959 ;;		_I2C_Master_Init
  7960 ;;		_I2C_Master_Read
  7961 ;;		_I2C_Master_Start
  7962 ;;		_I2C_Master_Stop
  7963 ;;		_I2C_Master_Write
  7964 ;; This function is called by:
  7965 ;;		_detectCanister
  7966 ;;		_detectCanisterTurned
  7967 ;;		_testDrive
  7968 ;;		_testDrive2
  7969 ;;		_dispSensors
  7970 ;;		_dispSensors2
  7971 ;;		_printState
  7972 ;;		_adjustCanister
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text31
  7977  004598                     __ptext31:
  7978                           	opt callstack 0
  7979  004598                     _readDigitalSensor:
  7980                           	opt callstack 26
  7981                           
  7982                           ;sensors.c: 142:     unsigned int count[2];;sensors.c: 143:     I2C_Master_Init(100000);
  7983                           
  7984                           ;incstack = 0
  7985  004598  0EA0               	movlw	160
  7986  00459A  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  7987  00459C  0E86               	movlw	134
  7988  00459E  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  7989  0045A0  0E01               	movlw	1
  7990  0045A2  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  7991  0045A4  0E00               	movlw	0
  7992  0045A6  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  7993  0045A8  EC28  F027         	call	_I2C_Master_Init	;wreg free
  7994                           
  7995                           ;sensors.c: 147:     I2C_Master_Start();
  7996  0045AC  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  7997                           
  7998                           ;sensors.c: 148:     I2C_Master_Write(0b00010000);
  7999  0045B0  0E00               	movlw	0
  8000  0045B2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8001  0045B4  0E10               	movlw	16
  8002  0045B6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8003  0045B8  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8004                           
  8005                           ;sensors.c: 149:     I2C_Master_Write(3);
  8006  0045BC  0E00               	movlw	0
  8007  0045BE  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8008  0045C0  0E03               	movlw	3
  8009  0045C2  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8010  0045C4  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8011                           
  8012                           ;sensors.c: 150:     I2C_Master_Stop();
  8013  0045C8  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8014                           
  8015                           ;sensors.c: 153:     I2C_Master_Start();
  8016  0045CC  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8017                           
  8018                           ;sensors.c: 154:     I2C_Master_Write(0b00010001);
  8019  0045D0  0E00               	movlw	0
  8020  0045D2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8021  0045D4  0E11               	movlw	17
  8022  0045D6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8023  0045D8  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8024                           
  8025                           ;sensors.c: 156:     for (unsigned char i = 0; i < 1; i++)
  8026  0045DC  0E00               	movlw	0
  8027  0045DE  6E1E               	movwf	readDigitalSensor@i,c
  8028  0045E0                     l7995:
  8029                           
  8030                           ;sensors.c: 157:     {;sensors.c: 158:         count[i] = I2C_Master_Read(0);
  8031  0045E0  0E00               	movlw	0
  8032  0045E2  EC5E  F02A         	call	_I2C_Master_Read
  8033  0045E6  6E18               	movwf	??_readDigitalSensor& (0+255),c
  8034  0045E8  6A19               	clrf	(??_readDigitalSensor+1)& (0+255),c
  8035  0045EA  501E               	movf	readDigitalSensor@i,w,c
  8036  0045EC  0D02               	mullw	2
  8037  0045EE  0E1A               	movlw	low readDigitalSensor@count
  8038  0045F0  24F3               	addwf	prodl,w,c
  8039  0045F2  6ED9               	movwf	fsr2l,c
  8040  0045F4  0E00               	movlw	high readDigitalSensor@count
  8041  0045F6  20F4               	addwfc	prodh,w,c
  8042  0045F8  6EDA               	movwf	fsr2h,c
  8043  0045FA  C018  FFDE         	movff	??_readDigitalSensor,postinc2
  8044  0045FE  C019  FFDD         	movff	??_readDigitalSensor+1,postdec2
  8045                           
  8046                           ;sensors.c: 159:     }
  8047  004602  2A1E               	incf	readDigitalSensor@i,f,c
  8048  004604  501E               	movf	readDigitalSensor@i,w,c
  8049  004606  B4D8               	btfsc	status,2,c
  8050  004608  D7EB               	goto	l7995
  8051                           
  8052                           ;sensors.c: 160:     count[1] = I2C_Master_Read(1);
  8053  00460A  0E01               	movlw	1
  8054  00460C  EC5E  F02A         	call	_I2C_Master_Read
  8055  004610  6E18               	movwf	??_readDigitalSensor& (0+255),c
  8056  004612  5018               	movf	??_readDigitalSensor,w,c
  8057  004614  6E1C               	movwf	readDigitalSensor@count+2,c
  8058  004616  6A1D               	clrf	readDigitalSensor@count+3,c
  8059                           
  8060                           ;sensors.c: 161:     I2C_Master_Stop();
  8061  004618  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8062                           
  8063                           ;sensors.c: 163:     return (count[0])|(count[1]<<8);
  8064  00461C  501C               	movf	readDigitalSensor@count+2,w,c
  8065  00461E  6E19               	movwf	(??_readDigitalSensor+1)& (0+255),c
  8066  004620  6A18               	clrf	??_readDigitalSensor& (0+255),c
  8067  004622  501A               	movf	readDigitalSensor@count,w,c
  8068  004624  1018               	iorwf	??_readDigitalSensor,w,c
  8069  004626  6E16               	movwf	?_readDigitalSensor,c
  8070  004628  501B               	movf	readDigitalSensor@count+1,w,c
  8071  00462A  1019               	iorwf	??_readDigitalSensor+1,w,c
  8072  00462C  6E17               	movwf	?_readDigitalSensor+1,c
  8073  00462E  0012               	return		;funcret
  8074  004630                     __end_of_readDigitalSensor:
  8075                           	opt callstack 0
  8076                           
  8077 ;; *************** function _increaseNumBalls *****************
  8078 ;; Defined at:
  8079 ;;		line 73 in file "data.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;		None
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;		None
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  1    wreg      void 
  8086 ;; Registers used:
  8087 ;;		status,2, status,0
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8097 ;;Total ram usage:        0 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:    1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_detectCanister
  8104 ;;		_detectCanisterTurned
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text32
  8109  005574                     __ptext32:
  8110                           	opt callstack 0
  8111  005574                     _increaseNumBalls:
  8112                           	opt callstack 27
  8113                           
  8114                           ;data.c: 75:     numBalls++;
  8115                           
  8116                           ;incstack = 0
  8117  005574  0101               	movlb	1	; () banked
  8118  005576  4B8A               	infsnz	_numBalls& (0+255),f,b	;volatile
  8119  005578  2B8B               	incf	(_numBalls+1)& (0+255),f,b	;volatile
  8120                           
  8121                           ; BSR set to: 1
  8122  00557A  0012               	return		;funcret
  8123  00557C                     __end_of_increaseNumBalls:
  8124                           	opt callstack 0
  8125                           
  8126 ;; *************** function _getNumCanisters *****************
  8127 ;; Defined at:
  8128 ;;		line 53 in file "data.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;		None
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;		None
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  2    0[COMRAM] int 
  8135 ;; Registers used:
  8136 ;;		None
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8146 ;;Total ram usage:        2 bytes
  8147 ;; Hardware stack levels used:    1
  8148 ;; Hardware stack levels required when called:    1
  8149 ;; This function calls:
  8150 ;;		Nothing
  8151 ;; This function is called by:
  8152 ;;		_main
  8153 ;;		_detectCanister
  8154 ;;		_initMenu
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text33
  8159  005560                     __ptext33:
  8160                           	opt callstack 0
  8161  005560                     _getNumCanisters:
  8162                           	opt callstack 27
  8163                           
  8164                           ;data.c: 55:     return numCans;
  8165                           
  8166                           ; BSR set to: 1
  8167                           ;incstack = 0
  8168  005560  C18C  F001         	movff	_numCans,?_getNumCanisters	;volatile
  8169  005564  C18D  F002         	movff	_numCans+1,?_getNumCanisters+1	;volatile
  8170  005568  0012               	return		;funcret
  8171  00556A                     __end_of_getNumCanisters:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function _getData *****************
  8175 ;; Defined at:
  8176 ;;		line 48 in file "data.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  id              2    6[COMRAM] int 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  9    6[COMRAM] struct canister
  8183 ;; Registers used:
  8184 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8190 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;Total ram usage:        9 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:    2
  8197 ;; This function calls:
  8198 ;;		___wmul
  8199 ;; This function is called by:
  8200 ;;		_detectCanister
  8201 ;;		_detectCanisterTurned
  8202 ;;		_buildEndScreen
  8203 ;;		_canisterDataScreen
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text34
  8208  0052CE                     __ptext34:
  8209                           	opt callstack 0
  8210  0052CE                     _getData:
  8211                           	opt callstack 25
  8212                           
  8213                           ;data.c: 48: canister getData(int id);data.c: 49: {;data.c: 50:     return cans[id - 1];
  8214                           
  8215                           ;incstack = 0
  8216  0052CE  C007  F001         	movff	getData@id,___wmul@multiplier
  8217  0052D2  C008  F002         	movff	getData@id+1,___wmul@multiplier+1
  8218  0052D6  0E00               	movlw	0
  8219  0052D8  6E04               	movwf	___wmul@multiplicand+1,c
  8220  0052DA  0E09               	movlw	9
  8221  0052DC  6E03               	movwf	___wmul@multiplicand,c
  8222  0052DE  EC4B  F02A         	call	___wmul	;wreg free
  8223  0052E2  0EF7               	movlw	low (_cans+65527)
  8224  0052E4  2401               	addwf	?___wmul,w,c
  8225  0052E6  6ED9               	movwf	fsr2l,c
  8226  0052E8  0E00               	movlw	high (_cans+65527)
  8227  0052EA  2002               	addwfc	?___wmul+1,w,c
  8228  0052EC  6EDA               	movwf	fsr2h,c
  8229  0052EE  EE00  F007         	lfsr	0,?_getData
  8230  0052F2  0E08               	movlw	8
  8231  0052F4                     u8001:
  8232  0052F4  CFDB FFEB          	movff	plusw2,plusw0
  8233  0052F8  06E8               	decf	wreg,f,c
  8234  0052FA  E2FC               	bc	u8001
  8235  0052FC  0012               	return		;funcret
  8236  0052FE                     __end_of_getData:
  8237                           	opt callstack 0
  8238                           
  8239 ;; *************** function _distFromCanister *****************
  8240 ;; Defined at:
  8241 ;;		line 88 in file "sensors.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  sensor          2   21[COMRAM] int 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;  i               1   29[COMRAM] unsigned char 
  8246 ;;  count           4   25[COMRAM] unsigned int [2]
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  2   21[COMRAM] int 
  8249 ;; Registers used:
  8250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8260 ;;Total ram usage:        9 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; Hardware stack levels required when called:    3
  8263 ;; This function calls:
  8264 ;;		_I2C_Master_Init
  8265 ;;		_I2C_Master_Read
  8266 ;;		_I2C_Master_Start
  8267 ;;		_I2C_Master_Stop
  8268 ;;		_I2C_Master_Write
  8269 ;; This function is called by:
  8270 ;;		_main
  8271 ;;		_detectCanister
  8272 ;;		_detectCanisterTurned
  8273 ;;		_dispSensors
  8274 ;;		_dispSensors2
  8275 ;;		_printState
  8276 ;;		_adjustCanister
  8277 ;;		_mapDist
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text35
  8282  003900                     __ptext35:
  8283                           	opt callstack 0
  8284  003900                     _distFromCanister:
  8285                           	opt callstack 25
  8286                           
  8287                           ;sensors.c: 88: int distFromCanister(int sensor);sensors.c: 89: {;sensors.c: 90:     uns
      +                          igned int count[2];;sensors.c: 91:     I2C_Master_Init(100000);
  8288                           
  8289                           ;incstack = 0
  8290  003900  0EA0               	movlw	160
  8291  003902  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  8292  003904  0E86               	movlw	134
  8293  003906  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  8294  003908  0E01               	movlw	1
  8295  00390A  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  8296  00390C  0E00               	movlw	0
  8297  00390E  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  8298  003910  EC28  F027         	call	_I2C_Master_Init	;wreg free
  8299                           
  8300                           ;sensors.c: 93:     if (sensor == 1)
  8301  003914  0416               	decf	distFromCanister@sensor,w,c
  8302  003916  1017               	iorwf	distFromCanister@sensor+1,w,c
  8303  003918  A4D8               	btfss	status,2,c
  8304  00391A  D011               	goto	l7939
  8305                           
  8306                           ;sensors.c: 94:     {;sensors.c: 95:         I2C_Master_Start();
  8307  00391C  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8308                           
  8309                           ;sensors.c: 96:         I2C_Master_Write(0b00010000);
  8310  003920  0E00               	movlw	0
  8311  003922  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8312  003924  0E10               	movlw	16
  8313  003926  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8314  003928  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8315                           
  8316                           ;sensors.c: 97:         I2C_Master_Write(1);
  8317  00392C  0E00               	movlw	0
  8318  00392E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8319  003930  0E01               	movlw	1
  8320  003932  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8321  003934  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8322                           
  8323                           ;sensors.c: 98:         I2C_Master_Stop();
  8324  003938  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8325                           
  8326                           ;sensors.c: 99:     }
  8327  00393C  D045               	goto	l7951
  8328  00393E                     l7939:
  8329  00393E  0E02               	movlw	2
  8330  003940  1816               	xorwf	distFromCanister@sensor,w,c
  8331  003942  1017               	iorwf	distFromCanister@sensor+1,w,c
  8332  003944  A4D8               	btfss	status,2,c
  8333  003946  D011               	goto	l7943
  8334                           
  8335                           ;sensors.c: 101:     {;sensors.c: 102:         I2C_Master_Start();
  8336  003948  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8337                           
  8338                           ;sensors.c: 103:         I2C_Master_Write(0b00010000);
  8339  00394C  0E00               	movlw	0
  8340  00394E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8341  003950  0E10               	movlw	16
  8342  003952  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8343  003954  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8344                           
  8345                           ;sensors.c: 104:         I2C_Master_Write(2);
  8346  003958  0E00               	movlw	0
  8347  00395A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8348  00395C  0E02               	movlw	2
  8349  00395E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8350  003960  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8351                           
  8352                           ;sensors.c: 105:         I2C_Master_Stop();
  8353  003964  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8354                           
  8355                           ;sensors.c: 106:     }
  8356  003968  D02F               	goto	l7951
  8357  00396A                     l7943:
  8358  00396A  0E07               	movlw	7
  8359  00396C  1816               	xorwf	distFromCanister@sensor,w,c
  8360  00396E  1017               	iorwf	distFromCanister@sensor+1,w,c
  8361  003970  A4D8               	btfss	status,2,c
  8362  003972  D011               	goto	l7947
  8363                           
  8364                           ;sensors.c: 108:     {;sensors.c: 109:         I2C_Master_Start();
  8365  003974  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8366                           
  8367                           ;sensors.c: 110:         I2C_Master_Write(0b00010000);
  8368  003978  0E00               	movlw	0
  8369  00397A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8370  00397C  0E10               	movlw	16
  8371  00397E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8372  003980  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8373                           
  8374                           ;sensors.c: 111:         I2C_Master_Write(7);
  8375  003984  0E00               	movlw	0
  8376  003986  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8377  003988  0E07               	movlw	7
  8378  00398A  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8379  00398C  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8380                           
  8381                           ;sensors.c: 112:         I2C_Master_Stop();
  8382  003990  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8383                           
  8384                           ;sensors.c: 113:     }
  8385  003994  D019               	goto	l7951
  8386  003996                     l7947:
  8387  003996  0E08               	movlw	8
  8388  003998  1816               	xorwf	distFromCanister@sensor,w,c
  8389  00399A  1017               	iorwf	distFromCanister@sensor+1,w,c
  8390  00399C  A4D8               	btfss	status,2,c
  8391  00399E  D011               	goto	l717
  8392                           
  8393                           ;sensors.c: 115:     {;sensors.c: 116:         I2C_Master_Start();
  8394  0039A0  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8395                           
  8396                           ;sensors.c: 117:         I2C_Master_Write(0b00010000);
  8397  0039A4  0E00               	movlw	0
  8398  0039A6  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8399  0039A8  0E10               	movlw	16
  8400  0039AA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8401  0039AC  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8402                           
  8403                           ;sensors.c: 118:         I2C_Master_Write(8);
  8404  0039B0  0E00               	movlw	0
  8405  0039B2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8406  0039B4  0E08               	movlw	8
  8407  0039B6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8408  0039B8  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8409                           
  8410                           ;sensors.c: 119:         I2C_Master_Stop();
  8411  0039BC  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8412                           
  8413                           ;sensors.c: 120:     }
  8414  0039C0  D003               	goto	l7951
  8415  0039C2                     l717:
  8416                           
  8417                           ;sensors.c: 122:     {;sensors.c: 123:         return -1;
  8418  0039C2  6816               	setf	?_distFromCanister,c
  8419  0039C4  6817               	setf	?_distFromCanister+1,c
  8420  0039C6  0012               	return	
  8421  0039C8                     l7951:
  8422                           
  8423                           ;sensors.c: 127:     I2C_Master_Start();
  8424  0039C8  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8425                           
  8426                           ;sensors.c: 128:     I2C_Master_Write(0b00010001);
  8427  0039CC  0E00               	movlw	0
  8428  0039CE  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8429  0039D0  0E11               	movlw	17
  8430  0039D2  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8431  0039D4  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8432                           
  8433                           ;sensors.c: 130:     for (unsigned char i = 0; i < 1; i++)
  8434  0039D8  0E00               	movlw	0
  8435  0039DA  6E1E               	movwf	distFromCanister@i,c
  8436  0039DC                     l7959:
  8437                           
  8438                           ;sensors.c: 131:     {;sensors.c: 132:         count[i] = I2C_Master_Read(0);
  8439  0039DC  0E00               	movlw	0
  8440  0039DE  EC5E  F02A         	call	_I2C_Master_Read
  8441  0039E2  6E18               	movwf	??_distFromCanister& (0+255),c
  8442  0039E4  6A19               	clrf	(??_distFromCanister+1)& (0+255),c
  8443  0039E6  501E               	movf	distFromCanister@i,w,c
  8444  0039E8  0D02               	mullw	2
  8445  0039EA  0E1A               	movlw	low distFromCanister@count
  8446  0039EC  24F3               	addwf	prodl,w,c
  8447  0039EE  6ED9               	movwf	fsr2l,c
  8448  0039F0  0E00               	movlw	high distFromCanister@count
  8449  0039F2  20F4               	addwfc	prodh,w,c
  8450  0039F4  6EDA               	movwf	fsr2h,c
  8451  0039F6  C018  FFDE         	movff	??_distFromCanister,postinc2
  8452  0039FA  C019  FFDD         	movff	??_distFromCanister+1,postdec2
  8453                           
  8454                           ;sensors.c: 133:     }
  8455  0039FE  2A1E               	incf	distFromCanister@i,f,c
  8456  003A00  501E               	movf	distFromCanister@i,w,c
  8457  003A02  B4D8               	btfsc	status,2,c
  8458  003A04  D7EB               	goto	l7959
  8459                           
  8460                           ;sensors.c: 134:     count[1] = I2C_Master_Read(1);
  8461  003A06  0E01               	movlw	1
  8462  003A08  EC5E  F02A         	call	_I2C_Master_Read
  8463  003A0C  6E18               	movwf	??_distFromCanister& (0+255),c
  8464  003A0E  5018               	movf	??_distFromCanister,w,c
  8465  003A10  6E1C               	movwf	distFromCanister@count+2,c
  8466  003A12  6A1D               	clrf	distFromCanister@count+3,c
  8467                           
  8468                           ;sensors.c: 135:     I2C_Master_Stop();
  8469  003A14  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8470                           
  8471                           ;sensors.c: 137:     return (count[0])|(count[1]<<8);
  8472  003A18  501C               	movf	distFromCanister@count+2,w,c
  8473  003A1A  6E19               	movwf	(??_distFromCanister+1)& (0+255),c
  8474  003A1C  6A18               	clrf	??_distFromCanister& (0+255),c
  8475  003A1E  501A               	movf	distFromCanister@count,w,c
  8476  003A20  1018               	iorwf	??_distFromCanister,w,c
  8477  003A22  6E16               	movwf	?_distFromCanister,c
  8478  003A24  501B               	movf	distFromCanister@count+1,w,c
  8479  003A26  1019               	iorwf	??_distFromCanister+1,w,c
  8480  003A28  6E17               	movwf	?_distFromCanister+1,c
  8481  003A2A  0012               	return		;funcret
  8482  003A2C                     __end_of_distFromCanister:
  8483                           	opt callstack 0
  8484                           
  8485 ;; *************** function _avoidCan *****************
  8486 ;; Defined at:
  8487 ;;		line 135 in file "BallDispensingRobot.X/motion.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;		None
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;		None
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      void 
  8494 ;; Registers used:
  8495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;Total ram usage:        2 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    4
  8508 ;; This function calls:
  8509 ;;		_moveRobot
  8510 ;;		_readFrontSensor
  8511 ;; This function is called by:
  8512 ;;		_testDrive
  8513 ;;		_testDrive2
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text36
  8518  00508E                     __ptext36:
  8519                           	opt callstack 0
  8520  00508E                     _avoidCan:
  8521                           	opt callstack 25
  8522                           
  8523                           ;BallDispensingRobot.X/motion.c: 137:     moveRobot(4);
  8524                           
  8525                           ;incstack = 0
  8526  00508E  0E00               	movlw	0
  8527  005090  6E02               	movwf	moveRobot@move+1,c
  8528  005092  0E04               	movlw	4
  8529  005094  6E01               	movwf	moveRobot@move,c
  8530  005096  EC6C  F024         	call	_moveRobot	;wreg free
  8531                           
  8532                           ;BallDispensingRobot.X/motion.c: 138:     _delay((unsigned long)((500)*(10000000/4000.0)
      +                          ));
  8533  00509A  0E07               	movlw	7
  8534  00509C  6E20               	movwf	(??_avoidCan+1)& (0+255),c
  8535  00509E  0E58               	movlw	88
  8536  0050A0  6E1F               	movwf	??_avoidCan& (0+255),c
  8537  0050A2  0E5A               	movlw	90
  8538  0050A4                     u9807:
  8539  0050A4  2EE8               	decfsz	wreg,f,c
  8540  0050A6  D7FE               	bra	u9807
  8541  0050A8  2E1F               	decfsz	??_avoidCan& (0+255),f,c
  8542  0050AA  D7FC               	bra	u9807
  8543  0050AC  2E20               	decfsz	(??_avoidCan+1)& (0+255),f,c
  8544  0050AE  D7FA               	bra	u9807
  8545                           
  8546                           ;BallDispensingRobot.X/motion.c: 139:     while (readFrontSensor())
  8547  0050B0  D006               	goto	l8631
  8548  0050B2                     l8629:
  8549                           
  8550                           ;BallDispensingRobot.X/motion.c: 140:         moveRobot(4);
  8551  0050B2  0E00               	movlw	0
  8552  0050B4  6E02               	movwf	moveRobot@move+1,c
  8553  0050B6  0E04               	movlw	4
  8554  0050B8  6E01               	movwf	moveRobot@move,c
  8555  0050BA  EC6C  F024         	call	_moveRobot	;wreg free
  8556  0050BE                     l8631:
  8557                           
  8558                           ;BallDispensingRobot.X/motion.c: 139:     while (readFrontSensor())
  8559  0050BE  EC18  F023         	call	_readFrontSensor	;wreg free
  8560  0050C2  5016               	movf	?_readFrontSensor,w,c
  8561  0050C4  1017               	iorwf	?_readFrontSensor+1,w,c
  8562  0050C6  A4D8               	btfss	status,2,c
  8563  0050C8  D7F4               	goto	l8629
  8564                           
  8565                           ;BallDispensingRobot.X/motion.c: 141:     moveRobot(0);
  8566  0050CA  0E00               	movlw	0
  8567  0050CC  6E02               	movwf	moveRobot@move+1,c
  8568  0050CE  0E00               	movlw	0
  8569  0050D0  6E01               	movwf	moveRobot@move,c
  8570  0050D2  EC6C  F024         	call	_moveRobot	;wreg free
  8571  0050D6  0012               	return		;funcret
  8572  0050D8                     __end_of_avoidCan:
  8573                           	opt callstack 0
  8574                           
  8575 ;; *************** function _readFrontSensor *****************
  8576 ;; Defined at:
  8577 ;;		line 193 in file "sensors.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  i               1   29[COMRAM] unsigned char 
  8582 ;;  count           4   25[COMRAM] unsigned int [2]
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  2   21[COMRAM] int 
  8585 ;; Registers used:
  8586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;Total ram usage:        9 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:    3
  8599 ;; This function calls:
  8600 ;;		_I2C_Master_Init
  8601 ;;		_I2C_Master_Read
  8602 ;;		_I2C_Master_Start
  8603 ;;		_I2C_Master_Stop
  8604 ;;		_I2C_Master_Write
  8605 ;; This function is called by:
  8606 ;;		_testDrive
  8607 ;;		_testDrive2
  8608 ;;		_avoidCan
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text37
  8613  004630                     __ptext37:
  8614                           	opt callstack 0
  8615  004630                     _readFrontSensor:
  8616                           	opt callstack 26
  8617                           
  8618                           ;sensors.c: 195:     unsigned int count[2];;sensors.c: 196:     I2C_Master_Init(100000);
  8619                           
  8620                           ;incstack = 0
  8621  004630  0EA0               	movlw	160
  8622  004632  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  8623  004634  0E86               	movlw	134
  8624  004636  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  8625  004638  0E01               	movlw	1
  8626  00463A  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  8627  00463C  0E00               	movlw	0
  8628  00463E  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  8629  004640  EC28  F027         	call	_I2C_Master_Init	;wreg free
  8630                           
  8631                           ;sensors.c: 200:     I2C_Master_Start();
  8632  004644  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8633                           
  8634                           ;sensors.c: 201:     I2C_Master_Write(0b00010000);
  8635  004648  0E00               	movlw	0
  8636  00464A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8637  00464C  0E10               	movlw	16
  8638  00464E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8639  004650  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8640                           
  8641                           ;sensors.c: 202:     I2C_Master_Write(5);
  8642  004654  0E00               	movlw	0
  8643  004656  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8644  004658  0E05               	movlw	5
  8645  00465A  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8646  00465C  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8647                           
  8648                           ;sensors.c: 203:     I2C_Master_Stop();
  8649  004660  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8650                           
  8651                           ;sensors.c: 206:     I2C_Master_Start();
  8652  004664  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  8653                           
  8654                           ;sensors.c: 207:     I2C_Master_Write(0b00010001);
  8655  004668  0E00               	movlw	0
  8656  00466A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  8657  00466C  0E11               	movlw	17
  8658  00466E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  8659  004670  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  8660                           
  8661                           ;sensors.c: 209:     for (unsigned char i = 0; i < 1; i++)
  8662  004674  0E00               	movlw	0
  8663  004676  6E1E               	movwf	readFrontSensor@i,c
  8664  004678                     l8073:
  8665                           
  8666                           ;sensors.c: 210:     {;sensors.c: 211:         count[i] = I2C_Master_Read(0);
  8667  004678  0E00               	movlw	0
  8668  00467A  EC5E  F02A         	call	_I2C_Master_Read
  8669  00467E  6E18               	movwf	??_readFrontSensor& (0+255),c
  8670  004680  6A19               	clrf	(??_readFrontSensor+1)& (0+255),c
  8671  004682  501E               	movf	readFrontSensor@i,w,c
  8672  004684  0D02               	mullw	2
  8673  004686  0E1A               	movlw	low readFrontSensor@count
  8674  004688  24F3               	addwf	prodl,w,c
  8675  00468A  6ED9               	movwf	fsr2l,c
  8676  00468C  0E00               	movlw	high readFrontSensor@count
  8677  00468E  20F4               	addwfc	prodh,w,c
  8678  004690  6EDA               	movwf	fsr2h,c
  8679  004692  C018  FFDE         	movff	??_readFrontSensor,postinc2
  8680  004696  C019  FFDD         	movff	??_readFrontSensor+1,postdec2
  8681                           
  8682                           ;sensors.c: 212:     }
  8683  00469A  2A1E               	incf	readFrontSensor@i,f,c
  8684  00469C  501E               	movf	readFrontSensor@i,w,c
  8685  00469E  B4D8               	btfsc	status,2,c
  8686  0046A0  D7EB               	goto	l8073
  8687                           
  8688                           ;sensors.c: 213:     count[1] = I2C_Master_Read(1);
  8689  0046A2  0E01               	movlw	1
  8690  0046A4  EC5E  F02A         	call	_I2C_Master_Read
  8691  0046A8  6E18               	movwf	??_readFrontSensor& (0+255),c
  8692  0046AA  5018               	movf	??_readFrontSensor,w,c
  8693  0046AC  6E1C               	movwf	readFrontSensor@count+2,c
  8694  0046AE  6A1D               	clrf	readFrontSensor@count+3,c
  8695                           
  8696                           ;sensors.c: 214:     I2C_Master_Stop();
  8697  0046B0  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  8698                           
  8699                           ;sensors.c: 216:     return (count[0])|(count[1]<<8);
  8700  0046B4  501C               	movf	readFrontSensor@count+2,w,c
  8701  0046B6  6E19               	movwf	(??_readFrontSensor+1)& (0+255),c
  8702  0046B8  6A18               	clrf	??_readFrontSensor& (0+255),c
  8703  0046BA  501A               	movf	readFrontSensor@count,w,c
  8704  0046BC  1018               	iorwf	??_readFrontSensor,w,c
  8705  0046BE  6E16               	movwf	?_readFrontSensor,c
  8706  0046C0  501B               	movf	readFrontSensor@count+1,w,c
  8707  0046C2  1019               	iorwf	??_readFrontSensor+1,w,c
  8708  0046C4  6E17               	movwf	?_readFrontSensor+1,c
  8709  0046C6  0012               	return		;funcret
  8710  0046C8                     __end_of_readFrontSensor:
  8711                           	opt callstack 0
  8712                           
  8713 ;; *************** function _moveRobot *****************
  8714 ;; Defined at:
  8715 ;;		line 11 in file "BallDispensingRobot.X/motion.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  move            2    0[COMRAM] int 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;		None
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  1    wreg      void 
  8722 ;; Registers used:
  8723 ;;		wreg, status,2, status,0
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;Total ram usage:        4 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:    1
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;;		_detectCanister
  8741 ;;		_detectCanisterTurned
  8742 ;;		_testDrive
  8743 ;;		_testDrive2
  8744 ;;		_testTurn
  8745 ;;		_setForward
  8746 ;;		_setBackward
  8747 ;;		_setRight
  8748 ;;		_avoidCan
  8749 ;;		_adjustCanister
  8750 ;;		_testShaftEncoder
  8751 ;;		_depositBall
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text38
  8756  0048D8                     __ptext38:
  8757                           	opt callstack 0
  8758  0048D8                     _moveRobot:
  8759                           	opt callstack 28
  8760                           
  8761                           ;BallDispensingRobot.X/motion.c: 11: void moveRobot(int move);BallDispensingRobot.X/moti
      +                          on.c: 12: {;BallDispensingRobot.X/motion.c: 14:     TRISCbits.RC0 = 0;
  8762                           
  8763                           ;incstack = 0
  8764  0048D8  9094               	bcf	3988,0,c	;volatile
  8765                           
  8766                           ;BallDispensingRobot.X/motion.c: 15:     TRISCbits.RC1 = 0;
  8767  0048DA  9294               	bcf	3988,1,c	;volatile
  8768                           
  8769                           ;BallDispensingRobot.X/motion.c: 16:     TRISCbits.RC2 = 0;
  8770  0048DC  9494               	bcf	3988,2,c	;volatile
  8771                           
  8772                           ;BallDispensingRobot.X/motion.c: 19:     switch(move)
  8773  0048DE  D01C               	goto	l7813
  8774  0048E0                     l629:
  8775                           
  8776                           ;BallDispensingRobot.X/motion.c: 22:             LATCbits.LATC0 = 0;
  8777  0048E0  908B               	bcf	3979,0,c	;volatile
  8778                           
  8779                           ;BallDispensingRobot.X/motion.c: 23:             LATCbits.LATC1 = 0;
  8780  0048E2  928B               	bcf	3979,1,c	;volatile
  8781                           
  8782                           ;BallDispensingRobot.X/motion.c: 24:             LATCbits.LATC2 = 0;
  8783  0048E4  948B               	bcf	3979,2,c	;volatile
  8784                           
  8785                           ;BallDispensingRobot.X/motion.c: 25:             break;
  8786  0048E6  0012               	return	
  8787  0048E8                     l631:
  8788                           
  8789                           ;BallDispensingRobot.X/motion.c: 27:             LATCbits.LATC0 = 0;
  8790  0048E8  908B               	bcf	3979,0,c	;volatile
  8791                           
  8792                           ;BallDispensingRobot.X/motion.c: 28:             LATCbits.LATC1 = 0;
  8793  0048EA  928B               	bcf	3979,1,c	;volatile
  8794                           
  8795                           ;BallDispensingRobot.X/motion.c: 29:             LATCbits.LATC2 = 1;
  8796  0048EC  848B               	bsf	3979,2,c	;volatile
  8797                           
  8798                           ;BallDispensingRobot.X/motion.c: 30:             break;
  8799  0048EE  0012               	return	
  8800  0048F0                     l632:
  8801                           
  8802                           ;BallDispensingRobot.X/motion.c: 32:             LATCbits.LATC0 = 0;
  8803  0048F0  908B               	bcf	3979,0,c	;volatile
  8804                           
  8805                           ;BallDispensingRobot.X/motion.c: 33:             LATCbits.LATC1 = 1;
  8806  0048F2  828B               	bsf	3979,1,c	;volatile
  8807                           
  8808                           ;BallDispensingRobot.X/motion.c: 34:             LATCbits.LATC2 = 0;
  8809  0048F4  948B               	bcf	3979,2,c	;volatile
  8810                           
  8811                           ;BallDispensingRobot.X/motion.c: 35:             break;
  8812  0048F6  0012               	return	
  8813  0048F8                     l633:
  8814                           
  8815                           ;BallDispensingRobot.X/motion.c: 37:             LATCbits.LATC0 = 0;
  8816  0048F8  908B               	bcf	3979,0,c	;volatile
  8817                           
  8818                           ;BallDispensingRobot.X/motion.c: 38:             LATCbits.LATC1 = 1;
  8819  0048FA  828B               	bsf	3979,1,c	;volatile
  8820                           
  8821                           ;BallDispensingRobot.X/motion.c: 39:             LATCbits.LATC2 = 1;
  8822  0048FC  848B               	bsf	3979,2,c	;volatile
  8823                           
  8824                           ;BallDispensingRobot.X/motion.c: 40:             break;
  8825  0048FE  0012               	return	
  8826  004900                     l634:
  8827                           
  8828                           ;BallDispensingRobot.X/motion.c: 42:             LATCbits.LATC0 = 1;
  8829  004900  808B               	bsf	3979,0,c	;volatile
  8830                           
  8831                           ;BallDispensingRobot.X/motion.c: 43:             LATCbits.LATC1 = 0;
  8832  004902  928B               	bcf	3979,1,c	;volatile
  8833                           
  8834                           ;BallDispensingRobot.X/motion.c: 44:             LATCbits.LATC2 = 0;
  8835  004904  948B               	bcf	3979,2,c	;volatile
  8836                           
  8837                           ;BallDispensingRobot.X/motion.c: 45:             break;
  8838  004906  0012               	return	
  8839  004908                     l635:
  8840                           
  8841                           ;BallDispensingRobot.X/motion.c: 47:             LATCbits.LATC0 = 1;
  8842  004908  808B               	bsf	3979,0,c	;volatile
  8843                           
  8844                           ;BallDispensingRobot.X/motion.c: 48:             LATCbits.LATC1 = 0;
  8845  00490A  928B               	bcf	3979,1,c	;volatile
  8846                           
  8847                           ;BallDispensingRobot.X/motion.c: 49:             LATCbits.LATC2 = 1;
  8848  00490C  848B               	bsf	3979,2,c	;volatile
  8849                           
  8850                           ;BallDispensingRobot.X/motion.c: 50:             break;
  8851  00490E  0012               	return	
  8852  004910                     l636:
  8853                           
  8854                           ;BallDispensingRobot.X/motion.c: 52:             LATCbits.LATC0 = 1;
  8855  004910  808B               	bsf	3979,0,c	;volatile
  8856                           
  8857                           ;BallDispensingRobot.X/motion.c: 53:             LATCbits.LATC1 = 1;
  8858  004912  828B               	bsf	3979,1,c	;volatile
  8859                           
  8860                           ;BallDispensingRobot.X/motion.c: 54:             LATCbits.LATC2 = 0;
  8861  004914  948B               	bcf	3979,2,c	;volatile
  8862                           
  8863                           ;BallDispensingRobot.X/motion.c: 55:     }
  8864  004916  0012               	return	
  8865  004918                     l7813:
  8866  004918  C001  F003         	movff	moveRobot@move,??_moveRobot
  8867  00491C  C002  F004         	movff	moveRobot@move+1,??_moveRobot+1
  8868                           
  8869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8870                           ; Switch size 1, requested type "simple"
  8871                           ; Number of cases is 1, Range of values is 0 to 0
  8872                           ; switch strategies available:
  8873                           ; Name         Instructions Cycles
  8874                           ; simple_byte            4     3 (average)
  8875                           ;	Chosen strategy is simple_byte
  8876  004920  5004               	movf	??_moveRobot+1,w,c
  8877  004922  0A00               	xorlw	0	; case 0
  8878  004924  A4D8               	btfss	status,2,c
  8879  004926  0012               	return	
  8880                           
  8881                           ; Switch size 1, requested type "simple"
  8882                           ; Number of cases is 7, Range of values is 0 to 6
  8883                           ; switch strategies available:
  8884                           ; Name         Instructions Cycles
  8885                           ; simple_byte           22    12 (average)
  8886                           ;	Chosen strategy is simple_byte
  8887  004928  5003               	movf	??_moveRobot,w,c
  8888  00492A  0A00               	xorlw	0	; case 0
  8889  00492C  B4D8               	btfsc	status,2,c
  8890  00492E  D7D8               	goto	l629
  8891  004930  0A01               	xorlw	1	; case 1
  8892  004932  B4D8               	btfsc	status,2,c
  8893  004934  D7D9               	goto	l631
  8894  004936  0A03               	xorlw	3	; case 2
  8895  004938  B4D8               	btfsc	status,2,c
  8896  00493A  D7DA               	goto	l632
  8897  00493C  0A01               	xorlw	1	; case 3
  8898  00493E  B4D8               	btfsc	status,2,c
  8899  004940  D7DB               	goto	l633
  8900  004942  0A07               	xorlw	7	; case 4
  8901  004944  B4D8               	btfsc	status,2,c
  8902  004946  D7DC               	goto	l634
  8903  004948  0A01               	xorlw	1	; case 5
  8904  00494A  B4D8               	btfsc	status,2,c
  8905  00494C  D7DD               	goto	l635
  8906  00494E  0A03               	xorlw	3	; case 6
  8907  004950  A4D8               	btfss	status,2,c
  8908  004952  0012               	return	
  8909  004954  D7DD               	goto	l636
  8910  004956                     __end_of_moveRobot:
  8911                           	opt callstack 0
  8912                           
  8913 ;; *************** function _initStartScreen *****************
  8914 ;; Defined at:
  8915 ;;		line 14 in file "menu.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  i               1  127[BANK0 ] unsigned char 
  8920 ;;  time            7  120[BANK0 ] unsigned char [7]
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1    wreg      void 
  8923 ;; Registers used:
  8924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;Total ram usage:       10 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:   12
  8937 ;; This function calls:
  8938 ;;		_I2C_Master_Init
  8939 ;;		_I2C_Master_Read
  8940 ;;		_I2C_Master_Start
  8941 ;;		_I2C_Master_Stop
  8942 ;;		_I2C_Master_Write
  8943 ;;		_initLCD
  8944 ;;		_lcdInst
  8945 ;;		_printf
  8946 ;;		_readRemoteStart
  8947 ;; This function is called by:
  8948 ;;		_main
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           	psect	text39
  8953  00328E                     __ptext39:
  8954                           	opt callstack 0
  8955  00328E                     _initStartScreen:
  8956                           	opt callstack 18
  8957                           
  8958                           ;menu.c: 19:     LATD = 0x00;
  8959                           
  8960                           ;incstack = 0
  8961  00328E  0E00               	movlw	0
  8962  003290  6E8C               	movwf	3980,c	;volatile
  8963                           
  8964                           ;menu.c: 20:     TRISD = 0x00;
  8965  003292  0E00               	movlw	0
  8966  003294  6E95               	movwf	3989,c	;volatile
  8967                           
  8968                           ;menu.c: 23:     ADCON1 = 0b00001111;
  8969  003296  0E0F               	movlw	15
  8970  003298  6EC1               	movwf	4033,c	;volatile
  8971                           
  8972                           ;menu.c: 26:     TRISBbits.RB7 = 1;
  8973  00329A  8E93               	bsf	3987,7,c	;volatile
  8974                           
  8975                           ;menu.c: 27:     TRISBbits.RB6 = 1;
  8976  00329C  8C93               	bsf	3987,6,c	;volatile
  8977                           
  8978                           ;menu.c: 28:     TRISBbits.RB5 = 1;
  8979  00329E  8A93               	bsf	3987,5,c	;volatile
  8980                           
  8981                           ;menu.c: 29:     TRISBbits.RB4 = 1;
  8982  0032A0  8893               	bsf	3987,4,c	;volatile
  8983                           
  8984                           ;menu.c: 32:     INTCONbits.GIE = 1;
  8985  0032A2  8EF2               	bsf	4082,7,c	;volatile
  8986                           
  8987                           ;menu.c: 33:     INTCON3bits.INT1E = 1;
  8988  0032A4  86F0               	bsf	4080,3,c	;volatile
  8989                           
  8990                           ;menu.c: 34:     (INTCONbits.GIE = 1);
  8991  0032A6  8EF2               	bsf	4082,7,c	;volatile
  8992                           
  8993                           ;menu.c: 37:     I2C_Master_Init(100000);
  8994  0032A8  0EA0               	movlw	160
  8995  0032AA  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  8996  0032AC  0E86               	movlw	134
  8997  0032AE  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  8998  0032B0  0E01               	movlw	1
  8999  0032B2  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  9000  0032B4  0E00               	movlw	0
  9001  0032B6  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  9002  0032B8  EC28  F027         	call	_I2C_Master_Init	;wreg free
  9003                           
  9004                           ;menu.c: 38:     unsigned char time[7];;menu.c: 40:     initLCD();
  9005  0032BC  EC01  F026         	call	_initLCD	;wreg free
  9006  0032C0                     l8763:
  9007                           
  9008                           ;menu.c: 42:     {;menu.c: 45:         I2C_Master_Start();
  9009  0032C0  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  9010                           
  9011                           ;menu.c: 46:         I2C_Master_Write(0b11010000);
  9012  0032C4  0E00               	movlw	0
  9013  0032C6  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  9014  0032C8  0ED0               	movlw	208
  9015  0032CA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  9016  0032CC  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  9017                           
  9018                           ;menu.c: 47:         I2C_Master_Write(0x00);
  9019  0032D0  0E00               	movlw	0
  9020  0032D2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  9021  0032D4  0E00               	movlw	0
  9022  0032D6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  9023  0032D8  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  9024                           
  9025                           ;menu.c: 48:         I2C_Master_Stop();
  9026  0032DC  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  9027                           
  9028                           ;menu.c: 51:         I2C_Master_Start();
  9029  0032E0  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  9030                           
  9031                           ;menu.c: 52:         I2C_Master_Write(0b11010001);
  9032  0032E4  0E00               	movlw	0
  9033  0032E6  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  9034  0032E8  0ED1               	movlw	209
  9035  0032EA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  9036  0032EC  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  9037                           
  9038                           ;menu.c: 53:         for(unsigned char i = 0; i < 6; i++){
  9039  0032F0  0E00               	movlw	0
  9040  0032F2  0100               	movlb	0	; () banked
  9041  0032F4  6FFF               	movwf	initStartScreen@i& (0+255),b
  9042  0032F6                     l8779:
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;menu.c: 54:             time[i] = I2C_Master_Read(0);
  9046  0032F6  0EF8               	movlw	low initStartScreen@time
  9047  0032F8  25FF               	addwf	initStartScreen@i& (0+255),w,b
  9048  0032FA  6ED9               	movwf	fsr2l,c
  9049  0032FC  6ADA               	clrf	fsr2h,c
  9050  0032FE  0E00               	movlw	high initStartScreen@time
  9051  003300  22DA               	addwfc	fsr2h,f,c
  9052  003302  0E00               	movlw	0
  9053  003304  EC5E  F02A         	call	_I2C_Master_Read
  9054  003308  6EDF               	movwf	indf2,c
  9055                           
  9056                           ;menu.c: 55:         }
  9057  00330A  0100               	movlb	0	; () banked
  9058  00330C  2BFF               	incf	initStartScreen@i& (0+255),f,b
  9059                           
  9060                           ; BSR set to: 0
  9061  00330E  0E05               	movlw	5
  9062  003310  65FF               	cpfsgt	initStartScreen@i& (0+255),b
  9063  003312  D7F1               	goto	l8779
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;menu.c: 56:         time[6] = I2C_Master_Read(1);
  9067  003314  0E01               	movlw	1
  9068  003316  EC5E  F02A         	call	_I2C_Master_Read
  9069  00331A  0100               	movlb	0	; () banked
  9070  00331C  6FFE               	movwf	(initStartScreen@time+6)& (0+255),b
  9071                           
  9072                           ;menu.c: 57:         I2C_Master_Stop();
  9073  00331E  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  9074                           
  9075                           ;menu.c: 60:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  9076  003322  0E80               	movlw	128
  9077  003324  EC9F  F02A         	call	_lcdInst
  9078  003328  0E07               	movlw	7
  9079  00332A  0100               	movlb	0	; () banked
  9080  00332C  6FF6               	movwf	??_initStartScreen& (0+255),b
  9081  00332E  0E7D               	movlw	125
  9082  003330                     u9817:
  9083  003330  2EE8               	decfsz	wreg,f,c
  9084  003332  D7FE               	bra	u9817
  9085  003334  2FF6               	decfsz	??_initStartScreen& (0+255),f,b
  9086  003336  D7FC               	bra	u9817
  9087                           
  9088                           ;menu.c: 61:         printf("Press Any Key");
  9089  003338  0EF1               	movlw	low STR_27
  9090  00333A  0100               	movlb	0	; () banked
  9091  00333C  6FEA               	movwf	printf@fmt& (0+255),b
  9092  00333E  0EFE               	movlw	high STR_27
  9093  003340  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  9094  003342  EC37  F02A         	call	_printf	;wreg free
  9095  003346  0EC0               	movlw	192
  9096  003348  EC9F  F02A         	call	_lcdInst
  9097                           
  9098                           ;menu.c: 63:         printf("To Begin");
  9099  00334C  0EC5               	movlw	low STR_28
  9100  00334E  0100               	movlb	0	; () banked
  9101  003350  6FEA               	movwf	printf@fmt& (0+255),b
  9102  003352  0EFF               	movlw	high STR_28
  9103  003354  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  9104  003356  EC37  F02A         	call	_printf	;wreg free
  9105  00335A  0E90               	movlw	144
  9106  00335C  EC9F  F02A         	call	_lcdInst
  9107                           
  9108                           ;menu.c: 66:         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  9109  003360  0EA9               	movlw	low STR_29
  9110  003362  0100               	movlb	0	; () banked
  9111  003364  6FEA               	movwf	printf@fmt& (0+255),b
  9112  003366  0EFE               	movlw	high STR_29
  9113  003368  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  9114  00336A  C0FE  F0EC         	movff	initStartScreen@time+6,?_printf+2
  9115  00336E  6BED               	clrf	(?_printf+3)& (0+255),b
  9116  003370  C0FD  F0EE         	movff	initStartScreen@time+5,?_printf+4
  9117  003374  6BEF               	clrf	(?_printf+5)& (0+255),b
  9118  003376  C0FC  F0F0         	movff	initStartScreen@time+4,?_printf+6
  9119  00337A  6BF1               	clrf	(?_printf+7)& (0+255),b
  9120  00337C  EC37  F02A         	call	_printf	;wreg free
  9121  003380  0ED0               	movlw	208
  9122  003382  EC9F  F02A         	call	_lcdInst
  9123                           
  9124                           ;menu.c: 68:         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  9125  003386  0EB8               	movlw	low STR_30
  9126  003388  0100               	movlb	0	; () banked
  9127  00338A  6FEA               	movwf	printf@fmt& (0+255),b
  9128  00338C  0EFE               	movlw	high STR_30
  9129  00338E  6FEB               	movwf	(printf@fmt+1)& (0+255),b
  9130  003390  C0FA  F0EC         	movff	initStartScreen@time+2,?_printf+2
  9131  003394  6BED               	clrf	(?_printf+3)& (0+255),b
  9132  003396  C0F9  F0EE         	movff	initStartScreen@time+1,?_printf+4
  9133  00339A  6BEF               	clrf	(?_printf+5)& (0+255),b
  9134  00339C  C0F8  F0F0         	movff	initStartScreen@time,?_printf+6
  9135  0033A0  6BF1               	clrf	(?_printf+7)& (0+255),b
  9136  0033A2  EC37  F02A         	call	_printf	;wreg free
  9137                           
  9138                           ;menu.c: 70:         _delay((unsigned long)((500)*(10000000/4000.0)));
  9139  0033A6  0E07               	movlw	7
  9140  0033A8  0100               	movlb	0	; () banked
  9141  0033AA  6FF7               	movwf	(??_initStartScreen+1)& (0+255),b
  9142  0033AC  0E58               	movlw	88
  9143  0033AE  6FF6               	movwf	??_initStartScreen& (0+255),b
  9144  0033B0  0E59               	movlw	89
  9145  0033B2                     u9827:
  9146  0033B2  2EE8               	decfsz	wreg,f,c
  9147  0033B4  D7FE               	bra	u9827
  9148  0033B6  2FF6               	decfsz	??_initStartScreen& (0+255),f,b
  9149  0033B8  D7FC               	bra	u9827
  9150  0033BA  2FF7               	decfsz	(??_initStartScreen+1)& (0+255),f,b
  9151  0033BC  D7FA               	bra	u9827
  9152  0033BE  D000               	nop2	
  9153                           
  9154                           ;menu.c: 99:         if (key_pressed || (readRemoteStart() == 1))
  9155  0033C0  0101               	movlb	1	; () banked
  9156  0033C2  5192               	movf	_key_pressed& (0+255),w,b	;volatile
  9157  0033C4  A4D8               	btfss	status,2,c
  9158  0033C6  D006               	goto	u8990
  9159                           
  9160                           ; BSR set to: 1
  9161  0033C8  ECAA  F020         	call	_readRemoteStart	;wreg free
  9162  0033CC  0416               	decf	?_readRemoteStart,w,c
  9163  0033CE  1017               	iorwf	?_readRemoteStart+1,w,c
  9164  0033D0  A4D8               	btfss	status,2,c
  9165  0033D2  D776               	goto	l8763
  9166  0033D4                     u8990:
  9167                           
  9168                           ;menu.c: 100:         {;menu.c: 101:             key_pressed = 0;
  9169  0033D4  0E00               	movlw	0
  9170  0033D6  0101               	movlb	1	; () banked
  9171  0033D8  6F92               	movwf	_key_pressed& (0+255),b	;volatile
  9172                           
  9173                           ; BSR set to: 1
  9174                           ;menu.c: 105:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  9175                           
  9176                           ;menu.c: 102:             break;
  9177  0033DA  0E01               	movlw	1
  9178  0033DC  EC9F  F02A         	call	_lcdInst
  9179  0033E0  0E11               	movlw	17
  9180  0033E2  0100               	movlb	0	; () banked
  9181  0033E4  6FF6               	movwf	??_initStartScreen& (0+255),b
  9182  0033E6  0E3A               	movlw	58
  9183  0033E8                     u9837:
  9184  0033E8  2EE8               	decfsz	wreg,f,c
  9185  0033EA  D7FE               	bra	u9837
  9186  0033EC  2FF6               	decfsz	??_initStartScreen& (0+255),f,b
  9187  0033EE  D7FC               	bra	u9837
  9188  0033F0  F000               	nop	
  9189  0033F2  0012               	return		;funcret
  9190  0033F4                     __end_of_initStartScreen:
  9191                           	opt callstack 0
  9192                           
  9193 ;; *************** function _readRemoteStart *****************
  9194 ;; Defined at:
  9195 ;;		line 61 in file "sensors.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  i               1   29[COMRAM] unsigned char 
  9200 ;;  count           4   25[COMRAM] unsigned int [2]
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  2   21[COMRAM] int 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;Total ram usage:        9 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    3
  9217 ;; This function calls:
  9218 ;;		_I2C_Master_Init
  9219 ;;		_I2C_Master_Read
  9220 ;;		_I2C_Master_Start
  9221 ;;		_I2C_Master_Stop
  9222 ;;		_I2C_Master_Write
  9223 ;; This function is called by:
  9224 ;;		_testDrive
  9225 ;;		_testDrive2
  9226 ;;		_initStartScreen
  9227 ;;		_dispSensors
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text40
  9232  004154                     __ptext40:
  9233                           	opt callstack 0
  9234  004154                     _readRemoteStart:
  9235                           	opt callstack 26
  9236                           
  9237                           ;sensors.c: 63:     unsigned int count[2];;sensors.c: 64:     I2C_Master_Init(100000);
  9238                           
  9239                           ;incstack = 0
  9240  004154  0EA0               	movlw	160
  9241  004156  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  9242  004158  0E86               	movlw	134
  9243  00415A  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  9244  00415C  0E01               	movlw	1
  9245  00415E  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  9246  004160  0E00               	movlw	0
  9247  004162  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  9248  004164  EC28  F027         	call	_I2C_Master_Init	;wreg free
  9249                           
  9250                           ;sensors.c: 68:     I2C_Master_Start();
  9251  004168  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  9252                           
  9253                           ;sensors.c: 69:     I2C_Master_Write(0b00010000);
  9254  00416C  0E00               	movlw	0
  9255  00416E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  9256  004170  0E10               	movlw	16
  9257  004172  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  9258  004174  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  9259                           
  9260                           ;sensors.c: 70:     I2C_Master_Write(11);
  9261  004178  0E00               	movlw	0
  9262  00417A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  9263  00417C  0E0B               	movlw	11
  9264  00417E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  9265  004180  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  9266                           
  9267                           ;sensors.c: 71:     I2C_Master_Stop();
  9268  004184  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  9269                           
  9270                           ;sensors.c: 73:     _delay((unsigned long)((20)*(10000000/4000.0)));
  9271  004188  0E41               	movlw	65
  9272  00418A  6E18               	movwf	??_readRemoteStart& (0+255),c
  9273  00418C  0EEE               	movlw	238
  9274  00418E                     u9847:
  9275  00418E  2EE8               	decfsz	wreg,f,c
  9276  004190  D7FE               	bra	u9847
  9277  004192  2E18               	decfsz	??_readRemoteStart& (0+255),f,c
  9278  004194  D7FC               	bra	u9847
  9279  004196  D000               	nop2	
  9280                           
  9281                           ;sensors.c: 75:     I2C_Master_Start();
  9282  004198  ECC2  F02A         	call	_I2C_Master_Start	;wreg free
  9283                           
  9284                           ;sensors.c: 76:     I2C_Master_Write(0b00010001);
  9285  00419C  0E00               	movlw	0
  9286  00419E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  9287  0041A0  0E11               	movlw	17
  9288  0041A2  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  9289  0041A4  ECB5  F02A         	call	_I2C_Master_Write	;wreg free
  9290                           
  9291                           ;sensors.c: 78:     for (unsigned char i = 0; i < 1; i++)
  9292  0041A8  0E00               	movlw	0
  9293  0041AA  6E1E               	movwf	readRemoteStart@i,c
  9294  0041AC                     l8649:
  9295                           
  9296                           ;sensors.c: 79:     {;sensors.c: 80:         count[i] = I2C_Master_Read(0);
  9297  0041AC  0E00               	movlw	0
  9298  0041AE  EC5E  F02A         	call	_I2C_Master_Read
  9299  0041B2  6E18               	movwf	??_readRemoteStart& (0+255),c
  9300  0041B4  6A19               	clrf	(??_readRemoteStart+1)& (0+255),c
  9301  0041B6  501E               	movf	readRemoteStart@i,w,c
  9302  0041B8  0D02               	mullw	2
  9303  0041BA  0E1A               	movlw	low readRemoteStart@count
  9304  0041BC  24F3               	addwf	prodl,w,c
  9305  0041BE  6ED9               	movwf	fsr2l,c
  9306  0041C0  0E00               	movlw	high readRemoteStart@count
  9307  0041C2  20F4               	addwfc	prodh,w,c
  9308  0041C4  6EDA               	movwf	fsr2h,c
  9309  0041C6  C018  FFDE         	movff	??_readRemoteStart,postinc2
  9310  0041CA  C019  FFDD         	movff	??_readRemoteStart+1,postdec2
  9311                           
  9312                           ;sensors.c: 81:     }
  9313  0041CE  2A1E               	incf	readRemoteStart@i,f,c
  9314  0041D0  501E               	movf	readRemoteStart@i,w,c
  9315  0041D2  B4D8               	btfsc	status,2,c
  9316  0041D4  D7EB               	goto	l8649
  9317                           
  9318                           ;sensors.c: 82:     count[1] = I2C_Master_Read(1);
  9319  0041D6  0E01               	movlw	1
  9320  0041D8  EC5E  F02A         	call	_I2C_Master_Read
  9321  0041DC  6E18               	movwf	??_readRemoteStart& (0+255),c
  9322  0041DE  5018               	movf	??_readRemoteStart,w,c
  9323  0041E0  6E1C               	movwf	readRemoteStart@count+2,c
  9324  0041E2  6A1D               	clrf	readRemoteStart@count+3,c
  9325                           
  9326                           ;sensors.c: 83:     I2C_Master_Stop();
  9327  0041E4  ECBE  F02A         	call	_I2C_Master_Stop	;wreg free
  9328                           
  9329                           ;sensors.c: 85:     return (count[0])|(count[1]<<8);
  9330  0041E8  501C               	movf	readRemoteStart@count+2,w,c
  9331  0041EA  6E19               	movwf	(??_readRemoteStart+1)& (0+255),c
  9332  0041EC  6A18               	clrf	??_readRemoteStart& (0+255),c
  9333  0041EE  501A               	movf	readRemoteStart@count,w,c
  9334  0041F0  1018               	iorwf	??_readRemoteStart,w,c
  9335  0041F2  6E16               	movwf	?_readRemoteStart,c
  9336  0041F4  501B               	movf	readRemoteStart@count+1,w,c
  9337  0041F6  1019               	iorwf	??_readRemoteStart+1,w,c
  9338  0041F8  6E17               	movwf	?_readRemoteStart+1,c
  9339  0041FA  0012               	return		;funcret
  9340  0041FC                     __end_of_readRemoteStart:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function _I2C_Master_Write *****************
  9344 ;; Defined at:
  9345 ;;		line 70 in file "I2C.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;Total ram usage:        2 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:    2
  9366 ;; This function calls:
  9367 ;;		_I2C_Master_Wait
  9368 ;; This function is called by:
  9369 ;;		_initStartScreen
  9370 ;;		_shaftEncoderCount
  9371 ;;		_shaftEncoderCount2
  9372 ;;		_readRemoteStart
  9373 ;;		_distFromCanister
  9374 ;;		_readDigitalSensor
  9375 ;;		_readHallEffect
  9376 ;;		_readFrontSensor
  9377 ;;		_readFrontSensor2
  9378 ;;		_getRTCTime
  9379 ;;		_rtc_set_time
  9380 ;;		_senseTest
  9381 ;;		_sendData
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           	psect	text41
  9386  00556A                     __ptext41:
  9387                           	opt callstack 0
  9388  00556A                     _I2C_Master_Write:
  9389                           	opt callstack 26
  9390                           
  9391                           ;I2C.c: 71:     I2C_Master_Wait();
  9392                           
  9393                           ;incstack = 0
  9394  00556A  EC87  F02A         	call	_I2C_Master_Wait	;wreg free
  9395                           
  9396                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  9397  00556E  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  9398  005572  0012               	return		;funcret
  9399  005574                     __end_of_I2C_Master_Write:
  9400                           	opt callstack 0
  9401                           
  9402 ;; *************** function _I2C_Master_Stop *****************
  9403 ;; Defined at:
  9404 ;;		line 65 in file "I2C.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;		None
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      void 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0, cstack
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9422 ;;Total ram usage:        0 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; Hardware stack levels required when called:    2
  9425 ;; This function calls:
  9426 ;;		_I2C_Master_Wait
  9427 ;; This function is called by:
  9428 ;;		_initStartScreen
  9429 ;;		_shaftEncoderCount
  9430 ;;		_shaftEncoderCount2
  9431 ;;		_readRemoteStart
  9432 ;;		_distFromCanister
  9433 ;;		_readDigitalSensor
  9434 ;;		_readHallEffect
  9435 ;;		_readFrontSensor
  9436 ;;		_readFrontSensor2
  9437 ;;		_getRTCTime
  9438 ;;		_rtc_set_time
  9439 ;;		_senseTest
  9440 ;;		_sendData
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text42
  9445  00557C                     __ptext42:
  9446                           	opt callstack 0
  9447  00557C                     _I2C_Master_Stop:
  9448                           	opt callstack 26
  9449                           
  9450                           ;I2C.c: 66:     I2C_Master_Wait();
  9451                           
  9452                           ;incstack = 0
  9453  00557C  EC87  F02A         	call	_I2C_Master_Wait	;wreg free
  9454                           
  9455                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  9456  005580  84C5               	bsf	4037,2,c	;volatile
  9457  005582  0012               	return		;funcret
  9458  005584                     __end_of_I2C_Master_Stop:
  9459                           	opt callstack 0
  9460                           
  9461 ;; *************** function _I2C_Master_Start *****************
  9462 ;; Defined at:
  9463 ;;		line 55 in file "I2C.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;		None
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      void 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2, status,0, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;Total ram usage:        0 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    2
  9484 ;; This function calls:
  9485 ;;		_I2C_Master_Wait
  9486 ;; This function is called by:
  9487 ;;		_initStartScreen
  9488 ;;		_shaftEncoderCount
  9489 ;;		_shaftEncoderCount2
  9490 ;;		_readRemoteStart
  9491 ;;		_distFromCanister
  9492 ;;		_readDigitalSensor
  9493 ;;		_readHallEffect
  9494 ;;		_readFrontSensor
  9495 ;;		_readFrontSensor2
  9496 ;;		_getRTCTime
  9497 ;;		_rtc_set_time
  9498 ;;		_senseTest
  9499 ;;		_sendData
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text43
  9504  005584                     __ptext43:
  9505                           	opt callstack 0
  9506  005584                     _I2C_Master_Start:
  9507                           	opt callstack 26
  9508                           
  9509                           ;I2C.c: 56:     I2C_Master_Wait();
  9510                           
  9511                           ;incstack = 0
  9512  005584  EC87  F02A         	call	_I2C_Master_Wait	;wreg free
  9513                           
  9514                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  9515  005588  80C5               	bsf	4037,0,c	;volatile
  9516  00558A  0012               	return		;funcret
  9517  00558C                     __end_of_I2C_Master_Start:
  9518                           	opt callstack 0
  9519                           
  9520 ;; *************** function _I2C_Master_Read *****************
  9521 ;; Defined at:
  9522 ;;		line 77 in file "I2C.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  ackBit          1    wreg     unsigned char 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  ackBit          1    1[COMRAM] unsigned char 
  9527 ;;  receivedByte    1    2[COMRAM] unsigned char 
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  1    wreg      unsigned char 
  9530 ;; Registers used:
  9531 ;;		wreg, status,2, status,0, cstack
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;Total ram usage:        2 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; Hardware stack levels required when called:    2
  9544 ;; This function calls:
  9545 ;;		_I2C_Master_Wait
  9546 ;; This function is called by:
  9547 ;;		_initStartScreen
  9548 ;;		_shaftEncoderCount
  9549 ;;		_shaftEncoderCount2
  9550 ;;		_readRemoteStart
  9551 ;;		_distFromCanister
  9552 ;;		_readDigitalSensor
  9553 ;;		_readHallEffect
  9554 ;;		_readFrontSensor
  9555 ;;		_readFrontSensor2
  9556 ;;		_getRTCTime
  9557 ;;		_senseTest
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text44
  9562  0054BC                     __ptext44:
  9563                           	opt callstack 0
  9564  0054BC                     _I2C_Master_Read:
  9565                           	opt callstack 26
  9566                           
  9567                           ;incstack = 0
  9568                           ;I2C_Master_Read@ackBit stored from wreg
  9569  0054BC  6E02               	movwf	I2C_Master_Read@ackBit,c
  9570                           
  9571                           ;I2C.c: 78:     I2C_Master_Wait();
  9572  0054BE  EC87  F02A         	call	_I2C_Master_Wait	;wreg free
  9573                           
  9574                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  9575  0054C2  86C5               	bsf	4037,3,c	;volatile
  9576                           
  9577                           ;I2C.c: 81:     I2C_Master_Wait();
  9578  0054C4  EC87  F02A         	call	_I2C_Master_Wait	;wreg free
  9579                           
  9580                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  9581  0054C8  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  9582                           
  9583                           ;I2C.c: 86:     I2C_Master_Wait();
  9584  0054CC  EC87  F02A         	call	_I2C_Master_Wait	;wreg free
  9585                           
  9586                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  9587  0054D0  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  9588  0054D2  D002               	bra	u7875
  9589  0054D4  9AC5               	bcf	4037,5,c	;volatile
  9590  0054D6  D001               	bra	u7876
  9591  0054D8                     u7875:
  9592  0054D8  8AC5               	bsf	4037,5,c	;volatile
  9593  0054DA                     u7876:
  9594                           
  9595                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  9596  0054DA  88C5               	bsf	4037,4,c	;volatile
  9597                           
  9598                           ;I2C.c: 90:     return receivedByte;
  9599  0054DC  5003               	movf	I2C_Master_Read@receivedByte,w,c
  9600  0054DE  0012               	return		;funcret
  9601  0054E0                     __end_of_I2C_Master_Read:
  9602                           	opt callstack 0
  9603                           
  9604 ;; *************** function _I2C_Master_Wait *****************
  9605 ;; Defined at:
  9606 ;;		line 21 in file "I2C.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;		None
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;		None
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;Total ram usage:        1 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    1
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_I2C_Master_Start
  9631 ;;		_I2C_Master_Stop
  9632 ;;		_I2C_Master_Write
  9633 ;;		_I2C_Master_Read
  9634 ;;		_I2C_Master_RepeatedStart
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text45
  9639  00550E                     __ptext45:
  9640                           	opt callstack 0
  9641  00550E                     _I2C_Master_Wait:
  9642                           	opt callstack 26
  9643                           
  9644                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  9645                           
  9646                           ;I2C.c: 28:     }
  9647                           
  9648                           ;incstack = 0
  9649  00550E  B4C7               	btfsc	4039,2,c	;volatile
  9650  005510  D7FE               	goto	_I2C_Master_Wait
  9651  005512  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  9652  005516  0E1F               	movlw	31
  9653  005518  1601               	andwf	??_I2C_Master_Wait,f,c
  9654  00551A  B4D8               	btfsc	status,2,c
  9655  00551C  0012               	return	
  9656  00551E  D7F7               	goto	_I2C_Master_Wait
  9657  005520                     __end_of_I2C_Master_Wait:
  9658                           	opt callstack 0
  9659                           
  9660 ;; *************** function _I2C_Master_Init *****************
  9661 ;; Defined at:
  9662 ;;		line 32 in file "I2C.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      void 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2, status,0, cstack
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;Total ram usage:        8 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:    2
  9683 ;; This function calls:
  9684 ;;		___lldiv
  9685 ;; This function is called by:
  9686 ;;		_initStartScreen
  9687 ;;		_shaftEncoderCount
  9688 ;;		_shaftEncoderCount2
  9689 ;;		_readRemoteStart
  9690 ;;		_distFromCanister
  9691 ;;		_readDigitalSensor
  9692 ;;		_readHallEffect
  9693 ;;		_readFrontSensor
  9694 ;;		_readFrontSensor2
  9695 ;;		_getRTCTime
  9696 ;;		_senseTest
  9697 ;;		_sendData
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text46
  9702  004E50                     __ptext46:
  9703                           	opt callstack 0
  9704  004E50                     _I2C_Master_Init:
  9705                           	opt callstack 26
  9706                           
  9707                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  9708                           
  9709                           ;incstack = 0
  9710  004E50  9AC6               	bcf	4038,5,c	;volatile
  9711                           
  9712                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  9713  004E52  8694               	bsf	3988,3,c	;volatile
  9714                           
  9715                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  9716  004E54  8894               	bsf	3988,4,c	;volatile
  9717                           
  9718                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  9719  004E56  0E80               	movlw	128
  9720  004E58  6E01               	movwf	___lldiv@dividend,c
  9721  004E5A  0E96               	movlw	150
  9722  004E5C  6E02               	movwf	___lldiv@dividend+1,c
  9723  004E5E  0E98               	movlw	152
  9724  004E60  6E03               	movwf	___lldiv@dividend+2,c
  9725  004E62  0E00               	movlw	0
  9726  004E64  6E04               	movwf	___lldiv@dividend+3,c
  9727  004E66  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  9728  004E6A  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  9729  004E6E  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  9730  004E72  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  9731  004E76  0E02               	movlw	2
  9732  004E78                     u7865:
  9733  004E78  90D8               	bcf	status,0,c
  9734  004E7A  3612               	rlcf	??_I2C_Master_Init,f,c
  9735  004E7C  3613               	rlcf	??_I2C_Master_Init+1,f,c
  9736  004E7E  3614               	rlcf	??_I2C_Master_Init+2,f,c
  9737  004E80  3615               	rlcf	??_I2C_Master_Init+3,f,c
  9738  004E82  2EE8               	decfsz	wreg,f,c
  9739  004E84  D7F9               	goto	u7865
  9740  004E86  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  9741  004E8A  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  9742  004E8E  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  9743  004E92  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  9744  004E96  ECEB  F023         	call	___lldiv	;wreg free
  9745  004E9A  0401               	decf	?___lldiv,w,c
  9746  004E9C  6EC8               	movwf	4040,c	;volatile
  9747                           
  9748                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  9749  004E9E  0E80               	movlw	128
  9750  004EA0  6EC7               	movwf	4039,c	;volatile
  9751                           
  9752                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  9753  004EA2  0E28               	movlw	40
  9754  004EA4  6EC6               	movwf	4038,c	;volatile
  9755                           
  9756                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  9757  004EA6  0E00               	movlw	0
  9758  004EA8  6EC5               	movwf	4037,c	;volatile
  9759  004EAA  0012               	return		;funcret
  9760  004EAC                     __end_of_I2C_Master_Init:
  9761                           	opt callstack 0
  9762                           
  9763 ;; *************** function ___lldiv *****************
  9764 ;; Defined at:
  9765 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  dividend        4    0[COMRAM] unsigned long 
  9768 ;;  divisor         4    4[COMRAM] unsigned long 
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;  quotient        4    8[COMRAM] unsigned long 
  9771 ;;  counter         1   12[COMRAM] unsigned char 
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  4    0[COMRAM] unsigned long 
  9774 ;; Registers used:
  9775 ;;		wreg, status,2, status,0
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9781 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;Total ram usage:       13 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:    1
  9788 ;; This function calls:
  9789 ;;		Nothing
  9790 ;; This function is called by:
  9791 ;;		_I2C_Master_Init
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text47
  9796  0047D6                     __ptext47:
  9797                           	opt callstack 0
  9798  0047D6                     ___lldiv:
  9799                           	opt callstack 26
  9800                           
  9801                           ;incstack = 0
  9802  0047D6  0E00               	movlw	0
  9803  0047D8  6E09               	movwf	___lldiv@quotient,c
  9804  0047DA  0E00               	movlw	0
  9805  0047DC  6E0A               	movwf	___lldiv@quotient+1,c
  9806  0047DE  0E00               	movlw	0
  9807  0047E0  6E0B               	movwf	___lldiv@quotient+2,c
  9808  0047E2  0E00               	movlw	0
  9809  0047E4  6E0C               	movwf	___lldiv@quotient+3,c
  9810  0047E6  5005               	movf	___lldiv@divisor,w,c
  9811  0047E8  1006               	iorwf	___lldiv@divisor+1,w,c
  9812  0047EA  1007               	iorwf	___lldiv@divisor+2,w,c
  9813  0047EC  1008               	iorwf	___lldiv@divisor+3,w,c
  9814  0047EE  B4D8               	btfsc	status,2,c
  9815  0047F0  D02A               	goto	l1385
  9816  0047F2  0E01               	movlw	1
  9817  0047F4  6E0D               	movwf	___lldiv@counter,c
  9818  0047F6  D006               	goto	l7671
  9819  0047F8                     l7669:
  9820  0047F8  90D8               	bcf	status,0,c
  9821  0047FA  3605               	rlcf	___lldiv@divisor,f,c
  9822  0047FC  3606               	rlcf	___lldiv@divisor+1,f,c
  9823  0047FE  3607               	rlcf	___lldiv@divisor+2,f,c
  9824  004800  3608               	rlcf	___lldiv@divisor+3,f,c
  9825  004802  2A0D               	incf	___lldiv@counter,f,c
  9826  004804                     l7671:
  9827  004804  AE08               	btfss	___lldiv@divisor+3,7,c
  9828  004806  D7F8               	goto	l7669
  9829  004808                     u7840:
  9830  004808  90D8               	bcf	status,0,c
  9831  00480A  3609               	rlcf	___lldiv@quotient,f,c
  9832  00480C  360A               	rlcf	___lldiv@quotient+1,f,c
  9833  00480E  360B               	rlcf	___lldiv@quotient+2,f,c
  9834  004810  360C               	rlcf	___lldiv@quotient+3,f,c
  9835  004812  5005               	movf	___lldiv@divisor,w,c
  9836  004814  5C01               	subwf	___lldiv@dividend,w,c
  9837  004816  5006               	movf	___lldiv@divisor+1,w,c
  9838  004818  5802               	subwfb	___lldiv@dividend+1,w,c
  9839  00481A  5007               	movf	___lldiv@divisor+2,w,c
  9840  00481C  5803               	subwfb	___lldiv@dividend+2,w,c
  9841  00481E  5008               	movf	___lldiv@divisor+3,w,c
  9842  004820  5804               	subwfb	___lldiv@dividend+3,w,c
  9843  004822  A0D8               	btfss	status,0,c
  9844  004824  D009               	goto	l7681
  9845  004826  5005               	movf	___lldiv@divisor,w,c
  9846  004828  5E01               	subwf	___lldiv@dividend,f,c
  9847  00482A  5006               	movf	___lldiv@divisor+1,w,c
  9848  00482C  5A02               	subwfb	___lldiv@dividend+1,f,c
  9849  00482E  5007               	movf	___lldiv@divisor+2,w,c
  9850  004830  5A03               	subwfb	___lldiv@dividend+2,f,c
  9851  004832  5008               	movf	___lldiv@divisor+3,w,c
  9852  004834  5A04               	subwfb	___lldiv@dividend+3,f,c
  9853  004836  8009               	bsf	___lldiv@quotient,0,c
  9854  004838                     l7681:
  9855  004838  90D8               	bcf	status,0,c
  9856  00483A  3208               	rrcf	___lldiv@divisor+3,f,c
  9857  00483C  3207               	rrcf	___lldiv@divisor+2,f,c
  9858  00483E  3206               	rrcf	___lldiv@divisor+1,f,c
  9859  004840  3205               	rrcf	___lldiv@divisor,f,c
  9860  004842  2E0D               	decfsz	___lldiv@counter,f,c
  9861  004844  D7E1               	goto	u7840
  9862  004846                     l1385:
  9863  004846  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9864  00484A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9865  00484E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9866  004852  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9867  004856  0012               	return		;funcret
  9868  004858                     __end_of___lldiv:
  9869                           	opt callstack 0
  9870                           
  9871 ;; *************** function _printf *****************
  9872 ;; Defined at:
  9873 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  fmt             2  106[BANK0 ] PTR const unsigned char 
  9876 ;;		 -> STR_58(13), STR_57(18), STR_56(13), STR_55(13), 
  9877 ;;		 -> STR_54(17), STR_53(16), STR_52(16), STR_51(17), 
  9878 ;;		 -> STR_50(18), STR_49(13), STR_47(11), STR_46(13), 
  9879 ;;		 -> STR_45(14), STR_44(9), STR_43(15), STR_42(12), 
  9880 ;;		 -> STR_41(15), STR_40(17), STR_39(14), STR_38(16), 
  9881 ;;		 -> STR_37(14), STR_36(16), STR_35(17), STR_34(12), 
  9882 ;;		 -> STR_33(14), STR_32(15), STR_31(6), STR_30(15), 
  9883 ;;		 -> STR_29(15), STR_28(9), STR_27(14), STR_26(3), 
  9884 ;;		 -> STR_25(12), STR_24(10), STR_23(10), STR_22(5), 
  9885 ;;		 -> STR_21(12), STR_20(10), STR_19(10), STR_18(5), 
  9886 ;;		 -> STR_17(12), STR_16(10), STR_15(10), STR_14(13), 
  9887 ;;		 -> STR_13(12), STR_12(12), STR_11(12), STR_10(12), 
  9888 ;;		 -> STR_9(12), STR_8(3), STR_7(5), STR_6(5), 
  9889 ;;		 -> STR_5(10), STR_4(10), STR_3(5), STR_2(5), 
  9890 ;;		 -> STR_1(16), 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  ap              2  116[BANK0 ] PTR void [1]
  9893 ;;		 -> ?_printf(2), 
  9894 ;;  ret             2    0        int 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  2  106[BANK0 ] int 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;Total ram usage:       12 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:   11
  9911 ;; This function calls:
  9912 ;;		_vfprintf
  9913 ;; This function is called by:
  9914 ;;		_detectCanister
  9915 ;;		_testDrive
  9916 ;;		_testDrive2
  9917 ;;		_initStartScreen
  9918 ;;		_initMenu
  9919 ;;		_buildEndScreen
  9920 ;;		_buildEndScreenMenu
  9921 ;;		_buildTimeScreen
  9922 ;;		_ballsGivenScreen
  9923 ;;		_numCanistersScreen
  9924 ;;		_canisterSelectScreen
  9925 ;;		_canisterDataScreen
  9926 ;;		_sensorData
  9927 ;;		_dispSensors
  9928 ;;		_dispSensors2
  9929 ;;		_printState
  9930 ;;		_adjustCanister
  9931 ;;		_testShaftEncoder
  9932 ;;		_printI2CData
  9933 ;;		_detectCanisterScreen
  9934 ;;		_senseTest
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text48
  9939  00546E                     __ptext48:
  9940                           	opt callstack 0
  9941  00546E                     _printf:
  9942                           	opt callstack 17
  9943                           
  9944                           ;incstack = 0
  9945  00546E  0EEC               	movlw	low (?_printf+2)
  9946  005470  0100               	movlb	0	; () banked
  9947  005472  6FF4               	movwf	printf@ap& (0+255),b
  9948  005474  0E00               	movlw	high (?_printf+2)
  9949  005476  6FF5               	movwf	(printf@ap+1)& (0+255),b
  9950                           
  9951                           ; BSR set to: 0
  9952  005478  0E00               	movlw	0
  9953  00547A  6FE4               	movwf	vfprintf@fp& (0+255),b
  9954  00547C  0E00               	movlw	0
  9955  00547E  6FE5               	movwf	(vfprintf@fp+1)& (0+255),b
  9956  005480  C0EA  F0E6         	movff	printf@fmt,vfprintf@fmt
  9957  005484  C0EB  F0E7         	movff	printf@fmt+1,vfprintf@fmt+1
  9958  005488  0EF4               	movlw	low printf@ap
  9959  00548A  6FE8               	movwf	vfprintf@ap& (0+255),b
  9960  00548C  0E00               	movlw	high printf@ap
  9961  00548E  6FE9               	movwf	(vfprintf@ap+1)& (0+255),b
  9962  005490  ECCB  F026         	call	_vfprintf	;wreg free
  9963  005494  0012               	return		;funcret
  9964  005496                     __end_of_printf:
  9965                           	opt callstack 0
  9966                           
  9967 ;; *************** function _vfprintf *****************
  9968 ;; Defined at:
  9969 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  9972 ;;		 -> NULL(0), 
  9973 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  9974 ;;		 -> STR_58(13), STR_57(18), STR_56(13), STR_55(13), 
  9975 ;;		 -> STR_54(17), STR_53(16), STR_52(16), STR_51(17), 
  9976 ;;		 -> STR_50(18), STR_49(13), STR_47(11), STR_46(13), 
  9977 ;;		 -> STR_45(14), STR_44(9), STR_43(15), STR_42(12), 
  9978 ;;		 -> STR_41(15), STR_40(17), STR_39(14), STR_38(16), 
  9979 ;;		 -> STR_37(14), STR_36(16), STR_35(17), STR_34(12), 
  9980 ;;		 -> STR_33(14), STR_32(15), STR_31(6), STR_30(15), 
  9981 ;;		 -> STR_29(15), STR_28(9), STR_27(14), STR_26(3), 
  9982 ;;		 -> STR_25(12), STR_24(10), STR_23(10), STR_22(5), 
  9983 ;;		 -> STR_21(12), STR_20(10), STR_19(10), STR_18(5), 
  9984 ;;		 -> STR_17(12), STR_16(10), STR_15(10), STR_14(13), 
  9985 ;;		 -> STR_13(12), STR_12(12), STR_11(12), STR_10(12), 
  9986 ;;		 -> STR_9(12), STR_8(3), STR_7(5), STR_6(5), 
  9987 ;;		 -> STR_5(10), STR_4(10), STR_3(5), STR_2(5), 
  9988 ;;		 -> STR_1(16), 
  9989 ;;  ap              2  104[BANK0 ] PTR PTR void 
  9990 ;;		 -> printf@ap(2), 
  9991 ;; Auto vars:     Size  Location     Type
  9992 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  9993 ;;		 -> STR_58(13), STR_57(18), STR_56(13), STR_55(13), 
  9994 ;;		 -> STR_54(17), STR_53(16), STR_52(16), STR_51(17), 
  9995 ;;		 -> STR_50(18), STR_49(13), STR_47(11), STR_46(13), 
  9996 ;;		 -> STR_45(14), STR_44(9), STR_43(15), STR_42(12), 
  9997 ;;		 -> STR_41(15), STR_40(17), STR_39(14), STR_38(16), 
  9998 ;;		 -> STR_37(14), STR_36(16), STR_35(17), STR_34(12), 
  9999 ;;		 -> STR_33(14), STR_32(15), STR_31(6), STR_30(15), 
 10000 ;;		 -> STR_29(15), STR_28(9), STR_27(14), STR_26(3), 
 10001 ;;		 -> STR_25(12), STR_24(10), STR_23(10), STR_22(5), 
 10002 ;;		 -> STR_21(12), STR_20(10), STR_19(10), STR_18(5), 
 10003 ;;		 -> STR_17(12), STR_16(10), STR_15(10), STR_14(13), 
 10004 ;;		 -> STR_13(12), STR_12(12), STR_11(12), STR_10(12), 
 10005 ;;		 -> STR_9(12), STR_8(3), STR_7(5), STR_6(5), 
 10006 ;;		 -> STR_5(10), STR_4(10), STR_3(5), STR_2(5), 
 10007 ;;		 -> STR_1(16), 
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  2  100[BANK0 ] int 
 10010 ;; Registers used:
 10011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10017 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;Total ram usage:        8 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:   10
 10024 ;; This function calls:
 10025 ;;		_vfpfcnvrt
 10026 ;; This function is called by:
 10027 ;;		_printf
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text49
 10032  004D96                     __ptext49:
 10033                           	opt callstack 0
 10034  004D96                     _vfprintf:
 10035                           	opt callstack 17
 10036                           
 10037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10038                           
 10039                           ;incstack = 0
 10040  004D96  C0E6  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
 10041  004D9A  C0E7  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10042                           
 10043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10044  004D9E  0E00               	movlw	0
 10045  004DA0  0101               	movlb	1	; () banked
 10046  004DA2  6F83               	movwf	(_nout+1)& (0+255),b
 10047  004DA4  0E00               	movlw	0
 10048  004DA6  6F82               	movwf	_nout& (0+255),b
 10049                           
 10050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10051  004DA8  D017               	goto	l7727
 10052  004DAA                     l7725:
 10053                           
 10054                           ; BSR set to: 1
 10055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10056  004DAA  C0E4  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
 10057  004DAE  C0E5  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10058  004DB2  0E7C               	movlw	low vfprintf@cfmt
 10059  004DB4  0100               	movlb	0	; () banked
 10060  004DB6  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
 10061  004DB8  0E00               	movlw	high vfprintf@cfmt
 10062  004DBA  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 10063  004DBC  C0E8  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
 10064  004DC0  C0E9  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10065  004DC4  ECFB  F004         	call	_vfpfcnvrt	;wreg free
 10066  004DC8  0100               	movlb	0	; () banked
 10067  004DCA  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
 10068  004DCC  0101               	movlb	1	; () banked
 10069  004DCE  2782               	addwf	_nout& (0+255),f,b
 10070  004DD0  0100               	movlb	0	; () banked
 10071  004DD2  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 10072  004DD4  0101               	movlb	1	; () banked
 10073  004DD6  2383               	addwfc	(_nout+1)& (0+255),f,b
 10074  004DD8                     l7727:
 10075                           
 10076                           ; BSR set to: 1
 10077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10078  004DD8  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
 10079  004DDC  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 10080  004DE0                     	if	0	;tblptru may be non-zero
 10081  004DE0                     	endif
 10082  004DE0                     	if	0	;tblptru may be non-zero
 10083  004DE0                     	endif
 10084  004DE0  0008               	tblrd		*
 10085  004DE2  50F5               	movf	tablat,w,c
 10086  004DE4  0900               	iorlw	0
 10087  004DE6  A4D8               	btfss	status,2,c
 10088  004DE8  D7E0               	goto	l7725
 10089                           
 10090                           ; BSR set to: 1
 10091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10092  004DEA  C182  F0E4         	movff	_nout,?_vfprintf
 10093  004DEE  C183  F0E5         	movff	_nout+1,?_vfprintf+1
 10094                           
 10095                           ; BSR set to: 1
 10096  004DF2  0012               	return		;funcret
 10097  004DF4                     __end_of_vfprintf:
 10098                           	opt callstack 0
 10099                           
 10100 ;; *************** function _vfpfcnvrt *****************
 10101 ;; Defined at:
 10102 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
 10105 ;;		 -> NULL(0), 
 10106 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
 10107 ;;		 -> vfprintf@cfmt(2), 
 10108 ;;  ap              2   60[BANK0 ] PTR PTR void 
 10109 ;;		 -> printf@ap(2), 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  llu             8   74[BANK0 ] unsigned long long 
 10112 ;;  ll              8   66[BANK0 ] long long 
 10113 ;;  f               4   92[BANK0 ] long long 
 10114 ;;  ct              3   96[BANK0 ] unsigned char [3]
 10115 ;;  vp              3    0        PTR void 
 10116 ;;  done            2   84[BANK0 ] int 
 10117 ;;  cp              2   82[BANK0 ] PTR unsigned char 
 10118 ;;		 -> ?_printf(2), STR_48(6), 
 10119 ;;  i               2    0        int 
 10120 ;;  c               1   99[BANK0 ] unsigned char 
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  2   56[BANK0 ] int 
 10123 ;; Registers used:
 10124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10130 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10131 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10133 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10134 ;;Total ram usage:       44 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; Hardware stack levels required when called:    9
 10137 ;; This function calls:
 10138 ;;		_atoi
 10139 ;;		_ctoa
 10140 ;;		_dtoa
 10141 ;;		_efgtoa
 10142 ;;		_fputc
 10143 ;;		_isdigit
 10144 ;;		_isupper
 10145 ;;		_stoa
 10146 ;;		_strncmp
 10147 ;;		_tolower
 10148 ;;		_xtoa
 10149 ;; This function is called by:
 10150 ;;		_vfprintf
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text50
 10155  0009F6                     __ptext50:
 10156                           	opt callstack 0
 10157  0009F6                     _vfpfcnvrt:
 10158                           	opt callstack 17
 10159                           
 10160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10161                           
 10162                           ; BSR set to: 1
 10163                           ;incstack = 0
 10164  0009F6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10165  0009FA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10166  0009FE  CFDE FFF6          	movff	postinc2,tblptrl
 10167  000A02  CFDD FFF7          	movff	postdec2,tblptrh
 10168  000A06                     	if	0	;tblptru may be non-zero
 10169  000A06                     	endif
 10170  000A06                     	if	0	;tblptru may be non-zero
 10171  000A06                     	endif
 10172  000A06  0008               	tblrd		*
 10173  000A08  50F5               	movf	tablat,w,c
 10174  000A0A  0A25               	xorlw	37
 10175  000A0C  A4D8               	btfss	status,2,c
 10176  000A0E  D3A5               	goto	l7649
 10177                           
 10178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10179  000A10  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10180  000A14  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10181  000A18  2ADE               	incf	postinc2,f,c
 10182  000A1A  0E00               	movlw	0
 10183  000A1C  22DD               	addwfc	postdec2,f,c
 10184                           
 10185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10186  000A1E  0E00               	movlw	0
 10187  000A20  0101               	movlb	1	; () banked
 10188  000A22  6F85               	movwf	(_width+1)& (0+255),b
 10189  000A24  0E00               	movlw	0
 10190  000A26  6F84               	movwf	_width& (0+255),b
 10191  000A28  C184  F188         	movff	_width,_flags
 10192  000A2C  C185  F189         	movff	_width+1,_flags+1
 10193                           
 10194                           ; BSR set to: 1
 10195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10196  000A30  6986               	setf	_prec& (0+255),b
 10197  000A32  6987               	setf	(_prec+1)& (0+255),b
 10198                           
 10199                           ; BSR set to: 1
 10200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 10201  000A34  0E00               	movlw	0
 10202  000A36  0100               	movlb	0	; () banked
 10203  000A38  6FD5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10204  000A3A  0E00               	movlw	0
 10205  000A3C  D019               	goto	L21
 10206  000A3E                     l7487:
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 10210  000A3E  0101               	movlb	1	; () banked
 10211  000A40  8188               	bsf	_flags& (0+255),0,b
 10212  000A42                     l7489:
 10213                           
 10214                           ; BSR set to: 1
 10215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 10216  000A42  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10217  000A46  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10218  000A4A  2ADE               	incf	postinc2,f,c
 10219  000A4C  0E00               	movlw	0
 10220  000A4E  22DD               	addwfc	postdec2,f,c
 10221                           
 10222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 10223  000A50  D032               	goto	l7513
 10224  000A52                     l7491:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 10228  000A52  0101               	movlb	1	; () banked
 10229  000A54  8388               	bsf	_flags& (0+255),1,b
 10230  000A56  D7F5               	goto	l7489
 10231  000A58                     l7495:
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 10235  000A58  0101               	movlb	1	; () banked
 10236  000A5A  8588               	bsf	_flags& (0+255),2,b
 10237  000A5C  D7F2               	goto	l7489
 10238  000A5E                     l7499:
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 10242  000A5E  0101               	movlb	1	; () banked
 10243  000A60  8788               	bsf	_flags& (0+255),3,b
 10244  000A62  D7EF               	goto	l7489
 10245  000A64                     l7503:
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 10249  000A64  0101               	movlb	1	; () banked
 10250  000A66  8988               	bsf	_flags& (0+255),4,b
 10251  000A68  D7EC               	goto	l7489
 10252  000A6A                     l7507:
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 10256  000A6A  0E00               	movlw	0
 10257  000A6C  6FD5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10258  000A6E  0E01               	movlw	1
 10259  000A70                     L21:
 10260  000A70  6FD4               	movwf	vfpfcnvrt@done& (0+255),b
 10261                           
 10262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 10263  000A72  D021               	goto	l7513
 10264  000A74                     l7511:
 10265                           
 10266                           ; BSR set to: 0
 10267  000A74  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10268  000A78  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10269  000A7C  CFDE FFF6          	movff	postinc2,tblptrl
 10270  000A80  CFDD FFF7          	movff	postdec2,tblptrh
 10271  000A84                     	if	0	;tblptru may be non-zero
 10272  000A84                     	endif
 10273  000A84                     	if	0	;tblptru may be non-zero
 10274  000A84                     	endif
 10275  000A84  0008               	tblrd		*
 10276  000A86  50F5               	movf	tablat,w,c
 10277  000A88  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
 10278  000A8A  6BBF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 10279                           
 10280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10281                           ; Switch size 1, requested type "simple"
 10282                           ; Number of cases is 1, Range of values is 0 to 0
 10283                           ; switch strategies available:
 10284                           ; Name         Instructions Cycles
 10285                           ; simple_byte            4     3 (average)
 10286                           ;	Chosen strategy is simple_byte
 10287  000A8C  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10288  000A8E  0A00               	xorlw	0	; case 0
 10289  000A90  A4D8               	btfss	status,2,c
 10290  000A92  D7EB               	goto	l7507
 10291                           
 10292                           ; BSR set to: 0
 10293                           ; Switch size 1, requested type "simple"
 10294                           ; Number of cases is 5, Range of values is 32 to 48
 10295                           ; switch strategies available:
 10296                           ; Name         Instructions Cycles
 10297                           ; simple_byte           16     9 (average)
 10298                           ;	Chosen strategy is simple_byte
 10299  000A94  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
 10300  000A96  0A20               	xorlw	32	; case 32
 10301  000A98  B4D8               	btfsc	status,2,c
 10302  000A9A  D7E1               	goto	l7499
 10303  000A9C  0A03               	xorlw	3	; case 35
 10304  000A9E  B4D8               	btfsc	status,2,c
 10305  000AA0  D7E1               	goto	l7503
 10306  000AA2  0A08               	xorlw	8	; case 43
 10307  000AA4  B4D8               	btfsc	status,2,c
 10308  000AA6  D7D8               	goto	l7495
 10309  000AA8  0A06               	xorlw	6	; case 45
 10310  000AAA  B4D8               	btfsc	status,2,c
 10311  000AAC  D7C8               	goto	l7487
 10312  000AAE  0A1D               	xorlw	29	; case 48
 10313  000AB0  B4D8               	btfsc	status,2,c
 10314  000AB2  D7CF               	goto	l7491
 10315  000AB4  D7DA               	goto	l7507
 10316  000AB6                     l7513:
 10317                           
 10318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10319  000AB6  0100               	movlb	0	; () banked
 10320  000AB8  51D4               	movf	vfpfcnvrt@done& (0+255),w,b
 10321  000ABA  11D5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10322  000ABC  B4D8               	btfsc	status,2,c
 10323  000ABE  D7DA               	goto	l7511
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 10327  000AC0  0101               	movlb	1	; () banked
 10328  000AC2  B188               	btfsc	_flags& (0+255),0,b
 10329                           
 10330                           ; BSR set to: 1
 10331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 10332  000AC4  9388               	bcf	_flags& (0+255),1,b
 10333                           
 10334                           ; BSR set to: 1
 10335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 10336  000AC6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10337  000ACA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10338  000ACE  CFDE FFF6          	movff	postinc2,tblptrl
 10339  000AD2  CFDD FFF7          	movff	postdec2,tblptrh
 10340  000AD6                     	if	0	;tblptru may be non-zero
 10341  000AD6                     	endif
 10342  000AD6                     	if	0	;tblptru may be non-zero
 10343  000AD6                     	endif
 10344  000AD6  0008               	tblrd		*
 10345  000AD8  50F5               	movf	tablat,w,c
 10346  000ADA  0A2A               	xorlw	42
 10347  000ADC  A4D8               	btfss	status,2,c
 10348  000ADE  D023               	goto	l7525
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 10352  000AE0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10353  000AE4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10354  000AE8  2ADE               	incf	postinc2,f,c
 10355  000AEA  0E00               	movlw	0
 10356  000AEC  22DD               	addwfc	postdec2,f,c
 10357                           
 10358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10359  000AEE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10360  000AF2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10361  000AF6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 10362  000AFA  0E02               	movlw	2
 10363  000AFC  26DE               	addwf	postinc2,f,c
 10364  000AFE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 10365  000B02  0E00               	movlw	0
 10366  000B04  22DD               	addwfc	postdec2,f,c
 10367  000B06  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10368  000B0A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10369  000B0E  CFDE F184          	movff	postinc2,_width
 10370  000B12  CFDD F185          	movff	postdec2,_width+1
 10371                           
 10372                           ; BSR set to: 1
 10373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 10374  000B16  AF85               	btfss	(_width+1)& (0+255),7,b
 10375  000B18  D040               	goto	u7630
 10376                           
 10377                           ; BSR set to: 1
 10378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 10379  000B1A  8188               	bsf	_flags& (0+255),0,b
 10380                           
 10381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 10382  000B1C  6D84               	negf	_width& (0+255),b
 10383  000B1E  1F85               	comf	(_width+1)& (0+255),f,b
 10384  000B20  B0D8               	btfsc	status,0,c
 10385  000B22  2B85               	incf	(_width+1)& (0+255),f,b
 10386  000B24  D03A               	goto	u7630
 10387  000B26                     l7525:
 10388                           
 10389                           ; BSR set to: 1
 10390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 10391  000B26  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10392  000B2A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10393  000B2E  CFDE F008          	movff	postinc2,atoi@s
 10394  000B32  CFDD F009          	movff	postdec2,atoi@s+1
 10395  000B36  ECE0  F01B         	call	_atoi	;wreg free
 10396  000B3A  C008  F184         	movff	?_atoi,_width
 10397  000B3E  C009  F185         	movff	?_atoi+1,_width+1
 10398                           
 10399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10400  000B42  D007               	goto	l7529
 10401  000B44                     l7527:
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 10405  000B44  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10406  000B48  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10407  000B4C  2ADE               	incf	postinc2,f,c
 10408  000B4E  0E00               	movlw	0
 10409  000B50  22DD               	addwfc	postdec2,f,c
 10410  000B52                     l7529:
 10411  000B52  0ED0               	movlw	208
 10412  000B54  0100               	movlb	0	; () banked
 10413  000B56  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
 10414  000B58  0EFF               	movlw	255
 10415  000B5A  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10416  000B5C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10417  000B60  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10418  000B64  CFDE FFF6          	movff	postinc2,tblptrl
 10419  000B68  CFDD FFF7          	movff	postdec2,tblptrh
 10420  000B6C                     	if	0	;tblptru may be non-zero
 10421  000B6C                     	endif
 10422  000B6C                     	if	0	;tblptru may be non-zero
 10423  000B6C                     	endif
 10424  000B6C  0008               	tblrd		*
 10425  000B6E  50F5               	movf	tablat,w,c
 10426  000B70  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10427  000B72  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10428  000B74  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
 10429  000B76  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10430  000B78  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10431  000B7A  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10432  000B7C  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10433  000B7E  E106               	bnz	u7610
 10434  000B80  0E0A               	movlw	10
 10435  000B82  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10436  000B84  B0D8               	btfsc	status,0,c
 10437  000B86  D002               	goto	u7610
 10438  000B88  0E01               	movlw	1
 10439  000B8A  D001               	goto	u7620
 10440  000B8C                     u7610:
 10441  000B8C  0E00               	movlw	0
 10442  000B8E                     u7620:
 10443  000B8E  6FD6               	movwf	_vfpfcnvrt$2104& (0+255),b
 10444  000B90  6BD7               	clrf	(_vfpfcnvrt$2104+1)& (0+255),b
 10445                           
 10446                           ; BSR set to: 0
 10447  000B92  51D6               	movf	_vfpfcnvrt$2104& (0+255),w,b
 10448  000B94  11D7               	iorwf	(_vfpfcnvrt$2104+1)& (0+255),w,b
 10449  000B96  A4D8               	btfss	status,2,c
 10450  000B98  D7D5               	goto	l7527
 10451  000B9A                     u7630:
 10452                           
 10453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 10454  000B9A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10455  000B9E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10456  000BA2  CFDE FFF6          	movff	postinc2,tblptrl
 10457  000BA6  CFDD FFF7          	movff	postdec2,tblptrh
 10458  000BAA                     	if	0	;tblptru may be non-zero
 10459  000BAA                     	endif
 10460  000BAA                     	if	0	;tblptru may be non-zero
 10461  000BAA                     	endif
 10462  000BAA  0008               	tblrd		*
 10463  000BAC  50F5               	movf	tablat,w,c
 10464  000BAE  0A2E               	xorlw	46
 10465  000BB0  A4D8               	btfss	status,2,c
 10466  000BB2  D06F               	goto	u7680
 10467                           
 10468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 10469  000BB4  0E00               	movlw	0
 10470  000BB6  0101               	movlb	1	; () banked
 10471  000BB8  6F87               	movwf	(_prec+1)& (0+255),b
 10472  000BBA  0E00               	movlw	0
 10473  000BBC  6F86               	movwf	_prec& (0+255),b
 10474                           
 10475                           ; BSR set to: 1
 10476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 10477  000BBE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10478  000BC2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10479  000BC6  2ADE               	incf	postinc2,f,c
 10480  000BC8  0E00               	movlw	0
 10481  000BCA  22DD               	addwfc	postdec2,f,c
 10482                           
 10483                           ; BSR set to: 1
 10484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 10485  000BCC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10486  000BD0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10487  000BD4  CFDE FFF6          	movff	postinc2,tblptrl
 10488  000BD8  CFDD FFF7          	movff	postdec2,tblptrh
 10489  000BDC                     	if	0	;tblptru may be non-zero
 10490  000BDC                     	endif
 10491  000BDC                     	if	0	;tblptru may be non-zero
 10492  000BDC                     	endif
 10493  000BDC  0008               	tblrd		*
 10494  000BDE  50F5               	movf	tablat,w,c
 10495  000BE0  0A2A               	xorlw	42
 10496  000BE2  A4D8               	btfss	status,2,c
 10497  000BE4  D01C               	goto	l7545
 10498                           
 10499                           ; BSR set to: 1
 10500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 10501  000BE6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10502  000BEA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10503  000BEE  2ADE               	incf	postinc2,f,c
 10504  000BF0  0E00               	movlw	0
 10505  000BF2  22DD               	addwfc	postdec2,f,c
 10506                           
 10507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 10508  000BF4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10509  000BF8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10510  000BFC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 10511  000C00  0E02               	movlw	2
 10512  000C02  26DE               	addwf	postinc2,f,c
 10513  000C04  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 10514  000C08  0E00               	movlw	0
 10515  000C0A  22DD               	addwfc	postdec2,f,c
 10516  000C0C  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10517  000C10  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10518  000C14  CFDE F186          	movff	postinc2,_prec
 10519  000C18  CFDD F187          	movff	postdec2,_prec+1
 10520                           
 10521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 10522  000C1C  D03A               	goto	u7680
 10523  000C1E                     l7545:
 10524                           
 10525                           ; BSR set to: 1
 10526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 10527  000C1E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10528  000C22  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10529  000C26  CFDE F008          	movff	postinc2,atoi@s
 10530  000C2A  CFDD F009          	movff	postdec2,atoi@s+1
 10531  000C2E  ECE0  F01B         	call	_atoi	;wreg free
 10532  000C32  C008  F186         	movff	?_atoi,_prec
 10533  000C36  C009  F187         	movff	?_atoi+1,_prec+1
 10534                           
 10535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10536  000C3A  D007               	goto	l7549
 10537  000C3C                     l7547:
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 10541  000C3C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10542  000C40  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10543  000C44  2ADE               	incf	postinc2,f,c
 10544  000C46  0E00               	movlw	0
 10545  000C48  22DD               	addwfc	postdec2,f,c
 10546  000C4A                     l7549:
 10547  000C4A  0ED0               	movlw	208
 10548  000C4C  0100               	movlb	0	; () banked
 10549  000C4E  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
 10550  000C50  0EFF               	movlw	255
 10551  000C52  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10552  000C54  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10553  000C58  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10554  000C5C  CFDE FFF6          	movff	postinc2,tblptrl
 10555  000C60  CFDD FFF7          	movff	postdec2,tblptrh
 10556  000C64                     	if	0	;tblptru may be non-zero
 10557  000C64                     	endif
 10558  000C64                     	if	0	;tblptru may be non-zero
 10559  000C64                     	endif
 10560  000C64  0008               	tblrd		*
 10561  000C66  50F5               	movf	tablat,w,c
 10562  000C68  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10563  000C6A  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10564  000C6C  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
 10565  000C6E  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10566  000C70  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10567  000C72  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10568  000C74  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10569  000C76  E106               	bnz	u7660
 10570  000C78  0E0A               	movlw	10
 10571  000C7A  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10572  000C7C  B0D8               	btfsc	status,0,c
 10573  000C7E  D002               	goto	u7660
 10574  000C80  0E01               	movlw	1
 10575  000C82  D001               	goto	u7670
 10576  000C84                     u7660:
 10577  000C84  0E00               	movlw	0
 10578  000C86                     u7670:
 10579  000C86  6FD8               	movwf	_vfpfcnvrt$2105& (0+255),b
 10580  000C88  6BD9               	clrf	(_vfpfcnvrt$2105+1)& (0+255),b
 10581                           
 10582                           ; BSR set to: 0
 10583  000C8A  51D8               	movf	_vfpfcnvrt$2105& (0+255),w,b
 10584  000C8C  11D9               	iorwf	(_vfpfcnvrt$2105+1)& (0+255),w,b
 10585  000C8E  A4D8               	btfss	status,2,c
 10586  000C90  D7D5               	goto	l7547
 10587  000C92                     u7680:
 10588                           
 10589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
 10590  000C92  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10591  000C96  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10592  000C9A  CFDE FFF6          	movff	postinc2,tblptrl
 10593  000C9E  CFDD FFF7          	movff	postdec2,tblptrh
 10594  000CA2                     	if	0	;tblptru may be non-zero
 10595  000CA2                     	endif
 10596  000CA2                     	if	0	;tblptru may be non-zero
 10597  000CA2                     	endif
 10598  000CA2  0008               	tblrd		*
 10599  000CA4  50F5               	movf	tablat,w,c
 10600  000CA6  6E07               	movwf	tolower@c,c
 10601  000CA8  6A08               	clrf	tolower@c+1,c
 10602  000CAA  ECFC  F027         	call	_tolower	;wreg free
 10603  000CAE  5007               	movf	?_tolower,w,c
 10604  000CB0  0100               	movlb	0	; () banked
 10605  000CB2  6FE0               	movwf	vfpfcnvrt@ct& (0+255),b
 10606                           
 10607                           ; BSR set to: 0
 10608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
 10609  000CB4  51E0               	movf	vfpfcnvrt@ct& (0+255),w,b
 10610  000CB6  B4D8               	btfsc	status,2,c
 10611  000CB8  D035               	goto	l7565
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
 10615  000CBA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10616  000CBE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10617  000CC2  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
 10618  000CC6  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
 10619  000CCA  0E01               	movlw	1
 10620  000CCC  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
 10621  000CCE  0E00               	movlw	0
 10622  000CD0  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10623  000CD2  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10624  000CD6  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10625  000CDA                     	if	0	;tblptru may be non-zero
 10626  000CDA                     	endif
 10627  000CDA                     	if	0	;tblptru may be non-zero
 10628  000CDA                     	endif
 10629  000CDA  0008               	tblrd		*
 10630  000CDC  50F5               	movf	tablat,w,c
 10631  000CDE  6E07               	movwf	tolower@c,c
 10632  000CE0  6A08               	clrf	tolower@c+1,c
 10633  000CE2  ECFC  F027         	call	_tolower	;wreg free
 10634  000CE6  5007               	movf	?_tolower,w,c
 10635  000CE8  0100               	movlb	0	; () banked
 10636  000CEA  6FE1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
 10640  000CEC  51E1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
 10641  000CEE  B4D8               	btfsc	status,2,c
 10642  000CF0  D019               	goto	l7565
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
 10646  000CF2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10647  000CF6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10648  000CFA  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
 10649  000CFE  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
 10650  000D02  0E02               	movlw	2
 10651  000D04  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
 10652  000D06  0E00               	movlw	0
 10653  000D08  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10654  000D0A  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10655  000D0E  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10656  000D12                     	if	0	;tblptru may be non-zero
 10657  000D12                     	endif
 10658  000D12                     	if	0	;tblptru may be non-zero
 10659  000D12                     	endif
 10660  000D12  0008               	tblrd		*
 10661  000D14  50F5               	movf	tablat,w,c
 10662  000D16  6E07               	movwf	tolower@c,c
 10663  000D18  6A08               	clrf	tolower@c+1,c
 10664  000D1A  ECFC  F027         	call	_tolower	;wreg free
 10665  000D1E  5007               	movf	?_tolower,w,c
 10666  000D20  0100               	movlb	0	; () banked
 10667  000D22  6FE2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
 10668  000D24                     l7565:
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 10672  000D24  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10673  000D28  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10674  000D2C  CFDE FFF6          	movff	postinc2,tblptrl
 10675  000D30  CFDD FFF7          	movff	postdec2,tblptrh
 10676  000D34                     	if	0	;tblptru may be non-zero
 10677  000D34                     	endif
 10678  000D34                     	if	0	;tblptru may be non-zero
 10679  000D34                     	endif
 10680  000D34  0008               	tblrd		*
 10681  000D36  50F5               	movf	tablat,w,c
 10682  000D38  0A63               	xorlw	99
 10683  000D3A  A4D8               	btfss	status,2,c
 10684  000D3C  D026               	goto	l7573
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 10688  000D3E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10689  000D42  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10690  000D46  2ADE               	incf	postinc2,f,c
 10691  000D48  0E00               	movlw	0
 10692  000D4A  22DD               	addwfc	postdec2,f,c
 10693                           
 10694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10695  000D4C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10696  000D50  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10697  000D54  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 10698  000D58  0E02               	movlw	2
 10699  000D5A  26DE               	addwf	postinc2,f,c
 10700  000D5C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 10701  000D60  0E00               	movlw	0
 10702  000D62  22DD               	addwfc	postdec2,f,c
 10703  000D64  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10704  000D68  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10705  000D6C  50DF               	movf	indf2,w,c
 10706  000D6E  6FE3               	movwf	vfpfcnvrt@c& (0+255),b
 10707                           
 10708                           ; BSR set to: 0
 10709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 10710  000D70  C0B8  F020         	movff	vfpfcnvrt@fp,ctoa@fp
 10711  000D74  C0B9  F021         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10712  000D78  C0E3  F022         	movff	vfpfcnvrt@c,ctoa@c
 10713  000D7C  ECAD  F027         	call	_ctoa	;wreg free
 10714  000D80  C020  F0B8         	movff	?_ctoa,?_vfpfcnvrt
 10715  000D84  C021  F0B9         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10716  000D88  0012               	return	
 10717  000D8A                     l7573:
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10721  000D8A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10722  000D8E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10723  000D92  CFDE FFF6          	movff	postinc2,tblptrl
 10724  000D96  CFDD FFF7          	movff	postdec2,tblptrh
 10725  000D9A                     	if	0	;tblptru may be non-zero
 10726  000D9A                     	endif
 10727  000D9A                     	if	0	;tblptru may be non-zero
 10728  000D9A                     	endif
 10729  000D9A  0008               	tblrd		*
 10730  000D9C  50F5               	movf	tablat,w,c
 10731  000D9E  0A64               	xorlw	100
 10732  000DA0  B4D8               	btfsc	status,2,c
 10733  000DA2  D00D               	goto	u7730
 10734                           
 10735                           ; BSR set to: 0
 10736  000DA4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10737  000DA8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10738  000DAC  CFDE FFF6          	movff	postinc2,tblptrl
 10739  000DB0  CFDD FFF7          	movff	postdec2,tblptrh
 10740  000DB4                     	if	0	;tblptru may be non-zero
 10741  000DB4                     	endif
 10742  000DB4                     	if	0	;tblptru may be non-zero
 10743  000DB4                     	endif
 10744  000DB4  0008               	tblrd		*
 10745  000DB6  50F5               	movf	tablat,w,c
 10746  000DB8  0A69               	xorlw	105
 10747  000DBA  A4D8               	btfss	status,2,c
 10748  000DBC  D03F               	goto	l7583
 10749  000DBE                     u7730:
 10750                           
 10751                           ; BSR set to: 0
 10752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 10753  000DBE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10754  000DC2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10755  000DC6  2ADE               	incf	postinc2,f,c
 10756  000DC8  0E00               	movlw	0
 10757  000DCA  22DD               	addwfc	postdec2,f,c
 10758                           
 10759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10760  000DCC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10761  000DD0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10762  000DD4  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 10763  000DD8  0E02               	movlw	2
 10764  000DDA  26DE               	addwf	postinc2,f,c
 10765  000DDC  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 10766  000DE0  0E00               	movlw	0
 10767  000DE2  22DD               	addwfc	postdec2,f,c
 10768  000DE4  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10769  000DE8  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10770  000DEC  CFDE F0C2          	movff	postinc2,vfpfcnvrt@ll
 10771  000DF0  CFDD F0C3          	movff	postdec2,vfpfcnvrt@ll+1
 10772  000DF4  0E00               	movlw	0
 10773  000DF6  BFC3               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10774  000DF8  0EFF               	movlw	-1
 10775  000DFA  6FC4               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10776  000DFC  6FC5               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10777  000DFE  6FC6               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10778  000E00  6FC7               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10779  000E02  6FC8               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10780  000E04  6FC9               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 10784  000E06  C0B8  F020         	movff	vfpfcnvrt@fp,dtoa@fp
 10785  000E0A  C0B9  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10786  000E0E  C0C2  F022         	movff	vfpfcnvrt@ll,dtoa@d
 10787  000E12  C0C3  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10788  000E16  C0C4  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10789  000E1A  C0C5  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10790  000E1E  C0C6  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10791  000E22  C0C7  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10792  000E26  C0C8  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10793  000E2A  C0C9  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10794  000E2E  EC9F  F014         	call	_dtoa	;wreg free
 10795  000E32  C020  F0B8         	movff	?_dtoa,?_vfpfcnvrt
 10796  000E36  C021  F0B9         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10797  000E3A  0012               	return	
 10798  000E3C                     l7583:
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 10802  000E3C  0E66               	movlw	102
 10803  000E3E  19E0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
 10804  000E40  A4D8               	btfss	status,2,c
 10805  000E42  D03F               	goto	l7595
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 10809  000E44  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10810  000E48  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10811  000E4C  CFDE FFF6          	movff	postinc2,tblptrl
 10812  000E50  CFDD FFF7          	movff	postdec2,tblptrh
 10813  000E54                     	if	0	;tblptru may be non-zero
 10814  000E54                     	endif
 10815  000E54                     	if	0	;tblptru may be non-zero
 10816  000E54                     	endif
 10817  000E54  0008               	tblrd		*
 10818  000E56  CFF5 F0E3          	movff	tablat,vfpfcnvrt@c
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 10822  000E5A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10823  000E5E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10824  000E62  2ADE               	incf	postinc2,f,c
 10825  000E64  0E00               	movlw	0
 10826  000E66  22DD               	addwfc	postdec2,f,c
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10830  000E68  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10831  000E6C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10832  000E70  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 10833  000E74  0E04               	movlw	4
 10834  000E76  26DE               	addwf	postinc2,f,c
 10835  000E78  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 10836  000E7C  0E00               	movlw	0
 10837  000E7E  22DD               	addwfc	postdec2,f,c
 10838  000E80  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10839  000E84  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10840  000E88  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f
 10841  000E8C  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+1
 10842  000E90  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+2
 10843  000E94  CFDE F0DF          	movff	postinc2,vfpfcnvrt@f+3
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 10847  000E98  C0B8  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
 10848  000E9C  C0B9  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 10849  000EA0  C0DC  F072         	movff	vfpfcnvrt@f,efgtoa@f
 10850  000EA4  C0DD  F073         	movff	vfpfcnvrt@f+1,efgtoa@f+1
 10851  000EA8  C0DE  F074         	movff	vfpfcnvrt@f+2,efgtoa@f+2
 10852  000EAC  C0DF  F075         	movff	vfpfcnvrt@f+3,efgtoa@f+3
 10853  000EB0  C0E3  F076         	movff	vfpfcnvrt@c,efgtoa@c
 10854  000EB4  EC09  F000         	call	_efgtoa	;wreg free
 10855  000EB8  C070  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
 10856  000EBC  C071  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
 10857  000EC0  0012               	return	
 10858  000EC2                     l7595:
 10859                           
 10860                           ; BSR set to: 0
 10861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10862  000EC2  0EE0               	movlw	low vfpfcnvrt@ct
 10863  000EC4  6E01               	movwf	strncmp@_l,c
 10864  000EC6  0E00               	movlw	high vfpfcnvrt@ct
 10865  000EC8  6E02               	movwf	strncmp@_l+1,c
 10866  000ECA  0EF9               	movlw	low STR_67
 10867  000ECC  6E03               	movwf	strncmp@_r,c
 10868  000ECE  0EFF               	movlw	high STR_67
 10869  000ED0  6E04               	movwf	strncmp@_r+1,c
 10870  000ED2  0E00               	movlw	0
 10871  000ED4  6E06               	movwf	strncmp@n+1,c
 10872  000ED6  0E02               	movlw	2
 10873  000ED8  6E05               	movwf	strncmp@n,c
 10874  000EDA  ECFE  F020         	call	_strncmp	;wreg free
 10875  000EDE  5001               	movf	?_strncmp,w,c
 10876  000EE0  1002               	iorwf	?_strncmp+1,w,c
 10877  000EE2  A4D8               	btfss	status,2,c
 10878  000EE4  D06A               	goto	l7611
 10879                           
 10880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10881  000EE6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10882  000EEA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10883  000EEE  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
 10884  000EF2  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
 10885  000EF6  0E01               	movlw	1
 10886  000EF8  0100               	movlb	0	; () banked
 10887  000EFA  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
 10888  000EFC  0E00               	movlw	0
 10889  000EFE  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10890  000F00  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10891  000F04  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10892  000F08                     	if	0	;tblptru may be non-zero
 10893  000F08                     	endif
 10894  000F08                     	if	0	;tblptru may be non-zero
 10895  000F08                     	endif
 10896  000F08  0008               	tblrd		*
 10897  000F0A  CFF5 F0E3          	movff	tablat,vfpfcnvrt@c
 10898  000F0E  0EBF               	movlw	191
 10899  000F10  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
 10900  000F12  0EFF               	movlw	255
 10901  000F14  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10902  000F16  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10903  000F1A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10904  000F1E  CFDE FFF6          	movff	postinc2,tblptrl
 10905  000F22  CFDD FFF7          	movff	postdec2,tblptrh
 10906  000F26                     	if	0	;tblptru may be non-zero
 10907  000F26                     	endif
 10908  000F26                     	if	0	;tblptru may be non-zero
 10909  000F26                     	endif
 10910  000F26  0008               	tblrd		*
 10911  000F28  50F5               	movf	tablat,w,c
 10912  000F2A  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10913  000F2C  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10914  000F2E  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
 10915  000F30  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10916  000F32  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10917  000F34  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10918  000F36  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10919  000F38  E106               	bnz	u7760
 10920  000F3A  0E1A               	movlw	26
 10921  000F3C  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10922  000F3E  B0D8               	btfsc	status,0,c
 10923  000F40  D002               	goto	u7760
 10924  000F42  0E01               	movlw	1
 10925  000F44  D001               	goto	u7770
 10926  000F46                     u7760:
 10927  000F46  0E00               	movlw	0
 10928  000F48                     u7770:
 10929  000F48  6FDA               	movwf	_vfpfcnvrt$2111& (0+255),b
 10930  000F4A  6BDB               	clrf	(_vfpfcnvrt$2111+1)& (0+255),b
 10931                           
 10932                           ; BSR set to: 0
 10933  000F4C  51DA               	movf	_vfpfcnvrt$2111& (0+255),w,b
 10934  000F4E  11DB               	iorwf	(_vfpfcnvrt$2111+1)& (0+255),w,b
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10938                           
 10939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 10943  000F50  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10944  000F54  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10945  000F58  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 10946  000F5C  0E04               	movlw	4
 10947  000F5E  26DE               	addwf	postinc2,f,c
 10948  000F60  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 10949  000F64  0E00               	movlw	0
 10950  000F66  22DD               	addwfc	postdec2,f,c
 10951  000F68  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10952  000F6C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10953  000F70  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f
 10954  000F74  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+1
 10955  000F78  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+2
 10956  000F7C  CFDE F0DF          	movff	postinc2,vfpfcnvrt@f+3
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 10960                           
 10961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
 10962  000F80  0E02               	movlw	2
 10963  000F82  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10964  000F86  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10965  000F8A  26DE               	addwf	postinc2,f,c
 10966  000F8C  0E00               	movlw	0
 10967  000F8E  22DD               	addwfc	postdec2,f,c
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 10971  000F90  C0B8  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
 10972  000F94  C0B9  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 10973  000F98  C0DC  F072         	movff	vfpfcnvrt@f,efgtoa@f
 10974  000F9C  C0DD  F073         	movff	vfpfcnvrt@f+1,efgtoa@f+1
 10975  000FA0  C0DE  F074         	movff	vfpfcnvrt@f+2,efgtoa@f+2
 10976  000FA4  C0DF  F075         	movff	vfpfcnvrt@f+3,efgtoa@f+3
 10977  000FA8  C0E3  F076         	movff	vfpfcnvrt@c,efgtoa@c
 10978  000FAC  EC09  F000         	call	_efgtoa	;wreg free
 10979  000FB0  C070  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
 10980  000FB4  C071  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
 10981  000FB8  0012               	return	
 10982  000FBA                     l7611:
 10983                           
 10984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 10985  000FBA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10986  000FBE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10987  000FC2  CFDE FFF6          	movff	postinc2,tblptrl
 10988  000FC6  CFDD FFF7          	movff	postdec2,tblptrh
 10989  000FCA                     	if	0	;tblptru may be non-zero
 10990  000FCA                     	endif
 10991  000FCA                     	if	0	;tblptru may be non-zero
 10992  000FCA                     	endif
 10993  000FCA  0008               	tblrd		*
 10994  000FCC  50F5               	movf	tablat,w,c
 10995  000FCE  0A73               	xorlw	115
 10996  000FD0  A4D8               	btfss	status,2,c
 10997  000FD2  D02A               	goto	l7619
 10998                           
 10999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 11000  000FD4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11001  000FD8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11002  000FDC  2ADE               	incf	postinc2,f,c
 11003  000FDE  0E00               	movlw	0
 11004  000FE0  22DD               	addwfc	postdec2,f,c
 11005                           
 11006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 11007  000FE2  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11008  000FE6  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11009  000FEA  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 11010  000FEE  0E02               	movlw	2
 11011  000FF0  26DE               	addwf	postinc2,f,c
 11012  000FF2  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 11013  000FF6  0E00               	movlw	0
 11014  000FF8  22DD               	addwfc	postdec2,f,c
 11015  000FFA  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11016  000FFE  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11017  001002  CFDE F0D2          	movff	postinc2,vfpfcnvrt@cp
 11018  001006  CFDD F0D3          	movff	postdec2,vfpfcnvrt@cp+1
 11019                           
 11020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 11021  00100A  C0B8  F00E         	movff	vfpfcnvrt@fp,stoa@fp
 11022  00100E  C0B9  F00F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11023  001012  C0D2  F010         	movff	vfpfcnvrt@cp,stoa@s
 11024  001016  C0D3  F011         	movff	vfpfcnvrt@cp+1,stoa@s+1
 11025  00101A  EC9E  F01A         	call	_stoa	;wreg free
 11026  00101E  C00E  F0B8         	movff	?_stoa,?_vfpfcnvrt
 11027  001022  C00F  F0B9         	movff	?_stoa+1,?_vfpfcnvrt+1
 11028  001026  0012               	return	
 11029  001028                     l7619:
 11030                           
 11031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11032  001028  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11033  00102C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11034  001030  CFDE FFF6          	movff	postinc2,tblptrl
 11035  001034  CFDD FFF7          	movff	postdec2,tblptrh
 11036  001038                     	if	0	;tblptru may be non-zero
 11037  001038                     	endif
 11038  001038                     	if	0	;tblptru may be non-zero
 11039  001038                     	endif
 11040  001038  0008               	tblrd		*
 11041  00103A  50F5               	movf	tablat,w,c
 11042  00103C  0A78               	xorlw	120
 11043  00103E  B4D8               	btfsc	status,2,c
 11044  001040  D00D               	goto	u7810
 11045  001042  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11046  001046  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11047  00104A  CFDE FFF6          	movff	postinc2,tblptrl
 11048  00104E  CFDD FFF7          	movff	postdec2,tblptrh
 11049  001052                     	if	0	;tblptru may be non-zero
 11050  001052                     	endif
 11051  001052                     	if	0	;tblptru may be non-zero
 11052  001052                     	endif
 11053  001052  0008               	tblrd		*
 11054  001054  50F5               	movf	tablat,w,c
 11055  001056  0A58               	xorlw	88
 11056  001058  A4D8               	btfss	status,2,c
 11057  00105A  D04E               	goto	l7633
 11058  00105C                     u7810:
 11059                           
 11060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11061  00105C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11062  001060  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11063  001064  CFDE FFF6          	movff	postinc2,tblptrl
 11064  001068  CFDD FFF7          	movff	postdec2,tblptrh
 11065  00106C                     	if	0	;tblptru may be non-zero
 11066  00106C                     	endif
 11067  00106C                     	if	0	;tblptru may be non-zero
 11068  00106C                     	endif
 11069  00106C  0008               	tblrd		*
 11070  00106E  CFF5 F0E3          	movff	tablat,vfpfcnvrt@c
 11071                           
 11072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11073  001072  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11074  001076  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11075  00107A  2ADE               	incf	postinc2,f,c
 11076  00107C  0E00               	movlw	0
 11077  00107E  22DD               	addwfc	postdec2,f,c
 11078                           
 11079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11080  001080  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11081  001084  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11082  001088  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
 11083  00108C  0E02               	movlw	2
 11084  00108E  26DE               	addwf	postinc2,f,c
 11085  001090  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
 11086  001094  0E00               	movlw	0
 11087  001096  22DD               	addwfc	postdec2,f,c
 11088  001098  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11089  00109C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11090  0010A0  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
 11091  0010A4  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
 11092  0010A8  C0C0  F0CA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11093  0010AC  C0C1  F0CB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11094  0010B0  0100               	movlb	0	; () banked
 11095  0010B2  6BCC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11096  0010B4  6BCD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11097  0010B6  6BCE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11098  0010B8  6BCF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11099  0010BA  6BD0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11100  0010BC  6BD1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11104  0010BE  C0B8  F020         	movff	vfpfcnvrt@fp,xtoa@fp
 11105  0010C2  C0B9  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11106  0010C6  C0CA  F022         	movff	vfpfcnvrt@llu,xtoa@d
 11107  0010CA  C0CB  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11108  0010CE  C0CC  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11109  0010D2  C0CD  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11110  0010D6  C0CE  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11111  0010DA  C0CF  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11112  0010DE  C0D0  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11113  0010E2  C0D1  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11114  0010E6  C0E3  F02A         	movff	vfpfcnvrt@c,xtoa@x
 11115  0010EA  ECC3  F015         	call	_xtoa	;wreg free
 11116  0010EE  C020  F0B8         	movff	?_xtoa,?_vfpfcnvrt
 11117  0010F2  C021  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
 11118  0010F6  0012               	return	
 11119  0010F8                     l7633:
 11120                           
 11121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11122  0010F8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11123  0010FC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11124  001100  CFDE FFF6          	movff	postinc2,tblptrl
 11125  001104  CFDD FFF7          	movff	postdec2,tblptrh
 11126  001108                     	if	0	;tblptru may be non-zero
 11127  001108                     	endif
 11128  001108                     	if	0	;tblptru may be non-zero
 11129  001108                     	endif
 11130  001108  0008               	tblrd		*
 11131  00110A  50F5               	movf	tablat,w,c
 11132  00110C  0A25               	xorlw	37
 11133  00110E  A4D8               	btfss	status,2,c
 11134  001110  D017               	goto	l7643
 11135                           
 11136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11137  001112  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11138  001116  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11139  00111A  2ADE               	incf	postinc2,f,c
 11140  00111C  0E00               	movlw	0
 11141  00111E  22DD               	addwfc	postdec2,f,c
 11142                           
 11143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11144  001120  0E00               	movlw	0
 11145  001122  6E06               	movwf	fputc@c+1,c
 11146  001124  0E25               	movlw	37
 11147  001126  6E05               	movwf	fputc@c,c
 11148  001128  C0B8  F007         	movff	vfpfcnvrt@fp,fputc@fp
 11149  00112C  C0B9  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11150  001130  ECCB  F025         	call	_fputc	;wreg free
 11151  001134                     l7639:
 11152                           
 11153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 11154  001134  0E00               	movlw	0
 11155  001136  0100               	movlb	0	; () banked
 11156  001138  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 11157  00113A  0E01               	movlw	1
 11158  00113C  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
 11159  00113E  0012               	return	
 11160  001140                     l7643:
 11161                           
 11162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 11163  001140  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11164  001144  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11165  001148  2ADE               	incf	postinc2,f,c
 11166  00114A  0E00               	movlw	0
 11167  00114C  22DD               	addwfc	postdec2,f,c
 11168                           
 11169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 11170  00114E  0E00               	movlw	0
 11171  001150  0100               	movlb	0	; () banked
 11172  001152  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 11173  001154  0E00               	movlw	0
 11174  001156  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
 11175  001158  0012               	return	
 11176  00115A                     l7649:
 11177                           
 11178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 11179  00115A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11180  00115E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11181  001162  CFDE FFF6          	movff	postinc2,tblptrl
 11182  001166  CFDD FFF7          	movff	postdec2,tblptrh
 11183  00116A                     	if	0	;tblptru may be non-zero
 11184  00116A                     	endif
 11185  00116A                     	if	0	;tblptru may be non-zero
 11186  00116A                     	endif
 11187  00116A  0008               	tblrd		*
 11188  00116C  50F5               	movf	tablat,w,c
 11189  00116E  6E05               	movwf	fputc@c,c
 11190  001170  6A06               	clrf	fputc@c+1,c
 11191  001172  C0B8  F007         	movff	vfpfcnvrt@fp,fputc@fp
 11192  001176  C0B9  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11193  00117A  ECCB  F025         	call	_fputc	;wreg free
 11194                           
 11195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 11196  00117E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11197  001182  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11198  001186  2ADE               	incf	postinc2,f,c
 11199  001188  0E00               	movlw	0
 11200  00118A  22DD               	addwfc	postdec2,f,c
 11201  00118C  D7D3               	goto	l7639
 11202  00118E                     __end_of_vfpfcnvrt:
 11203                           	opt callstack 0
 11204                           
 11205 ;; *************** function _xtoa *****************
 11206 ;; Defined at:
 11207 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 11210 ;;		 -> NULL(0), 
 11211 ;;  d               8   33[COMRAM] unsigned long long 
 11212 ;;  x               1   41[COMRAM] unsigned char 
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;  n               8   58[COMRAM] unsigned long long 
 11215 ;;  c               2   68[COMRAM] int 
 11216 ;;  i               2   66[COMRAM] int 
 11217 ;;  w               2   56[COMRAM] int 
 11218 ;;  p               2   54[COMRAM] int 
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  2   31[COMRAM] int 
 11221 ;; Registers used:
 11222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/0
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11228 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11229 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11230 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11231 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11232 ;;Total ram usage:       39 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; Hardware stack levels required when called:    8
 11235 ;; This function calls:
 11236 ;;		_isalpha
 11237 ;;		_isupper
 11238 ;;		_pad
 11239 ;;		_toupper
 11240 ;; This function is called by:
 11241 ;;		_vfpfcnvrt
 11242 ;; This function uses a non-reentrant model
 11243 ;;
 11244                           
 11245                           	psect	text51
 11246  002B86                     __ptext51:
 11247                           	opt callstack 0
 11248  002B86                     _xtoa:
 11249                           	opt callstack 17
 11250                           
 11251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 11252                           
 11253                           ;incstack = 0
 11254  002B86  0101               	movlb	1	; () banked
 11255  002B88  AF87               	btfss	(_prec+1)& (0+255),7,b
 11256                           
 11257                           ; BSR set to: 1
 11258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 11259  002B8A  9388               	bcf	_flags& (0+255),1,b
 11260                           
 11261                           ; BSR set to: 1
 11262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 11263  002B8C  BF87               	btfsc	(_prec+1)& (0+255),7,b
 11264  002B8E  D005               	goto	u7260
 11265  002B90  5187               	movf	(_prec+1)& (0+255),w,b
 11266  002B92  E108               	bnz	l1269
 11267  002B94  0586               	decf	_prec& (0+255),w,b
 11268  002B96  B0D8               	btfsc	status,0,c
 11269  002B98  D005               	goto	l1269
 11270  002B9A                     u7260:
 11271                           
 11272                           ; BSR set to: 1
 11273  002B9A  0E00               	movlw	0
 11274  002B9C  6E38               	movwf	xtoa@p+1,c
 11275  002B9E  0E01               	movlw	1
 11276  002BA0  6E37               	movwf	xtoa@p,c
 11277  002BA2  D004               	goto	l1271
 11278  002BA4                     l1269:
 11279                           
 11280                           ; BSR set to: 1
 11281  002BA4  C186  F037         	movff	_prec,xtoa@p
 11282  002BA8  C187  F038         	movff	_prec+1,xtoa@p+1
 11283  002BAC                     l1271:
 11284                           
 11285                           ; BSR set to: 1
 11286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 11287  002BAC  C184  F039         	movff	_width,xtoa@w
 11288  002BB0  C185  F03A         	movff	_width+1,xtoa@w+1
 11289                           
 11290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 11291  002BB4  A988               	btfss	_flags& (0+255),4,b
 11292  002BB6  D004               	goto	l7355
 11293                           
 11294                           ; BSR set to: 1
 11295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 11296  002BB8  0EFE               	movlw	254
 11297  002BBA  2639               	addwf	xtoa@w,f,c
 11298  002BBC  0EFF               	movlw	255
 11299  002BBE  223A               	addwfc	xtoa@w+1,f,c
 11300  002BC0                     l7355:
 11301                           
 11302                           ; BSR set to: 1
 11303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 11304  002BC0  C022  F03B         	movff	xtoa@d,xtoa@n
 11305  002BC4  C023  F03C         	movff	xtoa@d+1,xtoa@n+1
 11306  002BC8  C024  F03D         	movff	xtoa@d+2,xtoa@n+2
 11307  002BCC  C025  F03E         	movff	xtoa@d+3,xtoa@n+3
 11308  002BD0  C026  F03F         	movff	xtoa@d+4,xtoa@n+4
 11309  002BD4  C027  F040         	movff	xtoa@d+5,xtoa@n+5
 11310  002BD8  C028  F041         	movff	xtoa@d+6,xtoa@n+6
 11311  002BDC  C029  F042         	movff	xtoa@d+7,xtoa@n+7
 11312                           
 11313                           ; BSR set to: 1
 11314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 11315  002BE0  0E00               	movlw	0
 11316  002BE2  6E44               	movwf	xtoa@i+1,c
 11317  002BE4  0E4F               	movlw	79
 11318  002BE6  6E43               	movwf	xtoa@i,c
 11319                           
 11320                           ; BSR set to: 1
 11321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 11322  002BE8  0E00               	movlw	0
 11323  002BEA  0102               	movlb	2	; () banked
 11324  002BEC  6F4F               	movwf	(_dbuf+79)& (0+255),b
 11325                           
 11326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11327  002BEE  D093               	goto	l7391
 11328  002BF0                     l7361:
 11329                           
 11330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 11331  002BF0  0643               	decf	xtoa@i,f,c
 11332  002BF2  A0D8               	btfss	status,0,c
 11333  002BF4  0644               	decf	xtoa@i+1,f,c
 11334                           
 11335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 11336  002BF6  0E0F               	movlw	15
 11337  002BF8  143B               	andwf	xtoa@n,w,c
 11338  002BFA  6E45               	movwf	xtoa@c,c
 11339  002BFC  6A46               	clrf	xtoa@c+1,c
 11340                           
 11341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 11342  002BFE  BE46               	btfsc	xtoa@c+1,7,c
 11343  002C00  D008               	goto	l7369
 11344  002C02  5046               	movf	xtoa@c+1,w,c
 11345  002C04  E104               	bnz	u7280
 11346  002C06  0E0A               	movlw	10
 11347  002C08  5C45               	subwf	xtoa@c,w,c
 11348  002C0A  A0D8               	btfss	status,0,c
 11349  002C0C  D002               	goto	l7369
 11350  002C0E                     u7280:
 11351  002C0E  0E57               	movlw	87
 11352  002C10  D001               	goto	L22
 11353  002C12                     l7369:
 11354  002C12  0E30               	movlw	48
 11355  002C14                     L22:
 11356  002C14  2445               	addwf	xtoa@c,w,c
 11357  002C16  6E45               	movwf	xtoa@c,c
 11358  002C18  0E00               	movlw	0
 11359  002C1A  2046               	addwfc	xtoa@c+1,w,c
 11360  002C1C  6E46               	movwf	xtoa@c+1,c
 11361                           
 11362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 11363  002C1E  0EBF               	movlw	191
 11364  002C20  6E2B               	movwf	??_xtoa& (0+255),c
 11365  002C22  0EFF               	movlw	255
 11366  002C24  6E2C               	movwf	(??_xtoa+1)& (0+255),c
 11367  002C26  502A               	movf	xtoa@x,w,c
 11368  002C28  6E2D               	movwf	(??_xtoa+2)& (0+255),c
 11369  002C2A  6A2E               	clrf	(??_xtoa+3)& (0+255),c
 11370  002C2C  502B               	movf	??_xtoa,w,c
 11371  002C2E  262D               	addwf	??_xtoa+2,f,c
 11372  002C30  502C               	movf	??_xtoa+1,w,c
 11373  002C32  222E               	addwfc	??_xtoa+3,f,c
 11374  002C34  502E               	movf	??_xtoa+3,w,c
 11375  002C36  E106               	bnz	u7290
 11376  002C38  0E1A               	movlw	26
 11377  002C3A  5C2D               	subwf	??_xtoa+2,w,c
 11378  002C3C  B0D8               	btfsc	status,0,c
 11379  002C3E  D002               	goto	u7290
 11380  002C40  0E01               	movlw	1
 11381  002C42  D001               	goto	u7300
 11382  002C44                     u7290:
 11383  002C44  0E00               	movlw	0
 11384  002C46                     u7300:
 11385  002C46  6E33               	movwf	_xtoa$2089,c
 11386  002C48  6A34               	clrf	_xtoa$2089+1,c
 11387  002C4A  5033               	movf	_xtoa$2089,w,c
 11388  002C4C  1034               	iorwf	_xtoa$2089+1,w,c
 11389  002C4E  B4D8               	btfsc	status,2,c
 11390  002C50  D027               	goto	l7383
 11391  002C52  0E9F               	movlw	159
 11392  002C54  6E2B               	movwf	??_xtoa& (0+255),c
 11393  002C56  0EFF               	movlw	255
 11394  002C58  6E2C               	movwf	(??_xtoa+1)& (0+255),c
 11395  002C5A  0E20               	movlw	32
 11396  002C5C  1045               	iorwf	xtoa@c,w,c
 11397  002C5E  6E2D               	movwf	(??_xtoa+2)& (0+255),c
 11398  002C60  0E00               	movlw	0
 11399  002C62  1046               	iorwf	xtoa@c+1,w,c
 11400  002C64  6E2E               	movwf	(??_xtoa+3)& (0+255),c
 11401  002C66  502B               	movf	??_xtoa,w,c
 11402  002C68  262D               	addwf	??_xtoa+2,f,c
 11403  002C6A  502C               	movf	??_xtoa+1,w,c
 11404  002C6C  222E               	addwfc	??_xtoa+3,f,c
 11405  002C6E  502E               	movf	??_xtoa+3,w,c
 11406  002C70  E106               	bnz	u7320
 11407  002C72  0E1A               	movlw	26
 11408  002C74  5C2D               	subwf	??_xtoa+2,w,c
 11409  002C76  B0D8               	btfsc	status,0,c
 11410  002C78  D002               	goto	u7320
 11411  002C7A  0E01               	movlw	1
 11412  002C7C  D001               	goto	u7330
 11413  002C7E                     u7320:
 11414  002C7E  0E00               	movlw	0
 11415  002C80                     u7330:
 11416  002C80  6E35               	movwf	_xtoa$2090,c
 11417  002C82  6A36               	clrf	_xtoa$2090+1,c
 11418  002C84  5035               	movf	_xtoa$2090,w,c
 11419  002C86  1036               	iorwf	_xtoa$2090+1,w,c
 11420  002C88  B4D8               	btfsc	status,2,c
 11421  002C8A  D00A               	goto	l7383
 11422                           
 11423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11424  002C8C  C045  F007         	movff	xtoa@c,toupper@c
 11425  002C90  C046  F008         	movff	xtoa@c+1,toupper@c+1
 11426  002C94  EC6C  F028         	call	_toupper	;wreg free
 11427  002C98  C007  F045         	movff	?_toupper,xtoa@c
 11428  002C9C  C008  F046         	movff	?_toupper+1,xtoa@c+1
 11429  002CA0                     l7383:
 11430                           
 11431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11432  002CA0  0E00               	movlw	low _dbuf
 11433  002CA2  2443               	addwf	xtoa@i,w,c
 11434  002CA4  6ED9               	movwf	fsr2l,c
 11435  002CA6  0E02               	movlw	high _dbuf
 11436  002CA8  2044               	addwfc	xtoa@i+1,w,c
 11437  002CAA  6EDA               	movwf	fsr2h,c
 11438  002CAC  C045  FFDF         	movff	xtoa@c,indf2
 11439                           
 11440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11441  002CB0  0637               	decf	xtoa@p,f,c
 11442  002CB2  A0D8               	btfss	status,0,c
 11443  002CB4  0638               	decf	xtoa@p+1,f,c
 11444                           
 11445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11446  002CB6  0639               	decf	xtoa@w,f,c
 11447  002CB8  A0D8               	btfss	status,0,c
 11448  002CBA  063A               	decf	xtoa@w+1,f,c
 11449                           
 11450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11451  002CBC  C03B  F02B         	movff	xtoa@n,??_xtoa
 11452  002CC0  C03C  F02C         	movff	xtoa@n+1,??_xtoa+1
 11453  002CC4  C03D  F02D         	movff	xtoa@n+2,??_xtoa+2
 11454  002CC8  C03E  F02E         	movff	xtoa@n+3,??_xtoa+3
 11455  002CCC  C03F  F02F         	movff	xtoa@n+4,??_xtoa+4
 11456  002CD0  C040  F030         	movff	xtoa@n+5,??_xtoa+5
 11457  002CD4  C041  F031         	movff	xtoa@n+6,??_xtoa+6
 11458  002CD8  C042  F032         	movff	xtoa@n+7,??_xtoa+7
 11459  002CDC  0E05               	movlw	5
 11460  002CDE  D009               	goto	u7350
 11461  002CE0                     u7355:
 11462  002CE0  90D8               	bcf	status,0,c
 11463  002CE2  3232               	rrcf	??_xtoa+7,f,c
 11464  002CE4  3231               	rrcf	??_xtoa+6,f,c
 11465  002CE6  3230               	rrcf	??_xtoa+5,f,c
 11466  002CE8  322F               	rrcf	??_xtoa+4,f,c
 11467  002CEA  322E               	rrcf	??_xtoa+3,f,c
 11468  002CEC  322D               	rrcf	??_xtoa+2,f,c
 11469  002CEE  322C               	rrcf	??_xtoa+1,f,c
 11470  002CF0  322B               	rrcf	??_xtoa,f,c
 11471  002CF2                     u7350:
 11472  002CF2  2EE8               	decfsz	wreg,f,c
 11473  002CF4  D7F5               	goto	u7355
 11474  002CF6  C02B  F03B         	movff	??_xtoa,xtoa@n
 11475  002CFA  C02C  F03C         	movff	??_xtoa+1,xtoa@n+1
 11476  002CFE  C02D  F03D         	movff	??_xtoa+2,xtoa@n+2
 11477  002D02  C02E  F03E         	movff	??_xtoa+3,xtoa@n+3
 11478  002D06  C02F  F03F         	movff	??_xtoa+4,xtoa@n+4
 11479  002D0A  C030  F040         	movff	??_xtoa+5,xtoa@n+5
 11480  002D0E  C031  F041         	movff	??_xtoa+6,xtoa@n+6
 11481  002D12  C032  F042         	movff	??_xtoa+7,xtoa@n+7
 11482  002D16                     l7391:
 11483                           
 11484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11485  002D16  BE44               	btfsc	xtoa@i+1,7,c
 11486  002D18  D021               	goto	u7400
 11487  002D1A  5044               	movf	xtoa@i+1,w,c
 11488  002D1C  E104               	bnz	u7360
 11489  002D1E  0E02               	movlw	2
 11490  002D20  5C43               	subwf	xtoa@i,w,c
 11491  002D22  A0D8               	btfss	status,0,c
 11492  002D24  D01B               	goto	u7400
 11493  002D26                     u7360:
 11494  002D26  503B               	movf	xtoa@n,w,c
 11495  002D28  103C               	iorwf	xtoa@n+1,w,c
 11496  002D2A  103D               	iorwf	xtoa@n+2,w,c
 11497  002D2C  103E               	iorwf	xtoa@n+3,w,c
 11498  002D2E  103F               	iorwf	xtoa@n+4,w,c
 11499  002D30  1040               	iorwf	xtoa@n+5,w,c
 11500  002D32  1041               	iorwf	xtoa@n+6,w,c
 11501  002D34  1042               	iorwf	xtoa@n+7,w,c
 11502  002D36  A4D8               	btfss	status,2,c
 11503  002D38  D75B               	goto	l7361
 11504  002D3A  BE38               	btfsc	xtoa@p+1,7,c
 11505  002D3C  D005               	goto	u7380
 11506  002D3E  5038               	movf	xtoa@p+1,w,c
 11507  002D40  E102               	bnz	u7381
 11508  002D42  0437               	decf	xtoa@p,w,c
 11509  002D44  B0D8               	btfsc	status,0,c
 11510  002D46                     u7381:
 11511  002D46  D754               	goto	l7361
 11512  002D48                     u7380:
 11513  002D48  BE3A               	btfsc	xtoa@w+1,7,c
 11514  002D4A  D008               	goto	u7400
 11515  002D4C  503A               	movf	xtoa@w+1,w,c
 11516  002D4E  E103               	bnz	u7390
 11517  002D50  0439               	decf	xtoa@w,w,c
 11518  002D52  A0D8               	btfss	status,0,c
 11519  002D54  D003               	goto	u7400
 11520  002D56                     u7390:
 11521  002D56  0101               	movlb	1	; () banked
 11522  002D58  B388               	btfsc	_flags& (0+255),1,b
 11523  002D5A  D74A               	goto	l7361
 11524  002D5C                     u7400:
 11525                           
 11526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11527  002D5C  0101               	movlb	1	; () banked
 11528  002D5E  A988               	btfss	_flags& (0+255),4,b
 11529  002D60  D016               	goto	l7407
 11530                           
 11531                           ; BSR set to: 1
 11532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11533  002D62  0643               	decf	xtoa@i,f,c
 11534  002D64  A0D8               	btfss	status,0,c
 11535  002D66  0644               	decf	xtoa@i+1,f,c
 11536                           
 11537                           ; BSR set to: 1
 11538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11539  002D68  0E00               	movlw	low _dbuf
 11540  002D6A  2443               	addwf	xtoa@i,w,c
 11541  002D6C  6ED9               	movwf	fsr2l,c
 11542  002D6E  0E02               	movlw	high _dbuf
 11543  002D70  2044               	addwfc	xtoa@i+1,w,c
 11544  002D72  6EDA               	movwf	fsr2h,c
 11545  002D74  C02A  FFDF         	movff	xtoa@x,indf2
 11546                           
 11547                           ; BSR set to: 1
 11548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11549  002D78  0643               	decf	xtoa@i,f,c
 11550  002D7A  A0D8               	btfss	status,0,c
 11551  002D7C  0644               	decf	xtoa@i+1,f,c
 11552                           
 11553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11554  002D7E  0E00               	movlw	low _dbuf
 11555  002D80  2443               	addwf	xtoa@i,w,c
 11556  002D82  6ED9               	movwf	fsr2l,c
 11557  002D84  0E02               	movlw	high _dbuf
 11558  002D86  2044               	addwfc	xtoa@i+1,w,c
 11559  002D88  6EDA               	movwf	fsr2h,c
 11560  002D8A  0E30               	movlw	48
 11561  002D8C  6EDF               	movwf	indf2,c
 11562  002D8E                     l7407:
 11563                           
 11564                           ; BSR set to: 1
 11565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11566  002D8E  C020  F015         	movff	xtoa@fp,pad@fp
 11567  002D92  C021  F016         	movff	xtoa@fp+1,pad@fp+1
 11568  002D96  0E00               	movlw	low _dbuf
 11569  002D98  2443               	addwf	xtoa@i,w,c
 11570  002D9A  6E17               	movwf	pad@buf,c
 11571  002D9C  0E02               	movlw	high _dbuf
 11572  002D9E  2044               	addwfc	xtoa@i+1,w,c
 11573  002DA0  6E18               	movwf	pad@buf+1,c
 11574  002DA2  C039  F019         	movff	xtoa@w,pad@p
 11575  002DA6  C03A  F01A         	movff	xtoa@w+1,pad@p+1
 11576  002DAA  EC4F  F021         	call	_pad	;wreg free
 11577  002DAE  C015  F020         	movff	?_pad,?_xtoa
 11578  002DB2  C016  F021         	movff	?_pad+1,?_xtoa+1
 11579  002DB6  0012               	return		;funcret
 11580  002DB8                     __end_of_xtoa:
 11581                           	opt callstack 0
 11582                           
 11583 ;; *************** function _toupper *****************
 11584 ;; Defined at:
 11585 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  c               2    6[COMRAM] int 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  2    6[COMRAM] int 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;Total ram usage:        8 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    2
 11606 ;; This function calls:
 11607 ;;		_islower
 11608 ;; This function is called by:
 11609 ;;		_xtoa
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text52
 11614  0050D8                     __ptext52:
 11615                           	opt callstack 0
 11616  0050D8                     _toupper:
 11617                           	opt callstack 22
 11618                           
 11619                           ;incstack = 0
 11620  0050D8  0E9F               	movlw	159
 11621  0050DA  6E09               	movwf	??_toupper& (0+255),c
 11622  0050DC  0EFF               	movlw	255
 11623  0050DE  6E0A               	movwf	(??_toupper+1)& (0+255),c
 11624  0050E0  C007  F00B         	movff	toupper@c,??_toupper+2
 11625  0050E4  C008  F00C         	movff	toupper@c+1,??_toupper+3
 11626  0050E8  5009               	movf	??_toupper,w,c
 11627  0050EA  260B               	addwf	??_toupper+2,f,c
 11628  0050EC  500A               	movf	??_toupper+1,w,c
 11629  0050EE  220C               	addwfc	??_toupper+3,f,c
 11630  0050F0  500C               	movf	??_toupper+3,w,c
 11631  0050F2  E106               	bnz	u5570
 11632  0050F4  0E1A               	movlw	26
 11633  0050F6  5C0B               	subwf	??_toupper+2,w,c
 11634  0050F8  B0D8               	btfsc	status,0,c
 11635  0050FA  D002               	goto	u5570
 11636  0050FC  0E01               	movlw	1
 11637  0050FE  D001               	goto	u5580
 11638  005100                     u5570:
 11639  005100  0E00               	movlw	0
 11640  005102                     u5580:
 11641  005102  6E0D               	movwf	_toupper$2714,c
 11642  005104  6A0E               	clrf	_toupper$2714+1,c
 11643  005106  500D               	movf	_toupper$2714,w,c
 11644  005108  100E               	iorwf	_toupper$2714+1,w,c
 11645  00510A  B4D8               	btfsc	status,2,c
 11646  00510C  D005               	goto	l2183
 11647  00510E  0E5F               	movlw	95
 11648  005110  1407               	andwf	toupper@c,w,c
 11649  005112  6E07               	movwf	?_toupper,c
 11650  005114  6A08               	clrf	?_toupper+1,c
 11651  005116  0012               	return	
 11652  005118                     l2183:
 11653  005118  C007  F007         	movff	toupper@c,?_toupper
 11654  00511C  C008  F008         	movff	toupper@c+1,?_toupper+1
 11655  005120  0012               	return		;funcret
 11656  005122                     __end_of_toupper:
 11657                           	opt callstack 0
 11658                           
 11659 ;; *************** function _islower *****************
 11660 ;; Defined at:
 11661 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;  c               2    0[COMRAM] int 
 11664 ;; Auto vars:     Size  Location     Type
 11665 ;;		None
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  2    0[COMRAM] int 
 11668 ;; Registers used:
 11669 ;;		wreg, status,2, status,0
 11670 ;; Tracked objects:
 11671 ;;		On entry : 0/0
 11672 ;;		On exit  : 0/0
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;Total ram usage:        6 bytes
 11680 ;; Hardware stack levels used:    1
 11681 ;; Hardware stack levels required when called:    1
 11682 ;; This function calls:
 11683 ;;		Nothing
 11684 ;; This function is called by:
 11685 ;;		_toupper
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           
 11689                           	psect	text53
 11690  0052FE                     __ptext53:
 11691                           	opt callstack 0
 11692  0052FE                     _islower:
 11693                           	opt callstack 22
 11694                           
 11695                           ;incstack = 0
 11696  0052FE  0E9F               	movlw	159
 11697  005300  6E03               	movwf	??_islower& (0+255),c
 11698  005302  0EFF               	movlw	255
 11699  005304  6E04               	movwf	(??_islower+1)& (0+255),c
 11700  005306  C001  F005         	movff	islower@c,??_islower+2
 11701  00530A  C002  F006         	movff	islower@c+1,??_islower+3
 11702  00530E  5003               	movf	??_islower,w,c
 11703  005310  2605               	addwf	??_islower+2,f,c
 11704  005312  5004               	movf	??_islower+1,w,c
 11705  005314  2206               	addwfc	??_islower+3,f,c
 11706  005316  5006               	movf	??_islower+3,w,c
 11707  005318  E106               	bnz	u5260
 11708  00531A  0E1A               	movlw	26
 11709  00531C  5C05               	subwf	??_islower+2,w,c
 11710  00531E  B0D8               	btfsc	status,0,c
 11711  005320  D002               	goto	u5260
 11712  005322  0E01               	movlw	1
 11713  005324  D001               	goto	u5270
 11714  005326                     u5260:
 11715  005326  0E00               	movlw	0
 11716  005328                     u5270:
 11717  005328  6E01               	movwf	?_islower,c
 11718  00532A  6A02               	clrf	?_islower+1,c
 11719  00532C  0012               	return		;funcret
 11720  00532E                     __end_of_islower:
 11721                           	opt callstack 0
 11722                           
 11723 ;; *************** function _isalpha *****************
 11724 ;; Defined at:
 11725 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;  c               2    0[COMRAM] int 
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;		None
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  2    0[COMRAM] int 
 11732 ;; Registers used:
 11733 ;;		wreg, status,2, status,0
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11742 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11743 ;;Total ram usage:        6 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; Hardware stack levels required when called:    1
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_xtoa
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text54
 11754  005268                     __ptext54:
 11755                           	opt callstack 0
 11756  005268                     _isalpha:
 11757                           	opt callstack 23
 11758                           
 11759                           ;incstack = 0
 11760  005268  0E9F               	movlw	159
 11761  00526A  6E03               	movwf	??_isalpha& (0+255),c
 11762  00526C  0EFF               	movlw	255
 11763  00526E  6E04               	movwf	(??_isalpha+1)& (0+255),c
 11764  005270  0E20               	movlw	32
 11765  005272  1001               	iorwf	isalpha@c,w,c
 11766  005274  6E05               	movwf	(??_isalpha+2)& (0+255),c
 11767  005276  0E00               	movlw	0
 11768  005278  1002               	iorwf	isalpha@c+1,w,c
 11769  00527A  6E06               	movwf	(??_isalpha+3)& (0+255),c
 11770  00527C  5003               	movf	??_isalpha,w,c
 11771  00527E  2605               	addwf	??_isalpha+2,f,c
 11772  005280  5004               	movf	??_isalpha+1,w,c
 11773  005282  2206               	addwfc	??_isalpha+3,f,c
 11774  005284  5006               	movf	??_isalpha+3,w,c
 11775  005286  E106               	bnz	u5550
 11776  005288  0E1A               	movlw	26
 11777  00528A  5C05               	subwf	??_isalpha+2,w,c
 11778  00528C  B0D8               	btfsc	status,0,c
 11779  00528E  D002               	goto	u5550
 11780  005290  0E01               	movlw	1
 11781  005292  D001               	goto	u5560
 11782  005294                     u5550:
 11783  005294  0E00               	movlw	0
 11784  005296                     u5560:
 11785  005296  6E01               	movwf	?_isalpha,c
 11786  005298  6A02               	clrf	?_isalpha+1,c
 11787  00529A  0012               	return		;funcret
 11788  00529C                     __end_of_isalpha:
 11789                           	opt callstack 0
 11790                           
 11791 ;; *************** function _strncmp *****************
 11792 ;; Defined at:
 11793 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 11796 ;;		 -> vfpfcnvrt@ct(3), 
 11797 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 11798 ;;		 -> STR_69(3), 
 11799 ;;  n               2    4[COMRAM] unsigned int 
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  r               2    9[COMRAM] PTR const unsigned char 
 11802 ;;		 -> STR_69(3), 
 11803 ;;  l               2    7[COMRAM] PTR const unsigned char 
 11804 ;;		 -> vfpfcnvrt@ct(3), 
 11805 ;; Return value:  Size  Location     Type
 11806 ;;                  2    0[COMRAM] int 
 11807 ;; Registers used:
 11808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11809 ;; Tracked objects:
 11810 ;;		On entry : 0/0
 11811 ;;		On exit  : 0/0
 11812 ;;		Unchanged: 0/0
 11813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11814 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11818 ;;Total ram usage:       11 bytes
 11819 ;; Hardware stack levels used:    1
 11820 ;; Hardware stack levels required when called:    1
 11821 ;; This function calls:
 11822 ;;		Nothing
 11823 ;; This function is called by:
 11824 ;;		_vfpfcnvrt
 11825 ;; This function uses a non-reentrant model
 11826 ;;
 11827                           
 11828                           	psect	text55
 11829  0041FC                     __ptext55:
 11830                           	opt callstack 0
 11831  0041FC                     _strncmp:
 11832                           	opt callstack 24
 11833                           
 11834                           ;incstack = 0
 11835  0041FC  C001  F008         	movff	strncmp@_l,strncmp@l
 11836  004200  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
 11837  004204  C003  F00A         	movff	strncmp@_r,strncmp@r
 11838  004208  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
 11839  00420C  0605               	decf	strncmp@n,f,c
 11840  00420E  A0D8               	btfss	status,0,c
 11841  004210  0606               	decf	strncmp@n+1,f,c
 11842  004212  2805               	incf	strncmp@n,w,c
 11843  004214  E10F               	bnz	l7461
 11844  004216  2806               	incf	strncmp@n+1,w,c
 11845  004218  A4D8               	btfss	status,2,c
 11846  00421A  D00C               	goto	l7461
 11847  00421C  0E00               	movlw	0
 11848  00421E  6E02               	movwf	?_strncmp+1,c
 11849  004220  0E00               	movlw	0
 11850  004222  6E01               	movwf	?_strncmp,c
 11851  004224  0012               	return	
 11852  004226                     l7459:
 11853  004226  4A08               	infsnz	strncmp@l,f,c
 11854  004228  2A09               	incf	strncmp@l+1,f,c
 11855  00422A  4A0A               	infsnz	strncmp@r,f,c
 11856  00422C  2A0B               	incf	strncmp@r+1,f,c
 11857  00422E  0605               	decf	strncmp@n,f,c
 11858  004230  A0D8               	btfss	status,0,c
 11859  004232  0606               	decf	strncmp@n+1,f,c
 11860  004234                     l7461:
 11861  004234  C008  FFD9         	movff	strncmp@l,fsr2l
 11862  004238  C009  FFDA         	movff	strncmp@l+1,fsr2h
 11863  00423C  50DF               	movf	indf2,w,c
 11864  00423E  B4D8               	btfsc	status,2,c
 11865  004240  D01C               	goto	u7530
 11866  004242  C00A  FFF6         	movff	strncmp@r,tblptrl
 11867  004246  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 11868  00424A                     	if	0	;tblptru may be non-zero
 11869  00424A                     	endif
 11870  00424A                     	if	0	;tblptru may be non-zero
 11871  00424A                     	endif
 11872  00424A  0008               	tblrd		*
 11873  00424C  50F5               	movf	tablat,w,c
 11874  00424E  0900               	iorlw	0
 11875  004250  B4D8               	btfsc	status,2,c
 11876  004252  D013               	goto	u7530
 11877  004254  5005               	movf	strncmp@n,w,c
 11878  004256  1006               	iorwf	strncmp@n+1,w,c
 11879  004258  B4D8               	btfsc	status,2,c
 11880  00425A  D00F               	goto	u7530
 11881  00425C  C008  FFD9         	movff	strncmp@l,fsr2l
 11882  004260  C009  FFDA         	movff	strncmp@l+1,fsr2h
 11883  004264  50DF               	movf	indf2,w,c
 11884  004266  6E07               	movwf	??_strncmp& (0+255),c
 11885  004268  C00A  FFF6         	movff	strncmp@r,tblptrl
 11886  00426C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 11887  004270                     	if	0	;tblptru may be non-zero
 11888  004270                     	endif
 11889  004270                     	if	0	;tblptru may be non-zero
 11890  004270                     	endif
 11891  004270  0008               	tblrd		*
 11892  004272  50F5               	movf	tablat,w,c
 11893  004274  1807               	xorwf	??_strncmp,w,c
 11894  004276  B4D8               	btfsc	status,2,c
 11895  004278  D7D6               	goto	l7459
 11896  00427A                     u7530:
 11897  00427A  C008  FFD9         	movff	strncmp@l,fsr2l
 11898  00427E  C009  FFDA         	movff	strncmp@l+1,fsr2h
 11899  004282  50DF               	movf	indf2,w,c
 11900  004284  6E07               	movwf	??_strncmp& (0+255),c
 11901  004286  C00A  FFF6         	movff	strncmp@r,tblptrl
 11902  00428A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 11903  00428E                     	if	0	;tblptru may be non-zero
 11904  00428E                     	endif
 11905  00428E                     	if	0	;tblptru may be non-zero
 11906  00428E                     	endif
 11907  00428E  0008               	tblrd		*
 11908  004290  50F5               	movf	tablat,w,c
 11909  004292  5C07               	subwf	??_strncmp,w,c
 11910  004294  6E01               	movwf	?_strncmp,c
 11911  004296  6A02               	clrf	?_strncmp+1,c
 11912  004298  A0D8               	btfss	status,0,c
 11913  00429A  0602               	decf	?_strncmp+1,f,c
 11914  00429C  0012               	return		;funcret
 11915  00429E                     __end_of_strncmp:
 11916                           	opt callstack 0
 11917                           
 11918 ;; *************** function _stoa *****************
 11919 ;; Defined at:
 11920 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 11923 ;;		 -> NULL(0), 
 11924 ;;  s               2   15[COMRAM] PTR unsigned char 
 11925 ;;		 -> ?_printf(2), STR_48(6), 
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;  nuls            7   18[COMRAM] unsigned char [7]
 11928 ;;  l               2   33[COMRAM] int 
 11929 ;;  p               2   31[COMRAM] int 
 11930 ;;  cp              2   29[COMRAM] PTR unsigned char 
 11931 ;;		 -> ?_printf(2), stoa@nuls(7), STR_48(6), 
 11932 ;;  w               2   27[COMRAM] int 
 11933 ;;  i               2   25[COMRAM] int 
 11934 ;; Return value:  Size  Location     Type
 11935 ;;                  2   13[COMRAM] int 
 11936 ;; Registers used:
 11937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11938 ;; Tracked objects:
 11939 ;;		On entry : 0/0
 11940 ;;		On exit  : 0/0
 11941 ;;		Unchanged: 0/0
 11942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11946 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11947 ;;Total ram usage:       22 bytes
 11948 ;; Hardware stack levels used:    1
 11949 ;; Hardware stack levels required when called:    6
 11950 ;; This function calls:
 11951 ;;		_fputc
 11952 ;;		_strlen
 11953 ;; This function is called by:
 11954 ;;		_vfpfcnvrt
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text56
 11959  00353C                     __ptext56:
 11960                           	opt callstack 0
 11961  00353C                     _stoa:
 11962                           	opt callstack 19
 11963                           
 11964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11965                           
 11966                           ;incstack = 0
 11967  00353C  EE21  F0F2         	lfsr	2,stoa@F1166
 11968  003540  EE10  F013         	lfsr	1,stoa@nuls
 11969  003544  0E06               	movlw	6
 11970  003546                     u7151:
 11971  003546  CFDB FFE3          	movff	plusw2,plusw1
 11972  00354A  06E8               	decf	wreg,f,c
 11973  00354C  E2FC               	bc	u7151
 11974                           
 11975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 11976  00354E  C010  F01E         	movff	stoa@s,stoa@cp
 11977  003552  C011  F01F         	movff	stoa@s+1,stoa@cp+1
 11978                           
 11979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 11980  003556  501E               	movf	stoa@cp,w,c
 11981  003558  101F               	iorwf	stoa@cp+1,w,c
 11982  00355A  A4D8               	btfss	status,2,c
 11983  00355C  D004               	goto	l7311
 11984                           
 11985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 11986  00355E  0E13               	movlw	low stoa@nuls
 11987  003560  6E1E               	movwf	stoa@cp,c
 11988  003562  0E00               	movlw	high stoa@nuls
 11989  003564  6E1F               	movwf	stoa@cp+1,c
 11990  003566                     l7311:
 11991                           
 11992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 11993  003566  C01E  F001         	movff	stoa@cp,strlen@s
 11994  00356A  C01F  F002         	movff	stoa@cp+1,strlen@s+1
 11995  00356E  ECD7  F028         	call	_strlen	;wreg free
 11996  003572  C001  F022         	movff	?_strlen,stoa@l
 11997  003576  C002  F023         	movff	?_strlen+1,stoa@l+1
 11998                           
 11999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 12000  00357A  C186  F020         	movff	_prec,stoa@p
 12001  00357E  C187  F021         	movff	_prec+1,stoa@p+1
 12002                           
 12003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 12004  003582  BE21               	btfsc	stoa@p+1,7,c
 12005  003584  D00E               	goto	l1250
 12006  003586  5022               	movf	stoa@l,w,c
 12007  003588  5C20               	subwf	stoa@p,w,c
 12008  00358A  5021               	movf	stoa@p+1,w,c
 12009  00358C  0A80               	xorlw	128
 12010  00358E  6E12               	movwf	??_stoa& (0+255),c
 12011  003590  5023               	movf	stoa@l+1,w,c
 12012  003592  0A80               	xorlw	128
 12013  003594  5812               	subwfb	??_stoa& (0+255),w,c
 12014  003596  B0D8               	btfsc	status,0,c
 12015  003598  D004               	goto	l1250
 12016  00359A  C020  F022         	movff	stoa@p,stoa@l
 12017  00359E  C021  F023         	movff	stoa@p+1,stoa@l+1
 12018  0035A2                     l1250:
 12019                           
 12020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 12021  0035A2  C022  F020         	movff	stoa@l,stoa@p
 12022  0035A6  C023  F021         	movff	stoa@l+1,stoa@p+1
 12023                           
 12024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 12025  0035AA  C184  F01C         	movff	_width,stoa@w
 12026  0035AE  C185  F01D         	movff	_width+1,stoa@w+1
 12027                           
 12028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 12029  0035B2  0101               	movlb	1	; () banked
 12030  0035B4  A188               	btfss	_flags& (0+255),0,b
 12031  0035B6  D00D               	goto	l7325
 12032  0035B8  D016               	goto	u7200
 12033  0035BA                     l7321:
 12034                           
 12035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 12036  0035BA  0E00               	movlw	0
 12037  0035BC  6E06               	movwf	fputc@c+1,c
 12038  0035BE  0E20               	movlw	32
 12039  0035C0  6E05               	movwf	fputc@c,c
 12040  0035C2  C00E  F007         	movff	stoa@fp,fputc@fp
 12041  0035C6  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
 12042  0035CA  ECCB  F025         	call	_fputc	;wreg free
 12043                           
 12044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 12045  0035CE  4A22               	infsnz	stoa@l,f,c
 12046  0035D0  2A23               	incf	stoa@l+1,f,c
 12047  0035D2                     l7325:
 12048                           
 12049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 12050  0035D2  501C               	movf	stoa@w,w,c
 12051  0035D4  5C22               	subwf	stoa@l,w,c
 12052  0035D6  5023               	movf	stoa@l+1,w,c
 12053  0035D8  0A80               	xorlw	128
 12054  0035DA  6E12               	movwf	??_stoa& (0+255),c
 12055  0035DC  501D               	movf	stoa@w+1,w,c
 12056  0035DE  0A80               	xorlw	128
 12057  0035E0  5812               	subwfb	??_stoa& (0+255),w,c
 12058  0035E2  A0D8               	btfss	status,0,c
 12059  0035E4  D7EA               	goto	l7321
 12060  0035E6                     u7200:
 12061                           
 12062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 12063  0035E6  0E00               	movlw	0
 12064  0035E8  6E1B               	movwf	stoa@i+1,c
 12065  0035EA  0E00               	movlw	0
 12066  0035EC  6E1A               	movwf	stoa@i,c
 12067                           
 12068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 12069  0035EE  D01F               	goto	l7335
 12070  0035F0                     l7329:
 12071                           
 12072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 12073  0035F0  C01E  FFF6         	movff	stoa@cp,tblptrl
 12074  0035F4  C01F  FFF7         	movff	stoa@cp+1,tblptrh
 12075  0035F8  0E00               	movlw	low (__mediumconst shr (0+16))
 12076  0035FA  6EF8               	movwf	tblptru,c
 12077  0035FC  0E0F               	movlw	(high __ramtop+-1)
 12078  0035FE  64F7               	cpfsgt	tblptrh,c
 12079  003600  D003               	bra	u7217
 12080  003602  0008               	tblrd		*
 12081  003604  50F5               	movf	tablat,w,c
 12082  003606  D005               	bra	u7210
 12083  003608                     u7217:
 12084  003608  CFF6 FFE9          	movff	tblptrl,fsr0l
 12085  00360C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12086  003610  50EF               	movf	indf0,w,c
 12087  003612                     u7210:
 12088  003612  6E12               	movwf	??_stoa& (0+255),c
 12089  003614  5012               	movf	??_stoa,w,c
 12090  003616  6E05               	movwf	fputc@c,c
 12091  003618  6A06               	clrf	fputc@c+1,c
 12092  00361A  C00E  F007         	movff	stoa@fp,fputc@fp
 12093  00361E  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
 12094  003622  ECCB  F025         	call	_fputc	;wreg free
 12095                           
 12096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 12097  003626  4A1E               	infsnz	stoa@cp,f,c
 12098  003628  2A1F               	incf	stoa@cp+1,f,c
 12099                           
 12100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 12101  00362A  4A1A               	infsnz	stoa@i,f,c
 12102  00362C  2A1B               	incf	stoa@i+1,f,c
 12103  00362E                     l7335:
 12104                           
 12105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 12106  00362E  5020               	movf	stoa@p,w,c
 12107  003630  5C1A               	subwf	stoa@i,w,c
 12108  003632  501B               	movf	stoa@i+1,w,c
 12109  003634  0A80               	xorlw	128
 12110  003636  6E12               	movwf	??_stoa& (0+255),c
 12111  003638  5021               	movf	stoa@p+1,w,c
 12112  00363A  0A80               	xorlw	128
 12113  00363C  5812               	subwfb	??_stoa& (0+255),w,c
 12114  00363E  A0D8               	btfss	status,0,c
 12115  003640  D7D7               	goto	l7329
 12116                           
 12117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 12118  003642  0101               	movlb	1	; () banked
 12119  003644  B188               	btfsc	_flags& (0+255),0,b
 12120  003646  D00D               	goto	l7343
 12121  003648  D016               	goto	u7240
 12122  00364A                     l7339:
 12123                           
 12124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 12125  00364A  0E00               	movlw	0
 12126  00364C  6E06               	movwf	fputc@c+1,c
 12127  00364E  0E20               	movlw	32
 12128  003650  6E05               	movwf	fputc@c,c
 12129  003652  C00E  F007         	movff	stoa@fp,fputc@fp
 12130  003656  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
 12131  00365A  ECCB  F025         	call	_fputc	;wreg free
 12132                           
 12133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 12134  00365E  4A22               	infsnz	stoa@l,f,c
 12135  003660  2A23               	incf	stoa@l+1,f,c
 12136  003662                     l7343:
 12137                           
 12138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 12139  003662  501C               	movf	stoa@w,w,c
 12140  003664  5C22               	subwf	stoa@l,w,c
 12141  003666  5023               	movf	stoa@l+1,w,c
 12142  003668  0A80               	xorlw	128
 12143  00366A  6E12               	movwf	??_stoa& (0+255),c
 12144  00366C  501D               	movf	stoa@w+1,w,c
 12145  00366E  0A80               	xorlw	128
 12146  003670  5812               	subwfb	??_stoa& (0+255),w,c
 12147  003672  A0D8               	btfss	status,0,c
 12148  003674  D7EA               	goto	l7339
 12149  003676                     u7240:
 12150                           
 12151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 12152                           
 12153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 12154  003676  C022  F00E         	movff	stoa@l,?_stoa
 12155  00367A  C023  F00F         	movff	stoa@l+1,?_stoa+1
 12156  00367E  0012               	return		;funcret
 12157  003680                     __end_of_stoa:
 12158                           	opt callstack 0
 12159                           
 12160 ;; *************** function _efgtoa *****************
 12161 ;; Defined at:
 12162 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;  fp              2  111[COMRAM] PTR struct _IO_FILE
 12165 ;;		 -> NULL(0), 
 12166 ;;  f               4  113[COMRAM] PTR struct _IO_FILE
 12167 ;;  c               1  117[COMRAM] unsigned char 
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;  u               4   52[BANK0 ] unsigned char 
 12170 ;;  g               4   44[BANK0 ] unsigned char 
 12171 ;;  l               4   38[BANK0 ] unsigned char 
 12172 ;;  h               4   34[BANK0 ] unsigned char 
 12173 ;;  ou              4    0[BANK0 ] unsigned char 
 12174 ;;  n               2   50[BANK0 ] int 
 12175 ;;  e               2   48[BANK0 ] int 
 12176 ;;  i               2   42[BANK0 ] int 
 12177 ;;  w               2   31[BANK0 ] int 
 12178 ;;  p               2   28[BANK0 ] int 
 12179 ;;  sign            2   26[BANK0 ] int 
 12180 ;;  d               2   24[BANK0 ] int 
 12181 ;;  ne              2   22[BANK0 ] int 
 12182 ;;  m               2   20[BANK0 ] int 
 12183 ;;  pp              2   18[BANK0 ] int 
 12184 ;;  t               2   16[BANK0 ] int 
 12185 ;;  mode            1   33[BANK0 ] unsigned char 
 12186 ;;  nmode           1   30[BANK0 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  2  111[COMRAM] int 
 12189 ;; Registers used:
 12190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12196 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12198 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12199 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12200 ;;Total ram usage:       68 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:    8
 12203 ;; This function calls:
 12204 ;;		___awdiv
 12205 ;;		___awmod
 12206 ;;		___fladd
 12207 ;;		___fldiv
 12208 ;;		___fleq
 12209 ;;		___flge
 12210 ;;		___flmul
 12211 ;;		___flneg
 12212 ;;		___flsub
 12213 ;;		___fltol
 12214 ;;		___fpclassifyf
 12215 ;;		_floorf
 12216 ;;		_isupper
 12217 ;;		_pad
 12218 ;;		_strcpy
 12219 ;;		_tolower
 12220 ;; This function is called by:
 12221 ;;		_vfpfcnvrt
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225                           	psect	text57
 12226  000012                     __ptext57:
 12227                           	opt callstack 0
 12228  000012                     _efgtoa:
 12229                           	opt callstack 17
 12230                           
 12231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
 12232                           
 12233                           ;incstack = 0
 12234  000012  0E00               	movlw	0
 12235  000014  0100               	movlb	0	; () banked
 12236  000016  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 12237  000018  0E00               	movlw	0
 12238  00001A  6F9A               	movwf	efgtoa@sign& (0+255),b
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
 12242  00001C  C072  F0AC         	movff	efgtoa@f,efgtoa@g
 12243  000020  C073  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
 12244  000024  C074  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
 12245  000028  C075  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
 12249  00002C  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
 12250  00002E  D016               	goto	l7015
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
 12254  000030  0E00               	movlw	0
 12255  000032  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 12256  000034  0E01               	movlw	1
 12257  000036  6F9A               	movwf	efgtoa@sign& (0+255),b
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
 12261  000038  C0AC  F001         	movff	efgtoa@g,___flneg@f1
 12262  00003C  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
 12263  000040  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
 12264  000044  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
 12265  000048  ECF5  F029         	call	___flneg	;wreg free
 12266  00004C  C001  F0AC         	movff	?___flneg,efgtoa@g
 12267  000050  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
 12268  000054  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
 12269  000058  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
 12270  00005C                     l7015:
 12271                           
 12272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
 12273  00005C  0E00               	movlw	0
 12274  00005E  0100               	movlb	0	; () banked
 12275  000060  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
 12276  000062  0E00               	movlw	0
 12277  000064  6FB2               	movwf	efgtoa@n& (0+255),b
 12278                           
 12279                           ; BSR set to: 0
 12280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
 12281  000066  C184  F09F         	movff	_width,efgtoa@w
 12282  00006A  C185  F0A0         	movff	_width+1,efgtoa@w+1
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
 12286  00006E  519A               	movf	efgtoa@sign& (0+255),w,b
 12287  000070  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 12288  000072  A4D8               	btfss	status,2,c
 12289  000074  D003               	goto	u6650
 12290                           
 12291                           ; BSR set to: 0
 12292  000076  0101               	movlb	1	; () banked
 12293  000078  A588               	btfss	_flags& (0+255),2,b
 12294  00007A  D014               	goto	l7035
 12295  00007C                     u6650:
 12296                           
 12297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
 12298  00007C  0100               	movlb	0	; () banked
 12299  00007E  519A               	movf	efgtoa@sign& (0+255),w,b
 12300  000080  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 12301  000082  A4D8               	btfss	status,2,c
 12302  000084  D004               	goto	l7027
 12303                           
 12304                           ; BSR set to: 0
 12305  000086  0E00               	movlw	0
 12306  000088  6F85               	movwf	(_efgtoa$2058+1)& (0+255),b
 12307  00008A  0E2B               	movlw	43
 12308  00008C  D003               	goto	L23
 12309  00008E                     l7027:
 12310                           
 12311                           ; BSR set to: 0
 12312  00008E  0E00               	movlw	0
 12313  000090  6F85               	movwf	(_efgtoa$2058+1)& (0+255),b
 12314  000092  0E2D               	movlw	45
 12315  000094                     L23:
 12316  000094  6F84               	movwf	_efgtoa$2058& (0+255),b
 12317                           
 12318                           ; BSR set to: 0
 12319  000096  C084  F200         	movff	_efgtoa$2058,_dbuf
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
 12323  00009A  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 12324  00009C  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
 12328  00009E  079F               	decf	efgtoa@w& (0+255),f,b
 12329  0000A0  A0D8               	btfss	status,0,c
 12330  0000A2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 12331  0000A4                     l7035:
 12332                           
 12333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12334  0000A4  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
 12335  0000A8  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 12336  0000AC  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 12337  0000B0  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 12338  0000B4  ECE7  F01F         	call	___fpclassifyf	;wreg free
 12339  0000B8  0401               	decf	?___fpclassifyf,w,c
 12340  0000BA  1002               	iorwf	?___fpclassifyf+1,w,c
 12341  0000BC  A4D8               	btfss	status,2,c
 12342  0000BE  D04C               	goto	l7053
 12343  0000C0  0EBF               	movlw	191
 12344  0000C2  6E77               	movwf	??_efgtoa& (0+255),c
 12345  0000C4  0EFF               	movlw	255
 12346  0000C6  6E78               	movwf	(??_efgtoa+1)& (0+255),c
 12347  0000C8  5076               	movf	efgtoa@c,w,c
 12348  0000CA  6E79               	movwf	(??_efgtoa+2)& (0+255),c
 12349  0000CC  6A7A               	clrf	(??_efgtoa+3)& (0+255),c
 12350  0000CE  5077               	movf	??_efgtoa,w,c
 12351  0000D0  2679               	addwf	??_efgtoa+2,f,c
 12352  0000D2  5078               	movf	??_efgtoa+1,w,c
 12353  0000D4  227A               	addwfc	??_efgtoa+3,f,c
 12354  0000D6  507A               	movf	??_efgtoa+3,w,c
 12355  0000D8  E106               	bnz	u6680
 12356  0000DA  0E1A               	movlw	26
 12357  0000DC  5C79               	subwf	??_efgtoa+2,w,c
 12358  0000DE  B0D8               	btfsc	status,0,c
 12359  0000E0  D002               	goto	u6680
 12360  0000E2  0E01               	movlw	1
 12361  0000E4  D001               	goto	u6690
 12362  0000E6                     u6680:
 12363  0000E6  0E00               	movlw	0
 12364  0000E8                     u6690:
 12365  0000E8  0100               	movlb	0	; () banked
 12366  0000EA  6F86               	movwf	_efgtoa$2059& (0+255),b
 12367  0000EC  6B87               	clrf	(_efgtoa$2059+1)& (0+255),b
 12368                           
 12369                           ; BSR set to: 0
 12370  0000EE  5186               	movf	_efgtoa$2059& (0+255),w,b
 12371  0000F0  1187               	iorwf	(_efgtoa$2059+1)& (0+255),w,b
 12372  0000F2  B4D8               	btfsc	status,2,c
 12373  0000F4  D00D               	goto	l7045
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
 12377  0000F6  0E00               	movlw	low _dbuf
 12378  0000F8  25B2               	addwf	efgtoa@n& (0+255),w,b
 12379  0000FA  6E01               	movwf	strcpy@dest,c
 12380  0000FC  0E02               	movlw	high _dbuf
 12381  0000FE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12382  000100  6E02               	movwf	strcpy@dest+1,c
 12383  000102  0EE9               	movlw	low STR_59
 12384  000104  6E03               	movwf	strcpy@src,c
 12385  000106  0EFF               	movlw	high STR_59
 12386  000108  6E04               	movwf	strcpy@src+1,c
 12387  00010A  EC83  F027         	call	_strcpy	;wreg free
 12388                           
 12389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
 12390  00010E  D00C               	goto	l7047
 12391  000110                     l7045:
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
 12395  000110  0E00               	movlw	low _dbuf
 12396  000112  25B2               	addwf	efgtoa@n& (0+255),w,b
 12397  000114  6E01               	movwf	strcpy@dest,c
 12398  000116  0E02               	movlw	high _dbuf
 12399  000118  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12400  00011A  6E02               	movwf	strcpy@dest+1,c
 12401  00011C  0EF1               	movlw	low STR_60
 12402  00011E  6E03               	movwf	strcpy@src,c
 12403  000120  0EFF               	movlw	high STR_60
 12404  000122  6E04               	movwf	strcpy@src+1,c
 12405  000124  EC83  F027         	call	_strcpy	;wreg free
 12406  000128                     l7047:
 12407                           
 12408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 12409  000128  0100               	movlb	0	; () banked
 12410  00012A  0EFD               	movlw	253
 12411  00012C  279F               	addwf	efgtoa@w& (0+255),f,b
 12412  00012E  0EFF               	movlw	255
 12413  000130  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
 12417  000132  C070  F015         	movff	efgtoa@fp,pad@fp
 12418  000136  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
 12419  00013A  0E00               	movlw	low _dbuf
 12420  00013C  6E17               	movwf	pad@buf,c
 12421  00013E  0E02               	movlw	high _dbuf
 12422  000140  6E18               	movwf	pad@buf+1,c
 12423  000142  C09F  F019         	movff	efgtoa@w,pad@p
 12424  000146  C0A0  F01A         	movff	efgtoa@w+1,pad@p+1
 12425  00014A  EC4F  F021         	call	_pad	;wreg free
 12426  00014E  C015  F070         	movff	?_pad,?_efgtoa
 12427  000152  C016  F071         	movff	?_pad+1,?_efgtoa+1
 12428  000156  0012               	return	
 12429  000158                     l7053:
 12430                           
 12431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12432  000158  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
 12433  00015C  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 12434  000160  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 12435  000164  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 12436  000168  ECE7  F01F         	call	___fpclassifyf	;wreg free
 12437  00016C  5001               	movf	?___fpclassifyf,w,c
 12438  00016E  1002               	iorwf	?___fpclassifyf+1,w,c
 12439  000170  A4D8               	btfss	status,2,c
 12440  000172  D04C               	goto	l7071
 12441  000174  0EBF               	movlw	191
 12442  000176  6E77               	movwf	??_efgtoa& (0+255),c
 12443  000178  0EFF               	movlw	255
 12444  00017A  6E78               	movwf	(??_efgtoa+1)& (0+255),c
 12445  00017C  5076               	movf	efgtoa@c,w,c
 12446  00017E  6E79               	movwf	(??_efgtoa+2)& (0+255),c
 12447  000180  6A7A               	clrf	(??_efgtoa+3)& (0+255),c
 12448  000182  5077               	movf	??_efgtoa,w,c
 12449  000184  2679               	addwf	??_efgtoa+2,f,c
 12450  000186  5078               	movf	??_efgtoa+1,w,c
 12451  000188  227A               	addwfc	??_efgtoa+3,f,c
 12452  00018A  507A               	movf	??_efgtoa+3,w,c
 12453  00018C  E106               	bnz	u6720
 12454  00018E  0E1A               	movlw	26
 12455  000190  5C79               	subwf	??_efgtoa+2,w,c
 12456  000192  B0D8               	btfsc	status,0,c
 12457  000194  D002               	goto	u6720
 12458  000196  0E01               	movlw	1
 12459  000198  D001               	goto	u6730
 12460  00019A                     u6720:
 12461  00019A  0E00               	movlw	0
 12462  00019C                     u6730:
 12463  00019C  0100               	movlb	0	; () banked
 12464  00019E  6F88               	movwf	_efgtoa$2063& (0+255),b
 12465  0001A0  6B89               	clrf	(_efgtoa$2063+1)& (0+255),b
 12466                           
 12467                           ; BSR set to: 0
 12468  0001A2  5188               	movf	_efgtoa$2063& (0+255),w,b
 12469  0001A4  1189               	iorwf	(_efgtoa$2063+1)& (0+255),w,b
 12470  0001A6  B4D8               	btfsc	status,2,c
 12471  0001A8  D00D               	goto	l7063
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
 12475  0001AA  0E00               	movlw	low _dbuf
 12476  0001AC  25B2               	addwf	efgtoa@n& (0+255),w,b
 12477  0001AE  6E01               	movwf	strcpy@dest,c
 12478  0001B0  0E02               	movlw	high _dbuf
 12479  0001B2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12480  0001B4  6E02               	movwf	strcpy@dest+1,c
 12481  0001B6  0EED               	movlw	low STR_63
 12482  0001B8  6E03               	movwf	strcpy@src,c
 12483  0001BA  0EFF               	movlw	high STR_63
 12484  0001BC  6E04               	movwf	strcpy@src+1,c
 12485  0001BE  EC83  F027         	call	_strcpy	;wreg free
 12486                           
 12487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
 12488  0001C2  D00C               	goto	l7065
 12489  0001C4                     l7063:
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
 12493  0001C4  0E00               	movlw	low _dbuf
 12494  0001C6  25B2               	addwf	efgtoa@n& (0+255),w,b
 12495  0001C8  6E01               	movwf	strcpy@dest,c
 12496  0001CA  0E02               	movlw	high _dbuf
 12497  0001CC  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12498  0001CE  6E02               	movwf	strcpy@dest+1,c
 12499  0001D0  0EF5               	movlw	low STR_64
 12500  0001D2  6E03               	movwf	strcpy@src,c
 12501  0001D4  0EFF               	movlw	high STR_64
 12502  0001D6  6E04               	movwf	strcpy@src+1,c
 12503  0001D8  EC83  F027         	call	_strcpy	;wreg free
 12504  0001DC                     l7065:
 12505                           
 12506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 12507  0001DC  0100               	movlb	0	; () banked
 12508  0001DE  0EFD               	movlw	253
 12509  0001E0  279F               	addwf	efgtoa@w& (0+255),f,b
 12510  0001E2  0EFF               	movlw	255
 12511  0001E4  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
 12515  0001E6  C070  F015         	movff	efgtoa@fp,pad@fp
 12516  0001EA  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
 12517  0001EE  0E00               	movlw	low _dbuf
 12518  0001F0  6E17               	movwf	pad@buf,c
 12519  0001F2  0E02               	movlw	high _dbuf
 12520  0001F4  6E18               	movwf	pad@buf+1,c
 12521  0001F6  C09F  F019         	movff	efgtoa@w,pad@p
 12522  0001FA  C0A0  F01A         	movff	efgtoa@w+1,pad@p+1
 12523  0001FE  EC4F  F021         	call	_pad	;wreg free
 12524  000202  C015  F070         	movff	?_pad,?_efgtoa
 12525  000206  C016  F071         	movff	?_pad+1,?_efgtoa+1
 12526  00020A  0012               	return	
 12527  00020C                     l7071:
 12528                           
 12529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
 12530  00020C  0E00               	movlw	0
 12531  00020E  0100               	movlb	0	; () banked
 12532  000210  6FB4               	movwf	efgtoa@u& (0+255),b
 12533  000212  0E00               	movlw	0
 12534  000214  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
 12535  000216  0E80               	movlw	128
 12536  000218  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
 12537  00021A  0E3F               	movlw	63
 12538  00021C  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
 12539                           
 12540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
 12541  00021E  0E00               	movlw	0
 12542  000220  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
 12543  000222  0E00               	movlw	0
 12544  000224  6FB0               	movwf	efgtoa@e& (0+255),b
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
 12548  000226  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
 12549  00022A  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 12550  00022E  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 12551  000232  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 12552  000236  0E00               	movlw	0
 12553  000238  6E05               	movwf	___fleq@ff2,c
 12554  00023A  0E00               	movlw	0
 12555  00023C  6E06               	movwf	___fleq@ff2+1,c
 12556  00023E  0E00               	movlw	0
 12557  000240  6E07               	movwf	___fleq@ff2+2,c
 12558  000242  0E00               	movlw	0
 12559  000244  6E08               	movwf	___fleq@ff2+3,c
 12560  000246  EC64  F023         	call	___fleq	;wreg free
 12561  00024A  A0D8               	btfss	status,0,c
 12562  00024C  D01E               	goto	l7081
 12563  00024E  D076               	goto	u6770
 12564  000250                     l7077:
 12565                           
 12566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 12567  000250  C0B4  F02D         	movff	efgtoa@u,___flmul@b
 12568  000254  C0B5  F02E         	movff	efgtoa@u+1,___flmul@b+1
 12569  000258  C0B6  F02F         	movff	efgtoa@u+2,___flmul@b+2
 12570  00025C  C0B7  F030         	movff	efgtoa@u+3,___flmul@b+3
 12571  000260  0E00               	movlw	0
 12572  000262  6E31               	movwf	___flmul@a,c
 12573  000264  0E00               	movlw	0
 12574  000266  6E32               	movwf	___flmul@a+1,c
 12575  000268  0E20               	movlw	32
 12576  00026A  6E33               	movwf	___flmul@a+2,c
 12577  00026C  0E41               	movlw	65
 12578  00026E  6E34               	movwf	___flmul@a+3,c
 12579  000270  ECA4  F00A         	call	___flmul	;wreg free
 12580  000274  C02D  F0B4         	movff	?___flmul,efgtoa@u
 12581  000278  C02E  F0B5         	movff	?___flmul+1,efgtoa@u+1
 12582  00027C  C02F  F0B6         	movff	?___flmul+2,efgtoa@u+2
 12583  000280  C030  F0B7         	movff	?___flmul+3,efgtoa@u+3
 12584                           
 12585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 12586  000284  0100               	movlb	0	; () banked
 12587  000286  4BB0               	infsnz	efgtoa@e& (0+255),f,b
 12588  000288  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
 12589  00028A                     l7081:
 12590                           
 12591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 12592  00028A  C0AC  F064         	movff	efgtoa@g,___flge@ff1
 12593  00028E  C0AD  F065         	movff	efgtoa@g+1,___flge@ff1+1
 12594  000292  C0AE  F066         	movff	efgtoa@g+2,___flge@ff1+2
 12595  000296  C0AF  F067         	movff	efgtoa@g+3,___flge@ff1+3
 12596  00029A  0E00               	movlw	0
 12597  00029C  6E31               	movwf	___flmul@a,c
 12598  00029E  0E00               	movlw	0
 12599  0002A0  6E32               	movwf	___flmul@a+1,c
 12600  0002A2  0E20               	movlw	32
 12601  0002A4  6E33               	movwf	___flmul@a+2,c
 12602  0002A6  0E41               	movlw	65
 12603  0002A8  6E34               	movwf	___flmul@a+3,c
 12604  0002AA  C0B4  F02D         	movff	efgtoa@u,___flmul@b
 12605  0002AE  C0B5  F02E         	movff	efgtoa@u+1,___flmul@b+1
 12606  0002B2  C0B6  F02F         	movff	efgtoa@u+2,___flmul@b+2
 12607  0002B6  C0B7  F030         	movff	efgtoa@u+3,___flmul@b+3
 12608  0002BA  ECA4  F00A         	call	___flmul	;wreg free
 12609  0002BE  C02D  F068         	movff	?___flmul,___flge@ff2
 12610  0002C2  C02E  F069         	movff	?___flmul+1,___flge@ff2+1
 12611  0002C6  C02F  F06A         	movff	?___flmul+2,___flge@ff2+2
 12612  0002CA  C030  F06B         	movff	?___flmul+3,___flge@ff2+3
 12613  0002CE  EC7F  F01F         	call	___flge	;wreg free
 12614  0002D2  A0D8               	btfss	status,0,c
 12615  0002D4  D01F               	goto	l7087
 12616  0002D6  D7BC               	goto	l7077
 12617  0002D8                     l7083:
 12618                           
 12619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 12620  0002D8  C0B4  F001         	movff	efgtoa@u,___fldiv@b
 12621  0002DC  C0B5  F002         	movff	efgtoa@u+1,___fldiv@b+1
 12622  0002E0  C0B6  F003         	movff	efgtoa@u+2,___fldiv@b+2
 12623  0002E4  C0B7  F004         	movff	efgtoa@u+3,___fldiv@b+3
 12624  0002E8  0E00               	movlw	0
 12625  0002EA  6E05               	movwf	___fldiv@a,c
 12626  0002EC  0E00               	movlw	0
 12627  0002EE  6E06               	movwf	___fldiv@a+1,c
 12628  0002F0  0E20               	movlw	32
 12629  0002F2  6E07               	movwf	___fldiv@a+2,c
 12630  0002F4  0E41               	movlw	65
 12631  0002F6  6E08               	movwf	___fldiv@a+3,c
 12632  0002F8  EC2F  F012         	call	___fldiv	;wreg free
 12633  0002FC  C001  F0B4         	movff	?___fldiv,efgtoa@u
 12634  000300  C002  F0B5         	movff	?___fldiv+1,efgtoa@u+1
 12635  000304  C003  F0B6         	movff	?___fldiv+2,efgtoa@u+2
 12636  000308  C004  F0B7         	movff	?___fldiv+3,efgtoa@u+3
 12637                           
 12638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 12639  00030C  0100               	movlb	0	; () banked
 12640  00030E  07B0               	decf	efgtoa@e& (0+255),f,b
 12641  000310  A0D8               	btfss	status,0,c
 12642  000312  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
 12643  000314                     l7087:
 12644                           
 12645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 12646  000314  C0AC  F064         	movff	efgtoa@g,___flge@ff1
 12647  000318  C0AD  F065         	movff	efgtoa@g+1,___flge@ff1+1
 12648  00031C  C0AE  F066         	movff	efgtoa@g+2,___flge@ff1+2
 12649  000320  C0AF  F067         	movff	efgtoa@g+3,___flge@ff1+3
 12650  000324  C0B4  F068         	movff	efgtoa@u,___flge@ff2
 12651  000328  C0B5  F069         	movff	efgtoa@u+1,___flge@ff2+1
 12652  00032C  C0B6  F06A         	movff	efgtoa@u+2,___flge@ff2+2
 12653  000330  C0B7  F06B         	movff	efgtoa@u+3,___flge@ff2+3
 12654  000334  EC7F  F01F         	call	___flge	;wreg free
 12655  000338  A0D8               	btfss	status,0,c
 12656  00033A  D7CE               	goto	l7083
 12657  00033C                     u6770:
 12658                           
 12659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 12660  00033C  C076  F007         	movff	efgtoa@c,tolower@c
 12661  000340  6A08               	clrf	tolower@c+1,c
 12662  000342  ECFC  F027         	call	_tolower	;wreg free
 12663  000346  5007               	movf	?_tolower,w,c
 12664  000348  0100               	movlb	0	; () banked
 12665  00034A  6FA1               	movwf	efgtoa@mode& (0+255),b
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 12669  00034C  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 12673  000350  0E67               	movlw	103
 12674  000352  19A1               	xorwf	efgtoa@mode& (0+255),w,b
 12675  000354  A4D8               	btfss	status,2,c
 12676  000356  D01B               	goto	l7103
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 12680  000358  0101               	movlb	1	; () banked
 12681  00035A  5186               	movf	_prec& (0+255),w,b
 12682  00035C  1187               	iorwf	(_prec+1)& (0+255),w,b
 12683  00035E  A4D8               	btfss	status,2,c
 12684  000360  D004               	goto	l7099
 12685                           
 12686                           ; BSR set to: 1
 12687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 12688  000362  0E00               	movlw	0
 12689  000364  6F87               	movwf	(_prec+1)& (0+255),b
 12690  000366  0E01               	movlw	1
 12691  000368  6F86               	movwf	_prec& (0+255),b
 12692  00036A                     l7099:
 12693                           
 12694                           ; BSR set to: 1
 12695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 12696  00036A  BF87               	btfsc	(_prec+1)& (0+255),7,b
 12697  00036C  D005               	goto	u6800
 12698  00036E  5187               	movf	(_prec+1)& (0+255),w,b
 12699  000370  E109               	bnz	l1186
 12700  000372  0586               	decf	_prec& (0+255),w,b
 12701  000374  B0D8               	btfsc	status,0,c
 12702  000376  D006               	goto	l1186
 12703  000378                     u6800:
 12704                           
 12705                           ; BSR set to: 1
 12706  000378  0E00               	movlw	0
 12707  00037A  0100               	movlb	0	; () banked
 12708  00037C  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
 12709  00037E  0E06               	movlw	6
 12710  000380  6F9C               	movwf	efgtoa@p& (0+255),b
 12711  000382  D009               	goto	l7109
 12712  000384                     l1186:
 12713                           
 12714                           ; BSR set to: 1
 12715  000384  C186  F09C         	movff	_prec,efgtoa@p
 12716  000388  C187  F09D         	movff	_prec+1,efgtoa@p+1
 12717  00038C  D004               	goto	l7109
 12718  00038E                     l7103:
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 12722  00038E  0101               	movlb	1	; () banked
 12723  000390  AF87               	btfss	(_prec+1)& (0+255),7,b
 12724  000392  D7F8               	goto	l1186
 12725  000394  D7F1               	goto	u6800
 12726  000396                     l7109:
 12727                           
 12728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 12729  000396  0E67               	movlw	103
 12730  000398  0100               	movlb	0	; () banked
 12731  00039A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
 12732  00039C  A4D8               	btfss	status,2,c
 12733  00039E  D022               	goto	l7119
 12734                           
 12735                           ; BSR set to: 0
 12736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 12737  0003A0  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
 12738  0003A2  D006               	goto	u6830
 12739  0003A4  0EFC               	movlw	252
 12740  0003A6  5DB0               	subwf	efgtoa@e& (0+255),w,b
 12741  0003A8  0EFF               	movlw	255
 12742  0003AA  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
 12743  0003AC  A0D8               	btfss	status,0,c
 12744  0003AE  D018               	goto	l7117
 12745  0003B0                     u6830:
 12746                           
 12747                           ; BSR set to: 0
 12748  0003B0  0EFF               	movlw	255
 12749  0003B2  6E77               	movwf	??_efgtoa& (0+255),c
 12750  0003B4  0EFF               	movlw	255
 12751  0003B6  6E78               	movwf	(??_efgtoa+1)& (0+255),c
 12752  0003B8  C09C  F079         	movff	efgtoa@p,??_efgtoa+2
 12753  0003BC  C09D  F07A         	movff	efgtoa@p+1,??_efgtoa+3
 12754  0003C0  5077               	movf	??_efgtoa,w,c
 12755  0003C2  2679               	addwf	??_efgtoa+2,f,c
 12756  0003C4  5078               	movf	??_efgtoa+1,w,c
 12757  0003C6  227A               	addwfc	??_efgtoa+3,f,c
 12758  0003C8  51B0               	movf	efgtoa@e& (0+255),w,b
 12759  0003CA  5C79               	subwf	??_efgtoa+2,w,c
 12760  0003CC  507A               	movf	??_efgtoa+3,w,c
 12761  0003CE  0A80               	xorlw	128
 12762  0003D0  6E7B               	movwf	(??_efgtoa+4)& (0+255),c
 12763  0003D2  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
 12764  0003D4  0A80               	xorlw	128
 12765  0003D6  587B               	subwfb	(??_efgtoa+4)& (0+255),w,c
 12766  0003D8  A0D8               	btfss	status,0,c
 12767  0003DA  D002               	goto	l7117
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 12771  0003DC  0E66               	movlw	102
 12772  0003DE  D001               	goto	L24
 12773  0003E0                     l7117:
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 12777  0003E0  0E65               	movlw	101
 12778  0003E2                     L24:
 12779  0003E2  6F9E               	movwf	efgtoa@nmode& (0+255),b
 12780  0003E4                     l7119:
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 12784  0003E4  C09C  F094         	movff	efgtoa@p,efgtoa@m
 12785  0003E8  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 12789  0003EC  0E67               	movlw	103
 12790  0003EE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
 12791  0003F0  A4D8               	btfss	status,2,c
 12792  0003F2  D005               	goto	u6870
 12793                           
 12794                           ; BSR set to: 0
 12795  0003F4  0E66               	movlw	102
 12796  0003F6  199E               	xorwf	efgtoa@nmode& (0+255),w,b
 12797  0003F8  B4D8               	btfsc	status,2,c
 12798                           
 12799                           ; BSR set to: 0
 12800  0003FA  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
 12801  0003FC  D002               	goto	l7129
 12802  0003FE                     u6870:
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 12806  0003FE  4B94               	infsnz	efgtoa@m& (0+255),f,b
 12807  000400  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
 12808  000402                     l7129:
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 12812  000402  0E66               	movlw	102
 12813  000404  199E               	xorwf	efgtoa@nmode& (0+255),w,b
 12814  000406  A4D8               	btfss	status,2,c
 12815  000408  D016               	goto	l7139
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 12819  00040A  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
 12820  00040C  D00C               	goto	l7135
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 12824  00040E  0E00               	movlw	0
 12825  000410  6FB4               	movwf	efgtoa@u& (0+255),b
 12826  000412  0E00               	movlw	0
 12827  000414  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
 12828  000416  0E80               	movlw	128
 12829  000418  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
 12830  00041A  0E3F               	movlw	63
 12831  00041C  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
 12832                           
 12833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 12834  00041E  0E00               	movlw	0
 12835  000420  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
 12836  000422  0E00               	movlw	0
 12837  000424  6FB0               	movwf	efgtoa@e& (0+255),b
 12838  000426                     l7135:
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 12842  000426  0E67               	movlw	103
 12843  000428  19A1               	xorwf	efgtoa@mode& (0+255),w,b
 12844  00042A  B4D8               	btfsc	status,2,c
 12845  00042C  D004               	goto	l7139
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 12849  00042E  51B0               	movf	efgtoa@e& (0+255),w,b
 12850  000430  2794               	addwf	efgtoa@m& (0+255),f,b
 12851  000432  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
 12852  000434  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
 12853  000436                     l7139:
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 12857  000436  0E00               	movlw	0
 12858  000438  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
 12859  00043A  0E00               	movlw	0
 12860  00043C  6FAA               	movwf	efgtoa@i& (0+255),b
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 12864  00043E  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
 12865  000442  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
 12866  000446  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
 12867  00044A  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 12871  00044E  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
 12872  000452  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
 12873  000456  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
 12874  00045A  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
 12875                           
 12876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 12877  00045E  D07B               	goto	l7153
 12878  000460                     l7145:
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 12882  000460  C0A2  F001         	movff	efgtoa@h,___fldiv@b
 12883  000464  C0A3  F002         	movff	efgtoa@h+1,___fldiv@b+1
 12884  000468  C0A4  F003         	movff	efgtoa@h+2,___fldiv@b+2
 12885  00046C  C0A5  F004         	movff	efgtoa@h+3,___fldiv@b+3
 12886  000470  C0B4  F005         	movff	efgtoa@u,___fldiv@a
 12887  000474  C0B5  F006         	movff	efgtoa@u+1,___fldiv@a+1
 12888  000478  C0B6  F007         	movff	efgtoa@u+2,___fldiv@a+2
 12889  00047C  C0B7  F008         	movff	efgtoa@u+3,___fldiv@a+3
 12890  000480  EC2F  F012         	call	___fldiv	;wreg free
 12891  000484  C001  F01A         	movff	?___fldiv,floorf@x
 12892  000488  C002  F01B         	movff	?___fldiv+1,floorf@x+1
 12893  00048C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
 12894  000490  C004  F01D         	movff	?___fldiv+3,floorf@x+3
 12895  000494  ECDC  F016         	call	_floorf	;wreg free
 12896  000498  C01A  F0A6         	movff	?_floorf,efgtoa@l
 12897  00049C  C01B  F0A7         	movff	?_floorf+1,efgtoa@l+1
 12898  0004A0  C01C  F0A8         	movff	?_floorf+2,efgtoa@l+2
 12899  0004A4  C01D  F0A9         	movff	?_floorf+3,efgtoa@l+3
 12900                           
 12901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 12902  0004A8  C0A6  F001         	movff	efgtoa@l,___fltol@f1
 12903  0004AC  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12904  0004B0  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12905  0004B4  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12906  0004B8  EC4D  F020         	call	___fltol	;wreg free
 12907  0004BC  C001  F098         	movff	?___fltol,efgtoa@d
 12908  0004C0  C002  F099         	movff	?___fltol+1,efgtoa@d+1
 12909                           
 12910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 12911  0004C4  C0A2  F05C         	movff	efgtoa@h,___flsub@b
 12912  0004C8  C0A3  F05D         	movff	efgtoa@h+1,___flsub@b+1
 12913  0004CC  C0A4  F05E         	movff	efgtoa@h+2,___flsub@b+2
 12914  0004D0  C0A5  F05F         	movff	efgtoa@h+3,___flsub@b+3
 12915  0004D4  C0B4  F031         	movff	efgtoa@u,___flmul@a
 12916  0004D8  C0B5  F032         	movff	efgtoa@u+1,___flmul@a+1
 12917  0004DC  C0B6  F033         	movff	efgtoa@u+2,___flmul@a+2
 12918  0004E0  C0B7  F034         	movff	efgtoa@u+3,___flmul@a+3
 12919  0004E4  C0A6  F02D         	movff	efgtoa@l,___flmul@b
 12920  0004E8  C0A7  F02E         	movff	efgtoa@l+1,___flmul@b+1
 12921  0004EC  C0A8  F02F         	movff	efgtoa@l+2,___flmul@b+2
 12922  0004F0  C0A9  F030         	movff	efgtoa@l+3,___flmul@b+3
 12923  0004F4  ECA4  F00A         	call	___flmul	;wreg free
 12924  0004F8  C02D  F060         	movff	?___flmul,___flsub@a
 12925  0004FC  C02E  F061         	movff	?___flmul+1,___flsub@a+1
 12926  000500  C02F  F062         	movff	?___flmul+2,___flsub@a+2
 12927  000504  C030  F063         	movff	?___flmul+3,___flsub@a+3
 12928  000508  ECB4  F028         	call	___flsub	;wreg free
 12929  00050C  C05C  F0A2         	movff	?___flsub,efgtoa@h
 12930  000510  C05D  F0A3         	movff	?___flsub+1,efgtoa@h+1
 12931  000514  C05E  F0A4         	movff	?___flsub+2,efgtoa@h+2
 12932  000518  C05F  F0A5         	movff	?___flsub+3,efgtoa@h+3
 12933                           
 12934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 12935  00051C  C0B4  F001         	movff	efgtoa@u,___fldiv@b
 12936  000520  C0B5  F002         	movff	efgtoa@u+1,___fldiv@b+1
 12937  000524  C0B6  F003         	movff	efgtoa@u+2,___fldiv@b+2
 12938  000528  C0B7  F004         	movff	efgtoa@u+3,___fldiv@b+3
 12939  00052C  0E00               	movlw	0
 12940  00052E  6E05               	movwf	___fldiv@a,c
 12941  000530  0E00               	movlw	0
 12942  000532  6E06               	movwf	___fldiv@a+1,c
 12943  000534  0E20               	movlw	32
 12944  000536  6E07               	movwf	___fldiv@a+2,c
 12945  000538  0E41               	movlw	65
 12946  00053A  6E08               	movwf	___fldiv@a+3,c
 12947  00053C  EC2F  F012         	call	___fldiv	;wreg free
 12948  000540  C001  F0B4         	movff	?___fldiv,efgtoa@u
 12949  000544  C002  F0B5         	movff	?___fldiv+1,efgtoa@u+1
 12950  000548  C003  F0B6         	movff	?___fldiv+2,efgtoa@u+2
 12951  00054C  C004  F0B7         	movff	?___fldiv+3,efgtoa@u+3
 12952                           
 12953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 12954  000550  0100               	movlb	0	; () banked
 12955  000552  4BAA               	infsnz	efgtoa@i& (0+255),f,b
 12956  000554  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
 12957  000556                     l7153:
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 12961  000556  5194               	movf	efgtoa@m& (0+255),w,b
 12962  000558  5DAA               	subwf	efgtoa@i& (0+255),w,b
 12963  00055A  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
 12964  00055C  0A80               	xorlw	128
 12965  00055E  6E77               	movwf	??_efgtoa& (0+255),c
 12966  000560  5195               	movf	(efgtoa@m+1)& (0+255),w,b
 12967  000562  0A80               	xorlw	128
 12968  000564  5877               	subwfb	??_efgtoa& (0+255),w,c
 12969  000566  A0D8               	btfss	status,0,c
 12970  000568  D77B               	goto	l7145
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 12974  00056A  C0B4  F02D         	movff	efgtoa@u,___flmul@b
 12975  00056E  C0B5  F02E         	movff	efgtoa@u+1,___flmul@b+1
 12976  000572  C0B6  F02F         	movff	efgtoa@u+2,___flmul@b+2
 12977  000576  C0B7  F030         	movff	efgtoa@u+3,___flmul@b+3
 12978  00057A  0E00               	movlw	0
 12979  00057C  6E31               	movwf	___flmul@a,c
 12980  00057E  0E00               	movlw	0
 12981  000580  6E32               	movwf	___flmul@a+1,c
 12982  000582  0EA0               	movlw	160
 12983  000584  6E33               	movwf	___flmul@a+2,c
 12984  000586  0E40               	movlw	64
 12985  000588  6E34               	movwf	___flmul@a+3,c
 12986  00058A  ECA4  F00A         	call	___flmul	;wreg free
 12987  00058E  C02D  F0A6         	movff	?___flmul,efgtoa@l
 12988  000592  C02E  F0A7         	movff	?___flmul+1,efgtoa@l+1
 12989  000596  C02F  F0A8         	movff	?___flmul+2,efgtoa@l+2
 12990  00059A  C030  F0A9         	movff	?___flmul+3,efgtoa@l+3
 12991                           
 12992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 12993  00059E  C0A2  F064         	movff	efgtoa@h,___flge@ff1
 12994  0005A2  C0A3  F065         	movff	efgtoa@h+1,___flge@ff1+1
 12995  0005A6  C0A4  F066         	movff	efgtoa@h+2,___flge@ff1+2
 12996  0005AA  C0A5  F067         	movff	efgtoa@h+3,___flge@ff1+3
 12997  0005AE  C0A6  F068         	movff	efgtoa@l,___flge@ff2
 12998  0005B2  C0A7  F069         	movff	efgtoa@l+1,___flge@ff2+1
 12999  0005B6  C0A8  F06A         	movff	efgtoa@l+2,___flge@ff2+2
 13000  0005BA  C0A9  F06B         	movff	efgtoa@l+3,___flge@ff2+3
 13001  0005BE  EC7F  F01F         	call	___flge	;wreg free
 13002  0005C2  B0D8               	btfsc	status,0,c
 13003  0005C4  D003               	goto	l7161
 13004                           
 13005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 13006  0005C6  0E00               	movlw	0
 13007  0005C8  0100               	movlb	0	; () banked
 13008  0005CA  D018               	goto	L25
 13009  0005CC                     l7161:
 13010                           
 13011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 13012  0005CC  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
 13013  0005D0  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 13014  0005D4  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 13015  0005D8  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 13016  0005DC  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
 13017  0005E0  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 13018  0005E4  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 13019  0005E8  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 13020  0005EC  EC64  F023         	call	___fleq	;wreg free
 13021  0005F0  A0D8               	btfss	status,0,c
 13022  0005F2  D00B               	goto	l7167
 13023  0005F4  0100               	movlb	0	; () banked
 13024  0005F6  B198               	btfsc	efgtoa@d& (0+255),0,b
 13025  0005F8  D008               	goto	l7167
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 13029  0005FA  0E00               	movlw	0
 13030  0005FC                     L25:
 13031  0005FC  6FA6               	movwf	efgtoa@l& (0+255),b
 13032  0005FE  0E00               	movlw	0
 13033  000600  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
 13034  000602  0E00               	movlw	0
 13035  000604  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
 13036  000606  0E00               	movlw	0
 13037  000608  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
 13038  00060A                     l7167:
 13039                           
 13040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 13041  00060A  C0AC  F04C         	movff	efgtoa@g,___fladd@b
 13042  00060E  C0AD  F04D         	movff	efgtoa@g+1,___fladd@b+1
 13043  000612  C0AE  F04E         	movff	efgtoa@g+2,___fladd@b+2
 13044  000616  C0AF  F04F         	movff	efgtoa@g+3,___fladd@b+3
 13045  00061A  C0A6  F050         	movff	efgtoa@l,___fladd@a
 13046  00061E  C0A7  F051         	movff	efgtoa@l+1,___fladd@a+1
 13047  000622  C0A8  F052         	movff	efgtoa@l+2,___fladd@a+2
 13048  000626  C0A9  F053         	movff	efgtoa@l+3,___fladd@a+3
 13049  00062A  ECEF  F00D         	call	___fladd	;wreg free
 13050  00062E  C04C  F0A2         	movff	?___fladd,efgtoa@h
 13051  000632  C04D  F0A3         	movff	?___fladd+1,efgtoa@h+1
 13052  000636  C04E  F0A4         	movff	?___fladd+2,efgtoa@h+2
 13053  00063A  C04F  F0A5         	movff	?___fladd+3,efgtoa@h+3
 13054                           
 13055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 13056  00063E  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
 13057  000642  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
 13058  000646  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
 13059  00064A  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
 13060                           
 13061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 13062  00064E  0E65               	movlw	101
 13063  000650  0100               	movlb	0	; () banked
 13064  000652  199E               	xorwf	efgtoa@nmode& (0+255),w,b
 13065  000654  B4D8               	btfsc	status,2,c
 13066  000656  D005               	goto	l7175
 13067                           
 13068                           ; BSR set to: 0
 13069  000658  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
 13070  00065C  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
 13071  000660  D004               	goto	l1212
 13072  000662                     l7175:
 13073                           
 13074                           ; BSR set to: 0
 13075  000662  0E00               	movlw	0
 13076  000664  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
 13077  000666  0E00               	movlw	0
 13078  000668  6F96               	movwf	efgtoa@ne& (0+255),b
 13079  00066A                     l1212:
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 13083  00066A  0E00               	movlw	0
 13084  00066C  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
 13085  00066E  0E00               	movlw	0
 13086  000670  6F92               	movwf	efgtoa@pp& (0+255),b
 13087                           
 13088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 13089  000672  0E00               	movlw	0
 13090  000674  6F91               	movwf	(efgtoa@t+1)& (0+255),b
 13091  000676  0E00               	movlw	0
 13092  000678  6F90               	movwf	efgtoa@t& (0+255),b
 13093                           
 13094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 13095  00067A  0E00               	movlw	0
 13096  00067C  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
 13097  00067E  0E00               	movlw	0
 13098  000680  6FAA               	movwf	efgtoa@i& (0+255),b
 13099                           
 13100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 13101  000682  D0C8               	goto	l7225
 13102  000684                     l7177:
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 13106  000684  C0A2  F001         	movff	efgtoa@h,___fldiv@b
 13107  000688  C0A3  F002         	movff	efgtoa@h+1,___fldiv@b+1
 13108  00068C  C0A4  F003         	movff	efgtoa@h+2,___fldiv@b+2
 13109  000690  C0A5  F004         	movff	efgtoa@h+3,___fldiv@b+3
 13110  000694  C0B4  F005         	movff	efgtoa@u,___fldiv@a
 13111  000698  C0B5  F006         	movff	efgtoa@u+1,___fldiv@a+1
 13112  00069C  C0B6  F007         	movff	efgtoa@u+2,___fldiv@a+2
 13113  0006A0  C0B7  F008         	movff	efgtoa@u+3,___fldiv@a+3
 13114  0006A4  EC2F  F012         	call	___fldiv	;wreg free
 13115  0006A8  C001  F01A         	movff	?___fldiv,floorf@x
 13116  0006AC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
 13117  0006B0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
 13118  0006B4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
 13119  0006B8  ECDC  F016         	call	_floorf	;wreg free
 13120  0006BC  C01A  F0A6         	movff	?_floorf,efgtoa@l
 13121  0006C0  C01B  F0A7         	movff	?_floorf+1,efgtoa@l+1
 13122  0006C4  C01C  F0A8         	movff	?_floorf+2,efgtoa@l+2
 13123  0006C8  C01D  F0A9         	movff	?_floorf+3,efgtoa@l+3
 13124                           
 13125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 13126  0006CC  C0A6  F001         	movff	efgtoa@l,___fltol@f1
 13127  0006D0  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
 13128  0006D4  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
 13129  0006D8  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
 13130  0006DC  EC4D  F020         	call	___fltol	;wreg free
 13131  0006E0  C001  F098         	movff	?___fltol,efgtoa@d
 13132  0006E4  C002  F099         	movff	?___fltol+1,efgtoa@d+1
 13133                           
 13134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 13135  0006E8  0101               	movlb	1	; () banked
 13136  0006EA  B988               	btfsc	_flags& (0+255),4,b
 13137  0006EC  D00D               	goto	l7189
 13138                           
 13139                           ; BSR set to: 1
 13140  0006EE  0100               	movlb	0	; () banked
 13141  0006F0  5198               	movf	efgtoa@d& (0+255),w,b
 13142  0006F2  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
 13143  0006F4  A4D8               	btfss	status,2,c
 13144  0006F6  D008               	goto	l7189
 13145                           
 13146                           ; BSR set to: 0
 13147  0006F8  0E67               	movlw	103
 13148  0006FA  19A1               	xorwf	efgtoa@mode& (0+255),w,b
 13149  0006FC  B4D8               	btfsc	status,2,c
 13150                           
 13151                           ; BSR set to: 0
 13152  0006FE  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
 13153  000700  D003               	goto	l7189
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 13157  000702  4B90               	infsnz	efgtoa@t& (0+255),f,b
 13158  000704  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
 13159                           
 13160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 13161  000706  D03A               	goto	l7217
 13162  000708                     l7189:
 13163                           
 13164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 13165  000708  0100               	movlb	0	; () banked
 13166  00070A  5192               	movf	efgtoa@pp& (0+255),w,b
 13167  00070C  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 13168  00070E  B4D8               	btfsc	status,2,c
 13169                           
 13170                           ; BSR set to: 0
 13171  000710  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
 13172  000712  D022               	goto	l7209
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 13176  000714  0E00               	movlw	low _dbuf
 13177  000716  25B2               	addwf	efgtoa@n& (0+255),w,b
 13178  000718  6ED9               	movwf	fsr2l,c
 13179  00071A  0E02               	movlw	high _dbuf
 13180  00071C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13181  00071E  6EDA               	movwf	fsr2h,c
 13182  000720  0E2E               	movlw	46
 13183  000722  6EDF               	movwf	indf2,c
 13184                           
 13185                           ; BSR set to: 0
 13186  000724  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 13187  000726  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 13191  000728  079F               	decf	efgtoa@w& (0+255),f,b
 13192  00072A  A0D8               	btfss	status,0,c
 13193  00072C  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 13197  00072E  0E00               	movlw	0
 13198  000730  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
 13199  000732  0E01               	movlw	1
 13200  000734  6F92               	movwf	efgtoa@pp& (0+255),b
 13201  000736  D010               	goto	l7209
 13202  000738                     l7201:
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 13206  000738  0E00               	movlw	low _dbuf
 13207  00073A  25B2               	addwf	efgtoa@n& (0+255),w,b
 13208  00073C  6ED9               	movwf	fsr2l,c
 13209  00073E  0E02               	movlw	high _dbuf
 13210  000740  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13211  000742  6EDA               	movwf	fsr2h,c
 13212  000744  0E30               	movlw	48
 13213  000746  6EDF               	movwf	indf2,c
 13214                           
 13215                           ; BSR set to: 0
 13216  000748  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 13217  00074A  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 13221  00074C  079F               	decf	efgtoa@w& (0+255),f,b
 13222  00074E  A0D8               	btfss	status,0,c
 13223  000750  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 13227  000752  0790               	decf	efgtoa@t& (0+255),f,b
 13228  000754  A0D8               	btfss	status,0,c
 13229  000756  0791               	decf	(efgtoa@t+1)& (0+255),f,b
 13230  000758                     l7209:
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 13234  000758  5190               	movf	efgtoa@t& (0+255),w,b
 13235  00075A  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
 13236  00075C  A4D8               	btfss	status,2,c
 13237  00075E  D7EC               	goto	l7201
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 13241  000760  0E00               	movlw	low _dbuf
 13242  000762  25B2               	addwf	efgtoa@n& (0+255),w,b
 13243  000764  6ED9               	movwf	fsr2l,c
 13244  000766  0E02               	movlw	high _dbuf
 13245  000768  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13246  00076A  6EDA               	movwf	fsr2h,c
 13247  00076C  5198               	movf	efgtoa@d& (0+255),w,b
 13248  00076E  0F30               	addlw	48
 13249  000770  6EDF               	movwf	indf2,c
 13250                           
 13251                           ; BSR set to: 0
 13252  000772  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 13253  000774  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 13257  000776  079F               	decf	efgtoa@w& (0+255),f,b
 13258  000778  A0D8               	btfss	status,0,c
 13259  00077A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 13260  00077C                     l7217:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 13264  00077C  C0A2  F05C         	movff	efgtoa@h,___flsub@b
 13265  000780  C0A3  F05D         	movff	efgtoa@h+1,___flsub@b+1
 13266  000784  C0A4  F05E         	movff	efgtoa@h+2,___flsub@b+2
 13267  000788  C0A5  F05F         	movff	efgtoa@h+3,___flsub@b+3
 13268  00078C  C0B4  F031         	movff	efgtoa@u,___flmul@a
 13269  000790  C0B5  F032         	movff	efgtoa@u+1,___flmul@a+1
 13270  000794  C0B6  F033         	movff	efgtoa@u+2,___flmul@a+2
 13271  000798  C0B7  F034         	movff	efgtoa@u+3,___flmul@a+3
 13272  00079C  C0A6  F02D         	movff	efgtoa@l,___flmul@b
 13273  0007A0  C0A7  F02E         	movff	efgtoa@l+1,___flmul@b+1
 13274  0007A4  C0A8  F02F         	movff	efgtoa@l+2,___flmul@b+2
 13275  0007A8  C0A9  F030         	movff	efgtoa@l+3,___flmul@b+3
 13276  0007AC  ECA4  F00A         	call	___flmul	;wreg free
 13277  0007B0  C02D  F060         	movff	?___flmul,___flsub@a
 13278  0007B4  C02E  F061         	movff	?___flmul+1,___flsub@a+1
 13279  0007B8  C02F  F062         	movff	?___flmul+2,___flsub@a+2
 13280  0007BC  C030  F063         	movff	?___flmul+3,___flsub@a+3
 13281  0007C0  ECB4  F028         	call	___flsub	;wreg free
 13282  0007C4  C05C  F0A2         	movff	?___flsub,efgtoa@h
 13283  0007C8  C05D  F0A3         	movff	?___flsub+1,efgtoa@h+1
 13284  0007CC  C05E  F0A4         	movff	?___flsub+2,efgtoa@h+2
 13285  0007D0  C05F  F0A5         	movff	?___flsub+3,efgtoa@h+3
 13286                           
 13287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 13288  0007D4  C0B4  F001         	movff	efgtoa@u,___fldiv@b
 13289  0007D8  C0B5  F002         	movff	efgtoa@u+1,___fldiv@b+1
 13290  0007DC  C0B6  F003         	movff	efgtoa@u+2,___fldiv@b+2
 13291  0007E0  C0B7  F004         	movff	efgtoa@u+3,___fldiv@b+3
 13292  0007E4  0E00               	movlw	0
 13293  0007E6  6E05               	movwf	___fldiv@a,c
 13294  0007E8  0E00               	movlw	0
 13295  0007EA  6E06               	movwf	___fldiv@a+1,c
 13296  0007EC  0E20               	movlw	32
 13297  0007EE  6E07               	movwf	___fldiv@a+2,c
 13298  0007F0  0E41               	movlw	65
 13299  0007F2  6E08               	movwf	___fldiv@a+3,c
 13300  0007F4  EC2F  F012         	call	___fldiv	;wreg free
 13301  0007F8  C001  F0B4         	movff	?___fldiv,efgtoa@u
 13302  0007FC  C002  F0B5         	movff	?___fldiv+1,efgtoa@u+1
 13303  000800  C003  F0B6         	movff	?___fldiv+2,efgtoa@u+2
 13304  000804  C004  F0B7         	movff	?___fldiv+3,efgtoa@u+3
 13305                           
 13306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 13307  000808  0100               	movlb	0	; () banked
 13308  00080A  0796               	decf	efgtoa@ne& (0+255),f,b
 13309  00080C  A0D8               	btfss	status,0,c
 13310  00080E  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 13314  000810  4BAA               	infsnz	efgtoa@i& (0+255),f,b
 13315  000812  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
 13316  000814                     l7225:
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 13320  000814  5194               	movf	efgtoa@m& (0+255),w,b
 13321  000816  5DAA               	subwf	efgtoa@i& (0+255),w,b
 13322  000818  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
 13323  00081A  0A80               	xorlw	128
 13324  00081C  6E77               	movwf	??_efgtoa& (0+255),c
 13325  00081E  5195               	movf	(efgtoa@m+1)& (0+255),w,b
 13326  000820  0A80               	xorlw	128
 13327  000822  5877               	subwfb	??_efgtoa& (0+255),w,c
 13328  000824  B0D8               	btfsc	status,0,c
 13329  000826  D008               	goto	u7040
 13330                           
 13331                           ; BSR set to: 0
 13332  000828  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
 13333  00082A  D72C               	goto	l7177
 13334  00082C  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
 13335  00082E  E104               	bnz	u7040
 13336  000830  0E4B               	movlw	75
 13337  000832  5DB2               	subwf	efgtoa@n& (0+255),w,b
 13338  000834  A0D8               	btfss	status,0,c
 13339  000836  D726               	goto	l7177
 13340  000838                     u7040:
 13341                           
 13342                           ; BSR set to: 0
 13343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 13344  000838  5192               	movf	efgtoa@pp& (0+255),w,b
 13345  00083A  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 13346  00083C  A4D8               	btfss	status,2,c
 13347  00083E  D00E               	goto	l7237
 13348                           
 13349                           ; BSR set to: 0
 13350  000840  0101               	movlb	1	; () banked
 13351  000842  A988               	btfss	_flags& (0+255),4,b
 13352  000844  D00B               	goto	l7237
 13353                           
 13354                           ; BSR set to: 1
 13355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 13356  000846  0E00               	movlw	low _dbuf
 13357  000848  0100               	movlb	0	; () banked
 13358  00084A  25B2               	addwf	efgtoa@n& (0+255),w,b
 13359  00084C  6ED9               	movwf	fsr2l,c
 13360  00084E  0E02               	movlw	high _dbuf
 13361  000850  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13362  000852  6EDA               	movwf	fsr2h,c
 13363  000854  0E2E               	movlw	46
 13364  000856  6EDF               	movwf	indf2,c
 13365                           
 13366                           ; BSR set to: 0
 13367  000858  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 13368  00085A  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 13369  00085C                     l7237:
 13370                           
 13371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 13372  00085C  0E00               	movlw	low _dbuf
 13373  00085E  0100               	movlb	0	; () banked
 13374  000860  25B2               	addwf	efgtoa@n& (0+255),w,b
 13375  000862  6ED9               	movwf	fsr2l,c
 13376  000864  0E02               	movlw	high _dbuf
 13377  000866  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13378  000868  6EDA               	movwf	fsr2h,c
 13379  00086A  0E00               	movlw	0
 13380  00086C  6EDF               	movwf	indf2,c
 13381                           
 13382                           ; BSR set to: 0
 13383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 13384  00086E  0E65               	movlw	101
 13385  000870  199E               	xorwf	efgtoa@nmode& (0+255),w,b
 13386  000872  A4D8               	btfss	status,2,c
 13387  000874  D0AD               	goto	l7299
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 13391  000876  0E00               	movlw	0
 13392  000878  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
 13393  00087A  0E4F               	movlw	79
 13394  00087C  6FAA               	movwf	efgtoa@i& (0+255),b
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 13398  00087E  0E00               	movlw	low _dbuf
 13399  000880  25AA               	addwf	efgtoa@i& (0+255),w,b
 13400  000882  6ED9               	movwf	fsr2l,c
 13401  000884  0E02               	movlw	high _dbuf
 13402  000886  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13403  000888  6EDA               	movwf	fsr2h,c
 13404  00088A  0E00               	movlw	0
 13405  00088C  6EDF               	movwf	indf2,c
 13406                           
 13407                           ; BSR set to: 0
 13408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 13409  00088E  0E00               	movlw	0
 13410  000890  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 13411  000892  0E00               	movlw	0
 13412  000894  6F9A               	movwf	efgtoa@sign& (0+255),b
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 13416  000896  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
 13417  000898  D008               	goto	l7253
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 13421  00089A  0E00               	movlw	0
 13422  00089C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 13423  00089E  0E01               	movlw	1
 13424  0008A0  6F9A               	movwf	efgtoa@sign& (0+255),b
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 13428  0008A2  6DB0               	negf	efgtoa@e& (0+255),b
 13429  0008A4  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
 13430  0008A6  B0D8               	btfsc	status,0,c
 13431  0008A8  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
 13432  0008AA                     l7253:
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 13436  0008AA  0E00               	movlw	0
 13437  0008AC  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
 13438  0008AE  0E02               	movlw	2
 13439  0008B0  6F9C               	movwf	efgtoa@p& (0+255),b
 13440                           
 13441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 13442  0008B2  D02B               	goto	l7265
 13443  0008B4                     l7255:
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 13447  0008B4  07AA               	decf	efgtoa@i& (0+255),f,b
 13448  0008B6  A0D8               	btfss	status,0,c
 13449  0008B8  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 13453  0008BA  0E00               	movlw	low _dbuf
 13454  0008BC  25AA               	addwf	efgtoa@i& (0+255),w,b
 13455  0008BE  6ED9               	movwf	fsr2l,c
 13456  0008C0  0E02               	movlw	high _dbuf
 13457  0008C2  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13458  0008C4  6EDA               	movwf	fsr2h,c
 13459  0008C6  C0B0  F001         	movff	efgtoa@e,___awmod@dividend
 13460  0008CA  C0B1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
 13461  0008CE  0E00               	movlw	0
 13462  0008D0  6E04               	movwf	___awmod@divisor+1,c
 13463  0008D2  0E0A               	movlw	10
 13464  0008D4  6E03               	movwf	___awmod@divisor,c
 13465  0008D6  EC93  F025         	call	___awmod	;wreg free
 13466  0008DA  5001               	movf	?___awmod,w,c
 13467  0008DC  0F30               	addlw	48
 13468  0008DE  6EDF               	movwf	indf2,c
 13469                           
 13470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 13471  0008E0  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
 13472  0008E4  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
 13473  0008E8  0E00               	movlw	0
 13474  0008EA  6E04               	movwf	___awdiv@divisor+1,c
 13475  0008EC  0E0A               	movlw	10
 13476  0008EE  6E03               	movwf	___awdiv@divisor,c
 13477  0008F0  ECA9  F023         	call	___awdiv	;wreg free
 13478  0008F4  C001  F0B0         	movff	?___awdiv,efgtoa@e
 13479  0008F8  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
 13480                           
 13481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 13482  0008FC  0100               	movlb	0	; () banked
 13483  0008FE  079C               	decf	efgtoa@p& (0+255),f,b
 13484  000900  A0D8               	btfss	status,0,c
 13485  000902  079D               	decf	(efgtoa@p+1)& (0+255),f,b
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 13489  000904  079F               	decf	efgtoa@w& (0+255),f,b
 13490  000906  A0D8               	btfss	status,0,c
 13491  000908  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 13492  00090A                     l7265:
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 13496  00090A  51B0               	movf	efgtoa@e& (0+255),w,b
 13497  00090C  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
 13498  00090E  A4D8               	btfss	status,2,c
 13499  000910  D7D1               	goto	l7255
 13500                           
 13501                           ; BSR set to: 0
 13502  000912  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
 13503  000914  D005               	goto	u7100
 13504  000916  519D               	movf	(efgtoa@p+1)& (0+255),w,b
 13505  000918  E1CD               	bnz	l7255
 13506  00091A  059C               	decf	efgtoa@p& (0+255),w,b
 13507  00091C  B0D8               	btfsc	status,0,c
 13508  00091E  D7CA               	goto	l7255
 13509  000920                     u7100:
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 13513  000920  07AA               	decf	efgtoa@i& (0+255),f,b
 13514  000922  A0D8               	btfss	status,0,c
 13515  000924  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 13519  000926  519A               	movf	efgtoa@sign& (0+255),w,b
 13520  000928  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 13521  00092A  A4D8               	btfss	status,2,c
 13522  00092C  D004               	goto	l7275
 13523                           
 13524                           ; BSR set to: 0
 13525  00092E  0E00               	movlw	0
 13526  000930  6F8B               	movwf	(_efgtoa$2067+1)& (0+255),b
 13527  000932  0E2B               	movlw	43
 13528  000934  D003               	goto	L26
 13529  000936                     l7275:
 13530                           
 13531                           ; BSR set to: 0
 13532  000936  0E00               	movlw	0
 13533  000938  6F8B               	movwf	(_efgtoa$2067+1)& (0+255),b
 13534  00093A  0E2D               	movlw	45
 13535  00093C                     L26:
 13536  00093C  6F8A               	movwf	_efgtoa$2067& (0+255),b
 13537                           
 13538                           ; BSR set to: 0
 13539  00093E  0E00               	movlw	low _dbuf
 13540  000940  25AA               	addwf	efgtoa@i& (0+255),w,b
 13541  000942  6ED9               	movwf	fsr2l,c
 13542  000944  0E02               	movlw	high _dbuf
 13543  000946  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13544  000948  6EDA               	movwf	fsr2h,c
 13545  00094A  C08A  FFDF         	movff	_efgtoa$2067,indf2
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 13549  00094E  079F               	decf	efgtoa@w& (0+255),f,b
 13550  000950  A0D8               	btfss	status,0,c
 13551  000952  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13555  000954  07AA               	decf	efgtoa@i& (0+255),f,b
 13556  000956  A0D8               	btfss	status,0,c
 13557  000958  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 13558                           
 13559                           ; BSR set to: 0
 13560  00095A  0EBF               	movlw	191
 13561  00095C  6E77               	movwf	??_efgtoa& (0+255),c
 13562  00095E  0EFF               	movlw	255
 13563  000960  6E78               	movwf	(??_efgtoa+1)& (0+255),c
 13564  000962  5076               	movf	efgtoa@c,w,c
 13565  000964  6E79               	movwf	(??_efgtoa+2)& (0+255),c
 13566  000966  6A7A               	clrf	(??_efgtoa+3)& (0+255),c
 13567  000968  5077               	movf	??_efgtoa,w,c
 13568  00096A  2679               	addwf	??_efgtoa+2,f,c
 13569  00096C  5078               	movf	??_efgtoa+1,w,c
 13570  00096E  227A               	addwfc	??_efgtoa+3,f,c
 13571  000970  507A               	movf	??_efgtoa+3,w,c
 13572  000972  E106               	bnz	u7120
 13573  000974  0E1A               	movlw	26
 13574  000976  5C79               	subwf	??_efgtoa+2,w,c
 13575  000978  B0D8               	btfsc	status,0,c
 13576  00097A  D002               	goto	u7120
 13577  00097C  0E01               	movlw	1
 13578  00097E  D001               	goto	u7130
 13579  000980                     u7120:
 13580  000980  0E00               	movlw	0
 13581  000982                     u7130:
 13582  000982  6F8E               	movwf	_efgtoa$2069& (0+255),b
 13583  000984  6B8F               	clrf	(_efgtoa$2069+1)& (0+255),b
 13584                           
 13585                           ; BSR set to: 0
 13586  000986  518E               	movf	_efgtoa$2069& (0+255),w,b
 13587  000988  118F               	iorwf	(_efgtoa$2069+1)& (0+255),w,b
 13588  00098A  A4D8               	btfss	status,2,c
 13589  00098C  D004               	goto	l7291
 13590                           
 13591                           ; BSR set to: 0
 13592  00098E  0E00               	movlw	0
 13593  000990  6F8D               	movwf	(_efgtoa$2068+1)& (0+255),b
 13594  000992  0E65               	movlw	101
 13595  000994  D003               	goto	L27
 13596  000996                     l7291:
 13597                           
 13598                           ; BSR set to: 0
 13599  000996  0E00               	movlw	0
 13600  000998  6F8D               	movwf	(_efgtoa$2068+1)& (0+255),b
 13601  00099A  0E45               	movlw	69
 13602  00099C                     L27:
 13603  00099C  6F8C               	movwf	_efgtoa$2068& (0+255),b
 13604                           
 13605                           ; BSR set to: 0
 13606  00099E  0E00               	movlw	low _dbuf
 13607  0009A0  25AA               	addwf	efgtoa@i& (0+255),w,b
 13608  0009A2  6ED9               	movwf	fsr2l,c
 13609  0009A4  0E02               	movlw	high _dbuf
 13610  0009A6  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13611  0009A8  6EDA               	movwf	fsr2h,c
 13612  0009AA  C08C  FFDF         	movff	_efgtoa$2068,indf2
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 13616  0009AE  079F               	decf	efgtoa@w& (0+255),f,b
 13617  0009B0  A0D8               	btfss	status,0,c
 13618  0009B2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 13622  0009B4  0E00               	movlw	low _dbuf
 13623  0009B6  25B2               	addwf	efgtoa@n& (0+255),w,b
 13624  0009B8  6E01               	movwf	strcpy@dest,c
 13625  0009BA  0E02               	movlw	high _dbuf
 13626  0009BC  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13627  0009BE  6E02               	movwf	strcpy@dest+1,c
 13628  0009C0  0E00               	movlw	low _dbuf
 13629  0009C2  25AA               	addwf	efgtoa@i& (0+255),w,b
 13630  0009C4  6E03               	movwf	strcpy@src,c
 13631  0009C6  0E02               	movlw	high _dbuf
 13632  0009C8  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13633  0009CA  6E04               	movwf	strcpy@src+1,c
 13634  0009CC  EC83  F027         	call	_strcpy	;wreg free
 13635  0009D0                     l7299:
 13636                           
 13637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 13638  0009D0  C070  F015         	movff	efgtoa@fp,pad@fp
 13639  0009D4  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
 13640  0009D8  0E00               	movlw	low _dbuf
 13641  0009DA  6E17               	movwf	pad@buf,c
 13642  0009DC  0E02               	movlw	high _dbuf
 13643  0009DE  6E18               	movwf	pad@buf+1,c
 13644  0009E0  C09F  F019         	movff	efgtoa@w,pad@p
 13645  0009E4  C0A0  F01A         	movff	efgtoa@w+1,pad@p+1
 13646  0009E8  EC4F  F021         	call	_pad	;wreg free
 13647  0009EC  C015  F070         	movff	?_pad,?_efgtoa
 13648  0009F0  C016  F071         	movff	?_pad+1,?_efgtoa+1
 13649  0009F4  0012               	return		;funcret
 13650  0009F6                     __end_of_efgtoa:
 13651                           	opt callstack 0
 13652                           
 13653 ;; *************** function _tolower *****************
 13654 ;; Defined at:
 13655 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;  c               2    6[COMRAM] int 
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;		None
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  2    6[COMRAM] int 
 13662 ;; Registers used:
 13663 ;;		wreg, status,2, status,0
 13664 ;; Tracked objects:
 13665 ;;		On entry : 0/0
 13666 ;;		On exit  : 0/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;Total ram usage:        8 bytes
 13674 ;; Hardware stack levels used:    1
 13675 ;; Hardware stack levels required when called:    2
 13676 ;; This function calls:
 13677 ;;		_isupper
 13678 ;; This function is called by:
 13679 ;;		_efgtoa
 13680 ;;		_vfpfcnvrt
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           	psect	text58
 13685  004FF8                     __ptext58:
 13686                           	opt callstack 0
 13687  004FF8                     _tolower:
 13688                           	opt callstack 23
 13689                           
 13690                           ;incstack = 0
 13691  004FF8  0EBF               	movlw	191
 13692  004FFA  6E09               	movwf	??_tolower& (0+255),c
 13693  004FFC  0EFF               	movlw	255
 13694  004FFE  6E0A               	movwf	(??_tolower+1)& (0+255),c
 13695  005000  C007  F00B         	movff	tolower@c,??_tolower+2
 13696  005004  C008  F00C         	movff	tolower@c+1,??_tolower+3
 13697  005008  5009               	movf	??_tolower,w,c
 13698  00500A  260B               	addwf	??_tolower+2,f,c
 13699  00500C  500A               	movf	??_tolower+1,w,c
 13700  00500E  220C               	addwfc	??_tolower+3,f,c
 13701  005010  500C               	movf	??_tolower+3,w,c
 13702  005012  E106               	bnz	u5420
 13703  005014  0E1A               	movlw	26
 13704  005016  5C0B               	subwf	??_tolower+2,w,c
 13705  005018  B0D8               	btfsc	status,0,c
 13706  00501A  D002               	goto	u5420
 13707  00501C  0E01               	movlw	1
 13708  00501E  D001               	goto	u5430
 13709  005020                     u5420:
 13710  005020  0E00               	movlw	0
 13711  005022                     u5430:
 13712  005022  6E0D               	movwf	_tolower$2699,c
 13713  005024  6A0E               	clrf	_tolower$2699+1,c
 13714  005026  500D               	movf	_tolower$2699,w,c
 13715  005028  100E               	iorwf	_tolower$2699+1,w,c
 13716  00502A  B4D8               	btfsc	status,2,c
 13717  00502C  D006               	goto	l2170
 13718  00502E  0E20               	movlw	32
 13719  005030  1007               	iorwf	tolower@c,w,c
 13720  005032  6E07               	movwf	?_tolower,c
 13721  005034  5008               	movf	tolower@c+1,w,c
 13722  005036  6E08               	movwf	?_tolower+1,c
 13723  005038  0012               	return	
 13724  00503A                     l2170:
 13725  00503A  C007  F007         	movff	tolower@c,?_tolower
 13726  00503E  C008  F008         	movff	tolower@c+1,?_tolower+1
 13727  005042  0012               	return		;funcret
 13728  005044                     __end_of_tolower:
 13729                           	opt callstack 0
 13730                           
 13731 ;; *************** function _isupper *****************
 13732 ;; Defined at:
 13733 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  c               2    0[COMRAM] int 
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;		None
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  2    0[COMRAM] int 
 13740 ;; Registers used:
 13741 ;;		wreg, status,2, status,0
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13749 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13750 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13751 ;;Total ram usage:        6 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; Hardware stack levels required when called:    1
 13754 ;; This function calls:
 13755 ;;		Nothing
 13756 ;; This function is called by:
 13757 ;;		_efgtoa
 13758 ;;		_xtoa
 13759 ;;		_vfpfcnvrt
 13760 ;;		_tolower
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764                           	psect	text59
 13765  00532E                     __ptext59:
 13766                           	opt callstack 0
 13767  00532E                     _isupper:
 13768                           	opt callstack 23
 13769                           
 13770                           ;incstack = 0
 13771  00532E  0EBF               	movlw	191
 13772  005330  6E03               	movwf	??_isupper& (0+255),c
 13773  005332  0EFF               	movlw	255
 13774  005334  6E04               	movwf	(??_isupper+1)& (0+255),c
 13775  005336  C001  F005         	movff	isupper@c,??_isupper+2
 13776  00533A  C002  F006         	movff	isupper@c+1,??_isupper+3
 13777  00533E  5003               	movf	??_isupper,w,c
 13778  005340  2605               	addwf	??_isupper+2,f,c
 13779  005342  5004               	movf	??_isupper+1,w,c
 13780  005344  2206               	addwfc	??_isupper+3,f,c
 13781  005346  5006               	movf	??_isupper+3,w,c
 13782  005348  E106               	bnz	u4850
 13783  00534A  0E1A               	movlw	26
 13784  00534C  5C05               	subwf	??_isupper+2,w,c
 13785  00534E  B0D8               	btfsc	status,0,c
 13786  005350  D002               	goto	u4850
 13787  005352  0E01               	movlw	1
 13788  005354  D001               	goto	u4860
 13789  005356                     u4850:
 13790  005356  0E00               	movlw	0
 13791  005358                     u4860:
 13792  005358  6E01               	movwf	?_isupper,c
 13793  00535A  6A02               	clrf	?_isupper+1,c
 13794  00535C  0012               	return		;funcret
 13795  00535E                     __end_of_isupper:
 13796                           	opt callstack 0
 13797                           
 13798 ;; *************** function _strcpy *****************
 13799 ;; Defined at:
 13800 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;  dest            2    0[COMRAM] PTR unsigned char 
 13803 ;;		 -> dbuf(80), 
 13804 ;;  src             2    2[COMRAM] PTR const unsigned char 
 13805 ;;		 -> STR_64(4), STR_63(4), STR_60(4), STR_59(4), 
 13806 ;;		 -> dbuf(80), 
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;  d               2    8[COMRAM] PTR unsigned char 
 13809 ;;		 -> dbuf(80), 
 13810 ;;  s               2    6[COMRAM] PTR const unsigned char 
 13811 ;;		 -> STR_64(4), STR_63(4), STR_60(4), STR_59(4), 
 13812 ;;		 -> dbuf(80), 
 13813 ;; Return value:  Size  Location     Type
 13814 ;;                  2    0[COMRAM] PTR unsigned char 
 13815 ;; Registers used:
 13816 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13817 ;; Tracked objects:
 13818 ;;		On entry : 0/0
 13819 ;;		On exit  : 0/0
 13820 ;;		Unchanged: 0/0
 13821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13825 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13826 ;;Total ram usage:       10 bytes
 13827 ;; Hardware stack levels used:    1
 13828 ;; Hardware stack levels required when called:    1
 13829 ;; This function calls:
 13830 ;;		Nothing
 13831 ;; This function is called by:
 13832 ;;		_efgtoa
 13833 ;; This function uses a non-reentrant model
 13834 ;;
 13835                           
 13836                           	psect	text60
 13837  004F06                     __ptext60:
 13838                           	opt callstack 0
 13839  004F06                     _strcpy:
 13840                           	opt callstack 23
 13841                           
 13842                           ;incstack = 0
 13843  004F06  C003  F007         	movff	strcpy@src,strcpy@s
 13844  004F0A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
 13845  004F0E  C001  F009         	movff	strcpy@dest,strcpy@d
 13846  004F12  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
 13847  004F16                     l6329:
 13848  004F16  5007               	movf	strcpy@s,w,c
 13849  004F18  6E05               	movwf	??_strcpy& (0+255),c
 13850  004F1A  5008               	movf	strcpy@s+1,w,c
 13851  004F1C  6E06               	movwf	(??_strcpy+1)& (0+255),c
 13852  004F1E  4A07               	infsnz	strcpy@s,f,c
 13853  004F20  2A08               	incf	strcpy@s+1,f,c
 13854  004F22  C005  FFF6         	movff	??_strcpy,tblptrl
 13855  004F26  C006  FFF7         	movff	??_strcpy+1,tblptrh
 13856  004F2A  0E00               	movlw	low (__mediumconst shr (0+16))
 13857  004F2C  6EF8               	movwf	tblptru,c
 13858  004F2E  C009  FFD9         	movff	strcpy@d,fsr2l
 13859  004F32  C00A  FFDA         	movff	strcpy@d+1,fsr2h
 13860  004F36  4A09               	infsnz	strcpy@d,f,c
 13861  004F38  2A0A               	incf	strcpy@d+1,f,c
 13862  004F3A  0E0F               	movlw	(high __ramtop+-1)
 13863  004F3C  64F7               	cpfsgt	tblptrh,c
 13864  004F3E  D003               	bra	u5407
 13865  004F40  0008               	tblrd		*
 13866  004F42  50F5               	movf	tablat,w,c
 13867  004F44  D005               	bra	u5400
 13868  004F46                     u5407:
 13869  004F46  CFF6 FFE9          	movff	tblptrl,fsr0l
 13870  004F4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13871  004F4E  50EF               	movf	indf0,w,c
 13872  004F50                     u5400:
 13873  004F50  6EDF               	movwf	indf2,c
 13874  004F52  50DF               	movf	indf2,w,c
 13875  004F54  B4D8               	btfsc	status,2,c
 13876  004F56  0012               	return	
 13877  004F58  D7DE               	goto	l6329
 13878  004F5A                     __end_of_strcpy:
 13879                           	opt callstack 0
 13880                           
 13881 ;; *************** function _floorf *****************
 13882 ;; Defined at:
 13883 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;  x               4   25[COMRAM] float 
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;  u               4   41[COMRAM] struct .
 13888 ;;  m               4   35[COMRAM] unsigned long 
 13889 ;;  e               2   39[COMRAM] int 
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  4   25[COMRAM] float 
 13892 ;; Registers used:
 13893 ;;		wreg, status,2, status,0
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13900 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13901 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13902 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13903 ;;Total ram usage:       20 bytes
 13904 ;; Hardware stack levels used:    1
 13905 ;; Hardware stack levels required when called:    1
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_efgtoa
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           	psect	text61
 13914  002DB8                     __ptext61:
 13915                           	opt callstack 0
 13916  002DB8                     _floorf:
 13917                           	opt callstack 23
 13918                           
 13919                           ;incstack = 0
 13920  002DB8  C15A  F02A         	movff	floorf@F524,floorf@u
 13921  002DBC  C15B  F02B         	movff	floorf@F524+1,floorf@u+1
 13922  002DC0  C15C  F02C         	movff	floorf@F524+2,floorf@u+2
 13923  002DC4  C15D  F02D         	movff	floorf@F524+3,floorf@u+3
 13924  002DC8  C01A  F02A         	movff	floorf@x,floorf@u
 13925  002DCC  C01B  F02B         	movff	floorf@x+1,floorf@u+1
 13926  002DD0  C01C  F02C         	movff	floorf@x+2,floorf@u+2
 13927  002DD4  C01D  F02D         	movff	floorf@x+3,floorf@u+3
 13928  002DD8  0E81               	movlw	129
 13929  002DDA  6E1E               	movwf	??_floorf& (0+255),c
 13930  002DDC  0EFF               	movlw	255
 13931  002DDE  6E1F               	movwf	(??_floorf+1)& (0+255),c
 13932  002DE0  C02A  F020         	movff	floorf@u,??_floorf+2
 13933  002DE4  C02B  F021         	movff	floorf@u+1,??_floorf+3
 13934  002DE8  C02C  F022         	movff	floorf@u+2,??_floorf+4
 13935  002DEC  C02D  F023         	movff	floorf@u+3,??_floorf+5
 13936  002DF0  0E18               	movlw	24
 13937  002DF2  D005               	goto	u5450
 13938  002DF4                     u5455:
 13939  002DF4  90D8               	bcf	status,0,c
 13940  002DF6  3223               	rrcf	??_floorf+5,f,c
 13941  002DF8  3222               	rrcf	??_floorf+4,f,c
 13942  002DFA  3221               	rrcf	??_floorf+3,f,c
 13943  002DFC  3220               	rrcf	??_floorf+2,f,c
 13944  002DFE                     u5450:
 13945  002DFE  2EE8               	decfsz	wreg,f,c
 13946  002E00  D7F9               	goto	u5455
 13947  002E02  5020               	movf	??_floorf+2,w,c
 13948  002E04  241E               	addwf	??_floorf,w,c
 13949  002E06  6E28               	movwf	floorf@e,c
 13950  002E08  0E00               	movlw	0
 13951  002E0A  201F               	addwfc	??_floorf+1,w,c
 13952  002E0C  6E29               	movwf	floorf@e+1,c
 13953  002E0E  BE29               	btfsc	floorf@e+1,7,c
 13954  002E10  D00F               	goto	l6347
 13955  002E12  5029               	movf	floorf@e+1,w,c
 13956  002E14  E104               	bnz	u5460
 13957  002E16  0E17               	movlw	23
 13958  002E18  5C28               	subwf	floorf@e,w,c
 13959  002E1A  A0D8               	btfss	status,0,c
 13960  002E1C  D009               	goto	l6347
 13961  002E1E                     u5460:
 13962  002E1E  C01A  F01A         	movff	floorf@x,?_floorf
 13963  002E22  C01B  F01B         	movff	floorf@x+1,?_floorf+1
 13964  002E26  C01C  F01C         	movff	floorf@x+2,?_floorf+2
 13965  002E2A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
 13966  002E2E  0012               	return	
 13967  002E30                     l6347:
 13968  002E30  BE29               	btfsc	floorf@e+1,7,c
 13969  002E32  D05E               	goto	l6357
 13970  002E34  C028  F01E         	movff	floorf@e,??_floorf
 13971  002E38  0EFF               	movlw	255
 13972  002E3A  6E1F               	movwf	(??_floorf+1)& (0+255),c
 13973  002E3C  0EFF               	movlw	255
 13974  002E3E  6E20               	movwf	(??_floorf+2)& (0+255),c
 13975  002E40  0E7F               	movlw	127
 13976  002E42  6E21               	movwf	(??_floorf+3)& (0+255),c
 13977  002E44  0E00               	movlw	0
 13978  002E46  6E22               	movwf	(??_floorf+4)& (0+255),c
 13979  002E48                     u5485:
 13980  002E48  661E               	tstfsz	??_floorf,c
 13981  002E4A  D001               	goto	u5486
 13982  002E4C  D007               	goto	u5487
 13983  002E4E                     u5486:
 13984  002E4E  3422               	rlcf	??_floorf+4,w,c
 13985  002E50  3222               	rrcf	??_floorf+4,f,c
 13986  002E52  3221               	rrcf	??_floorf+3,f,c
 13987  002E54  3220               	rrcf	??_floorf+2,f,c
 13988  002E56  321F               	rrcf	??_floorf+1,f,c
 13989  002E58  2E1E               	decfsz	??_floorf,f,c
 13990  002E5A  D7F6               	goto	u5485
 13991  002E5C                     u5487:
 13992  002E5C  C01F  F024         	movff	??_floorf+1,floorf@m
 13993  002E60  C020  F025         	movff	??_floorf+2,floorf@m+1
 13994  002E64  C021  F026         	movff	??_floorf+3,floorf@m+2
 13995  002E68  C022  F027         	movff	??_floorf+4,floorf@m+3
 13996  002E6C  5024               	movf	floorf@m,w,c
 13997  002E6E  142A               	andwf	floorf@u,w,c
 13998  002E70  6E1E               	movwf	??_floorf& (0+255),c
 13999  002E72  5025               	movf	floorf@m+1,w,c
 14000  002E74  142B               	andwf	floorf@u+1,w,c
 14001  002E76  6E1F               	movwf	(??_floorf+1)& (0+255),c
 14002  002E78  5026               	movf	floorf@m+2,w,c
 14003  002E7A  142C               	andwf	floorf@u+2,w,c
 14004  002E7C  6E20               	movwf	(??_floorf+2)& (0+255),c
 14005  002E7E  5027               	movf	floorf@m+3,w,c
 14006  002E80  142D               	andwf	floorf@u+3,w,c
 14007  002E82  6E21               	movwf	(??_floorf+3)& (0+255),c
 14008  002E84  501E               	movf	??_floorf,w,c
 14009  002E86  101F               	iorwf	??_floorf+1,w,c
 14010  002E88  1020               	iorwf	??_floorf+2,w,c
 14011  002E8A  1021               	iorwf	??_floorf+3,w,c
 14012  002E8C  B4D8               	btfsc	status,2,c
 14013  002E8E  D7C7               	goto	u5460
 14014  002E90  C02A  F01E         	movff	floorf@u,??_floorf
 14015  002E94  C02B  F01F         	movff	floorf@u+1,??_floorf+1
 14016  002E98  C02C  F020         	movff	floorf@u+2,??_floorf+2
 14017  002E9C  C02D  F021         	movff	floorf@u+3,??_floorf+3
 14018  002EA0  0E20               	movlw	32
 14019  002EA2  D005               	goto	u5500
 14020  002EA4                     u5505:
 14021  002EA4  90D8               	bcf	status,0,c
 14022  002EA6  3221               	rrcf	??_floorf+3,f,c
 14023  002EA8  3220               	rrcf	??_floorf+2,f,c
 14024  002EAA  321F               	rrcf	??_floorf+1,f,c
 14025  002EAC  321E               	rrcf	??_floorf,f,c
 14026  002EAE                     u5500:
 14027  002EAE  2EE8               	decfsz	wreg,f,c
 14028  002EB0  D7F9               	goto	u5505
 14029  002EB2  501E               	movf	??_floorf,w,c
 14030  002EB4  101F               	iorwf	??_floorf+1,w,c
 14031  002EB6  1020               	iorwf	??_floorf+2,w,c
 14032  002EB8  1021               	iorwf	??_floorf+3,w,c
 14033  002EBA  B4D8               	btfsc	status,2,c
 14034  002EBC  D008               	goto	l2087
 14035  002EBE  5024               	movf	floorf@m,w,c
 14036  002EC0  262A               	addwf	floorf@u,f,c
 14037  002EC2  5025               	movf	floorf@m+1,w,c
 14038  002EC4  222B               	addwfc	floorf@u+1,f,c
 14039  002EC6  5026               	movf	floorf@m+2,w,c
 14040  002EC8  222C               	addwfc	floorf@u+2,f,c
 14041  002ECA  5027               	movf	floorf@m+3,w,c
 14042  002ECC  222D               	addwfc	floorf@u+3,f,c
 14043  002ECE                     l2087:
 14044  002ECE  1C24               	comf	floorf@m,w,c
 14045  002ED0  6E1E               	movwf	??_floorf& (0+255),c
 14046  002ED2  1C25               	comf	floorf@m+1,w,c
 14047  002ED4  6E1F               	movwf	(??_floorf+1)& (0+255),c
 14048  002ED6  1C26               	comf	floorf@m+2,w,c
 14049  002ED8  6E20               	movwf	(??_floorf+2)& (0+255),c
 14050  002EDA  1C27               	comf	floorf@m+3,w,c
 14051  002EDC  6E21               	movwf	(??_floorf+3)& (0+255),c
 14052  002EDE  501E               	movf	??_floorf,w,c
 14053  002EE0  162A               	andwf	floorf@u,f,c
 14054  002EE2  501F               	movf	??_floorf+1,w,c
 14055  002EE4  162B               	andwf	floorf@u+1,f,c
 14056  002EE6  5020               	movf	??_floorf+2,w,c
 14057  002EE8  162C               	andwf	floorf@u+2,f,c
 14058  002EEA  5021               	movf	??_floorf+3,w,c
 14059  002EEC  162D               	andwf	floorf@u+3,f,c
 14060  002EEE  D036               	goto	l6365
 14061  002EF0                     l6357:
 14062  002EF0  C02A  F01E         	movff	floorf@u,??_floorf
 14063  002EF4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
 14064  002EF8  C02C  F020         	movff	floorf@u+2,??_floorf+2
 14065  002EFC  C02D  F021         	movff	floorf@u+3,??_floorf+3
 14066  002F00  0E20               	movlw	32
 14067  002F02  D005               	goto	u5520
 14068  002F04                     u5525:
 14069  002F04  90D8               	bcf	status,0,c
 14070  002F06  3221               	rrcf	??_floorf+3,f,c
 14071  002F08  3220               	rrcf	??_floorf+2,f,c
 14072  002F0A  321F               	rrcf	??_floorf+1,f,c
 14073  002F0C  321E               	rrcf	??_floorf,f,c
 14074  002F0E                     u5520:
 14075  002F0E  2EE8               	decfsz	wreg,f,c
 14076  002F10  D7F9               	goto	u5525
 14077  002F12  501E               	movf	??_floorf,w,c
 14078  002F14  101F               	iorwf	??_floorf+1,w,c
 14079  002F16  1020               	iorwf	??_floorf+2,w,c
 14080  002F18  1021               	iorwf	??_floorf+3,w,c
 14081  002F1A  A4D8               	btfss	status,2,c
 14082  002F1C  D008               	goto	l6361
 14083  002F1E  0E00               	movlw	0
 14084  002F20  6E2A               	movwf	floorf@u,c
 14085  002F22  0E00               	movlw	0
 14086  002F24  6E2B               	movwf	floorf@u+1,c
 14087  002F26  0E00               	movlw	0
 14088  002F28  6E2C               	movwf	floorf@u+2,c
 14089  002F2A  0E00               	movlw	0
 14090  002F2C  D016               	goto	L28
 14091  002F2E                     l6361:
 14092  002F2E  90D8               	bcf	status,0,c
 14093  002F30  342A               	rlcf	floorf@u,w,c
 14094  002F32  6E1E               	movwf	??_floorf& (0+255),c
 14095  002F34  342B               	rlcf	floorf@u+1,w,c
 14096  002F36  6E1F               	movwf	(??_floorf+1)& (0+255),c
 14097  002F38  342C               	rlcf	floorf@u+2,w,c
 14098  002F3A  6E20               	movwf	(??_floorf+2)& (0+255),c
 14099  002F3C  342D               	rlcf	floorf@u+3,w,c
 14100  002F3E  6E21               	movwf	(??_floorf+3)& (0+255),c
 14101  002F40  501E               	movf	??_floorf,w,c
 14102  002F42  101F               	iorwf	??_floorf+1,w,c
 14103  002F44  1020               	iorwf	??_floorf+2,w,c
 14104  002F46  1021               	iorwf	??_floorf+3,w,c
 14105  002F48  B4D8               	btfsc	status,2,c
 14106  002F4A  D008               	goto	l6365
 14107  002F4C  0E00               	movlw	0
 14108  002F4E  6E2A               	movwf	floorf@u,c
 14109  002F50  0E00               	movlw	0
 14110  002F52  6E2B               	movwf	floorf@u+1,c
 14111  002F54  0E80               	movlw	128
 14112  002F56  6E2C               	movwf	floorf@u+2,c
 14113  002F58  0EBF               	movlw	191
 14114  002F5A                     L28:
 14115  002F5A  6E2D               	movwf	floorf@u+3,c
 14116  002F5C                     l6365:
 14117  002F5C  C02A  F01A         	movff	floorf@u,?_floorf
 14118  002F60  C02B  F01B         	movff	floorf@u+1,?_floorf+1
 14119  002F64  C02C  F01C         	movff	floorf@u+2,?_floorf+2
 14120  002F68  C02D  F01D         	movff	floorf@u+3,?_floorf+3
 14121  002F6C  0012               	return		;funcret
 14122  002F6E                     __end_of_floorf:
 14123                           	opt callstack 0
 14124                           
 14125 ;; *************** function ___fpclassifyf *****************
 14126 ;; Defined at:
 14127 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;  x               4    0[COMRAM] float 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;  u               4   10[COMRAM] struct .
 14132 ;;  e               2    8[COMRAM] int 
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  2    0[COMRAM] int 
 14135 ;; Registers used:
 14136 ;;		wreg, status,2, status,0
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14143 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14145 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14146 ;;Total ram usage:       14 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    1
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_efgtoa
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text62
 14157  003FCE                     __ptext62:
 14158                           	opt callstack 0
 14159  003FCE                     ___fpclassifyf:
 14160                           	opt callstack 23
 14161                           
 14162                           ;incstack = 0
 14163  003FCE  C15E  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
 14164  003FD2  C15F  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 14165  003FD6  C160  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 14166  003FDA  C161  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 14167  003FDE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 14168  003FE2  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 14169  003FE6  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 14170  003FEA  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 14171  003FEE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 14172  003FF2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 14173  003FF6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 14174  003FFA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 14175  003FFE  0E18               	movlw	24
 14176  004000  D005               	goto	u5330
 14177  004002                     u5335:
 14178  004002  90D8               	bcf	status,0,c
 14179  004004  3208               	rrcf	??___fpclassifyf+3,f,c
 14180  004006  3207               	rrcf	??___fpclassifyf+2,f,c
 14181  004008  3206               	rrcf	??___fpclassifyf+1,f,c
 14182  00400A  3205               	rrcf	??___fpclassifyf,f,c
 14183  00400C                     u5330:
 14184  00400C  2EE8               	decfsz	wreg,f,c
 14185  00400E  D7F9               	goto	u5335
 14186  004010  5005               	movf	??___fpclassifyf,w,c
 14187  004012  6E09               	movwf	___fpclassifyf@e,c
 14188  004014  6A0A               	clrf	___fpclassifyf@e+1,c
 14189  004016  5009               	movf	___fpclassifyf@e,w,c
 14190  004018  100A               	iorwf	___fpclassifyf@e+1,w,c
 14191  00401A  A4D8               	btfss	status,2,c
 14192  00401C  D019               	goto	l6317
 14193  00401E  90D8               	bcf	status,0,c
 14194  004020  340B               	rlcf	___fpclassifyf@u,w,c
 14195  004022  6E05               	movwf	??___fpclassifyf& (0+255),c
 14196  004024  340C               	rlcf	___fpclassifyf@u+1,w,c
 14197  004026  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
 14198  004028  340D               	rlcf	___fpclassifyf@u+2,w,c
 14199  00402A  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
 14200  00402C  340E               	rlcf	___fpclassifyf@u+3,w,c
 14201  00402E  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
 14202  004030  5005               	movf	??___fpclassifyf,w,c
 14203  004032  1006               	iorwf	??___fpclassifyf+1,w,c
 14204  004034  1007               	iorwf	??___fpclassifyf+2,w,c
 14205  004036  1008               	iorwf	??___fpclassifyf+3,w,c
 14206  004038  A4D8               	btfss	status,2,c
 14207  00403A  D005               	goto	l6313
 14208  00403C  0E00               	movlw	0
 14209  00403E  6E02               	movwf	?___fpclassifyf+1,c
 14210  004040  0E02               	movlw	2
 14211  004042  6E01               	movwf	?___fpclassifyf,c
 14212  004044  0012               	return	
 14213  004046                     l6313:
 14214  004046  0E00               	movlw	0
 14215  004048  6E02               	movwf	?___fpclassifyf+1,c
 14216  00404A  0E03               	movlw	3
 14217  00404C  6E01               	movwf	?___fpclassifyf,c
 14218  00404E  0012               	return	
 14219  004050                     l6317:
 14220  004050  2809               	incf	___fpclassifyf@e,w,c
 14221  004052  100A               	iorwf	___fpclassifyf@e+1,w,c
 14222  004054  A4D8               	btfss	status,2,c
 14223  004056  D01C               	goto	l6323
 14224  004058  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 14225  00405C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 14226  004060  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 14227  004064  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 14228  004068  0E09               	movlw	9
 14229  00406A                     u5375:
 14230  00406A  90D8               	bcf	status,0,c
 14231  00406C  3605               	rlcf	??___fpclassifyf,f,c
 14232  00406E  3606               	rlcf	??___fpclassifyf+1,f,c
 14233  004070  3607               	rlcf	??___fpclassifyf+2,f,c
 14234  004072  3608               	rlcf	??___fpclassifyf+3,f,c
 14235  004074  2EE8               	decfsz	wreg,f,c
 14236  004076  D7F9               	goto	u5375
 14237  004078  5005               	movf	??___fpclassifyf,w,c
 14238  00407A  1006               	iorwf	??___fpclassifyf+1,w,c
 14239  00407C  1007               	iorwf	??___fpclassifyf+2,w,c
 14240  00407E  1008               	iorwf	??___fpclassifyf+3,w,c
 14241  004080  A4D8               	btfss	status,2,c
 14242  004082  D002               	goto	u5380
 14243  004084  0E01               	movlw	1
 14244  004086  D001               	goto	u5390
 14245  004088                     u5380:
 14246  004088  0E00               	movlw	0
 14247  00408A                     u5390:
 14248  00408A  6E01               	movwf	?___fpclassifyf,c
 14249  00408C  6A02               	clrf	?___fpclassifyf+1,c
 14250  00408E  0012               	return	
 14251  004090                     l6323:
 14252  004090  0E00               	movlw	0
 14253  004092  6E02               	movwf	?___fpclassifyf+1,c
 14254  004094  0E04               	movlw	4
 14255  004096  6E01               	movwf	?___fpclassifyf,c
 14256  004098  0012               	return		;funcret
 14257  00409A                     __end_of___fpclassifyf:
 14258                           	opt callstack 0
 14259                           
 14260 ;; *************** function ___fltol *****************
 14261 ;; Defined at:
 14262 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;  f1              4    0[COMRAM] int 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;  exp1            1    9[COMRAM] unsigned char 
 14267 ;;  sign1           1    8[COMRAM] unsigned char 
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  4    0[COMRAM] long 
 14270 ;; Registers used:
 14271 ;;		wreg, status,2, status,0
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14279 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14280 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14281 ;;Total ram usage:       10 bytes
 14282 ;; Hardware stack levels used:    1
 14283 ;; Hardware stack levels required when called:    1
 14284 ;; This function calls:
 14285 ;;		Nothing
 14286 ;; This function is called by:
 14287 ;;		_canisterDataScreen
 14288 ;;		_efgtoa
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           	psect	text63
 14293  00409A                     __ptext63:
 14294                           	opt callstack 0
 14295  00409A                     ___fltol:
 14296                           	opt callstack 23
 14297                           
 14298                           ;incstack = 0
 14299  00409A  3403               	rlcf	___fltol@f1+2,w,c
 14300  00409C  3404               	rlcf	___fltol@f1+3,w,c
 14301  00409E  6E0A               	movwf	___fltol@exp1,c
 14302  0040A0  500A               	movf	___fltol@exp1,w,c
 14303  0040A2  A4D8               	btfss	status,2,c
 14304  0040A4  D009               	goto	l6879
 14305  0040A6                     u6380:
 14306  0040A6  0E00               	movlw	0
 14307  0040A8  6E01               	movwf	?___fltol,c
 14308  0040AA  0E00               	movlw	0
 14309  0040AC  6E02               	movwf	?___fltol+1,c
 14310  0040AE  0E00               	movlw	0
 14311  0040B0  6E03               	movwf	?___fltol+2,c
 14312  0040B2  0E00               	movlw	0
 14313  0040B4  6E04               	movwf	?___fltol+3,c
 14314  0040B6  0012               	return	
 14315  0040B8                     l6879:
 14316  0040B8  C001  F005         	movff	___fltol@f1,??___fltol
 14317  0040BC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 14318  0040C0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 14319  0040C4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 14320  0040C8  0E20               	movlw	32
 14321  0040CA  D005               	goto	u6390
 14322  0040CC                     u6395:
 14323  0040CC  90D8               	bcf	status,0,c
 14324  0040CE  3208               	rrcf	??___fltol+3,f,c
 14325  0040D0  3207               	rrcf	??___fltol+2,f,c
 14326  0040D2  3206               	rrcf	??___fltol+1,f,c
 14327  0040D4  3205               	rrcf	??___fltol,f,c
 14328  0040D6                     u6390:
 14329  0040D6  2EE8               	decfsz	wreg,f,c
 14330  0040D8  D7F9               	goto	u6395
 14331  0040DA  5005               	movf	??___fltol,w,c
 14332  0040DC  6E09               	movwf	___fltol@sign1,c
 14333  0040DE  8E03               	bsf	___fltol@f1+2,7,c
 14334  0040E0  0EFF               	movlw	255
 14335  0040E2  1601               	andwf	___fltol@f1,f,c
 14336  0040E4  0EFF               	movlw	255
 14337  0040E6  1602               	andwf	___fltol@f1+1,f,c
 14338  0040E8  0EFF               	movlw	255
 14339  0040EA  1603               	andwf	___fltol@f1+2,f,c
 14340  0040EC  0E00               	movlw	0
 14341  0040EE  1604               	andwf	___fltol@f1+3,f,c
 14342  0040F0  0E96               	movlw	150
 14343  0040F2  5E0A               	subwf	___fltol@exp1,f,c
 14344  0040F4  AE0A               	btfss	___fltol@exp1,7,c
 14345  0040F6  D00D               	goto	l6899
 14346  0040F8  500A               	movf	___fltol@exp1,w,c
 14347  0040FA  0A80               	xorlw	128
 14348  0040FC  0F97               	addlw	151
 14349  0040FE  A0D8               	btfss	status,0,c
 14350  004100  D7D2               	goto	u6380
 14351  004102                     l6895:
 14352  004102  90D8               	bcf	status,0,c
 14353  004104  3204               	rrcf	___fltol@f1+3,f,c
 14354  004106  3203               	rrcf	___fltol@f1+2,f,c
 14355  004108  3202               	rrcf	___fltol@f1+1,f,c
 14356  00410A  3201               	rrcf	___fltol@f1,f,c
 14357  00410C  3E0A               	incfsz	___fltol@exp1,f,c
 14358  00410E  D7F9               	goto	l6895
 14359  004110  D00D               	goto	u6430
 14360  004112                     l6899:
 14361  004112  0E1F               	movlw	31
 14362  004114  640A               	cpfsgt	___fltol@exp1,c
 14363  004116  D007               	goto	l6907
 14364  004118  D7C6               	goto	u6380
 14365  00411A                     l6905:
 14366  00411A  90D8               	bcf	status,0,c
 14367  00411C  3601               	rlcf	___fltol@f1,f,c
 14368  00411E  3602               	rlcf	___fltol@f1+1,f,c
 14369  004120  3603               	rlcf	___fltol@f1+2,f,c
 14370  004122  3604               	rlcf	___fltol@f1+3,f,c
 14371  004124  060A               	decf	___fltol@exp1,f,c
 14372  004126                     l6907:
 14373  004126  500A               	movf	___fltol@exp1,w,c
 14374  004128  A4D8               	btfss	status,2,c
 14375  00412A  D7F7               	goto	l6905
 14376  00412C                     u6430:
 14377  00412C  5009               	movf	___fltol@sign1,w,c
 14378  00412E  B4D8               	btfsc	status,2,c
 14379  004130  D008               	goto	l6913
 14380  004132  1E04               	comf	___fltol@f1+3,f,c
 14381  004134  1E03               	comf	___fltol@f1+2,f,c
 14382  004136  1E02               	comf	___fltol@f1+1,f,c
 14383  004138  6C01               	negf	___fltol@f1,c
 14384  00413A  0E00               	movlw	0
 14385  00413C  2202               	addwfc	___fltol@f1+1,f,c
 14386  00413E  2203               	addwfc	___fltol@f1+2,f,c
 14387  004140  2204               	addwfc	___fltol@f1+3,f,c
 14388  004142                     l6913:
 14389  004142  C001  F001         	movff	___fltol@f1,?___fltol
 14390  004146  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 14391  00414A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 14392  00414E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 14393  004152  0012               	return		;funcret
 14394  004154                     __end_of___fltol:
 14395                           	opt callstack 0
 14396                           
 14397 ;; *************** function ___flsub *****************
 14398 ;; Defined at:
 14399 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;  b               4   91[COMRAM] long 
 14402 ;;  a               4   95[COMRAM] long 
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;		None
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  4   91[COMRAM] long 
 14407 ;; Registers used:
 14408 ;;		wreg, status,2, status,0, cstack
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14414 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14417 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14418 ;;Total ram usage:        8 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:    2
 14421 ;; This function calls:
 14422 ;;		___fladd
 14423 ;; This function is called by:
 14424 ;;		_detectCanister
 14425 ;;		_detectCanisterTurned
 14426 ;;		_testDrive
 14427 ;;		_testDrive2
 14428 ;;		_releaseDoor1
 14429 ;;		_releaseDoor2
 14430 ;;		_efgtoa
 14431 ;;		_printState
 14432 ;;		_mapDist
 14433 ;; This function uses a non-reentrant model
 14434 ;;
 14435                           
 14436                           	psect	text64
 14437  005168                     __ptext64:
 14438                           	opt callstack 0
 14439  005168                     ___flsub:
 14440                           	opt callstack 22
 14441                           
 14442                           ;incstack = 0
 14443  005168  0E00               	movlw	0
 14444  00516A  1A60               	xorwf	___flsub@a,f,c
 14445  00516C  0E00               	movlw	0
 14446  00516E  1A61               	xorwf	___flsub@a+1,f,c
 14447  005170  0E00               	movlw	0
 14448  005172  1A62               	xorwf	___flsub@a+2,f,c
 14449  005174  0E80               	movlw	128
 14450  005176  1A63               	xorwf	___flsub@a+3,f,c
 14451  005178  C05C  F04C         	movff	___flsub@b,___fladd@b
 14452  00517C  C05D  F04D         	movff	___flsub@b+1,___fladd@b+1
 14453  005180  C05E  F04E         	movff	___flsub@b+2,___fladd@b+2
 14454  005184  C05F  F04F         	movff	___flsub@b+3,___fladd@b+3
 14455  005188  C060  F050         	movff	___flsub@a,___fladd@a
 14456  00518C  C061  F051         	movff	___flsub@a+1,___fladd@a+1
 14457  005190  C062  F052         	movff	___flsub@a+2,___fladd@a+2
 14458  005194  C063  F053         	movff	___flsub@a+3,___fladd@a+3
 14459  005198  ECEF  F00D         	call	___fladd	;wreg free
 14460  00519C  C04C  F05C         	movff	?___fladd,?___flsub
 14461  0051A0  C04D  F05D         	movff	?___fladd+1,?___flsub+1
 14462  0051A4  C04E  F05E         	movff	?___fladd+2,?___flsub+2
 14463  0051A8  C04F  F05F         	movff	?___fladd+3,?___flsub+3
 14464  0051AC  0012               	return		;funcret
 14465  0051AE                     __end_of___flsub:
 14466                           	opt callstack 0
 14467                           
 14468 ;; *************** function ___fladd *****************
 14469 ;; Defined at:
 14470 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;  b               4   75[COMRAM] long 
 14473 ;;  a               4   79[COMRAM] long 
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  grs             1   90[COMRAM] unsigned char 
 14476 ;;  bexp            1   89[COMRAM] unsigned char 
 14477 ;;  aexp            1   88[COMRAM] unsigned char 
 14478 ;;  signs           1   87[COMRAM] unsigned char 
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  4   75[COMRAM] unsigned char 
 14481 ;; Registers used:
 14482 ;;		wreg, status,2, status,0
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14488 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14492 ;;Total ram usage:       16 bytes
 14493 ;; Hardware stack levels used:    1
 14494 ;; Hardware stack levels required when called:    1
 14495 ;; This function calls:
 14496 ;;		Nothing
 14497 ;; This function is called by:
 14498 ;;		_detectCanister
 14499 ;;		_testDrive
 14500 ;;		_testDrive2
 14501 ;;		_efgtoa
 14502 ;;		___flsub
 14503 ;;		_printState
 14504 ;;		_mapDist
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           	psect	text65
 14509  001BDE                     __ptext65:
 14510                           	opt callstack 0
 14511  001BDE                     ___fladd:
 14512                           	opt callstack 22
 14513                           
 14514                           ;incstack = 0
 14515  001BDE  504F               	movf	___fladd@b+3,w,c
 14516  001BE0  0B80               	andlw	128
 14517  001BE2  6E58               	movwf	___fladd@signs,c
 14518  001BE4  504F               	movf	___fladd@b+3,w,c
 14519  001BE6  244F               	addwf	___fladd@b+3,w,c
 14520  001BE8  6E5A               	movwf	___fladd@bexp,c
 14521  001BEA  BE4E               	btfsc	___fladd@b+2,7,c
 14522  001BEC  805A               	bsf	___fladd@bexp,0,c
 14523  001BEE  505A               	movf	___fladd@bexp,w,c
 14524  001BF0  B4D8               	btfsc	status,2,c
 14525  001BF2  D00D               	goto	l6089
 14526  001BF4  285A               	incf	___fladd@bexp,w,c
 14527  001BF6  A4D8               	btfss	status,2,c
 14528  001BF8  D008               	goto	l6085
 14529  001BFA  0E00               	movlw	0
 14530  001BFC  6E4C               	movwf	___fladd@b,c
 14531  001BFE  0E00               	movlw	0
 14532  001C00  6E4D               	movwf	___fladd@b+1,c
 14533  001C02  0E00               	movlw	0
 14534  001C04  6E4E               	movwf	___fladd@b+2,c
 14535  001C06  0E00               	movlw	0
 14536  001C08  6E4F               	movwf	___fladd@b+3,c
 14537  001C0A                     l6085:
 14538  001C0A  8E4E               	bsf	___fladd@b+2,7,c
 14539  001C0C  D006               	goto	L29
 14540  001C0E                     l6089:
 14541  001C0E  0E00               	movlw	0
 14542  001C10  6E4C               	movwf	___fladd@b,c
 14543  001C12  0E00               	movlw	0
 14544  001C14  6E4D               	movwf	___fladd@b+1,c
 14545  001C16  0E00               	movlw	0
 14546  001C18  6E4E               	movwf	___fladd@b+2,c
 14547  001C1A                     L29:
 14548  001C1A  0E00               	movlw	0
 14549  001C1C  6E4F               	movwf	___fladd@b+3,c
 14550  001C1E  5053               	movf	___fladd@a+3,w,c
 14551  001C20  0B80               	andlw	128
 14552  001C22  6E59               	movwf	___fladd@aexp,c
 14553  001C24  5058               	movf	___fladd@signs,w,c
 14554  001C26  1859               	xorwf	___fladd@aexp,w,c
 14555  001C28  A4D8               	btfss	status,2,c
 14556  001C2A  8C58               	bsf	___fladd@signs,6,c
 14557  001C2C  5053               	movf	___fladd@a+3,w,c
 14558  001C2E  2453               	addwf	___fladd@a+3,w,c
 14559  001C30  6E59               	movwf	___fladd@aexp,c
 14560  001C32  BE52               	btfsc	___fladd@a+2,7,c
 14561  001C34  8059               	bsf	___fladd@aexp,0,c
 14562  001C36  5059               	movf	___fladd@aexp,w,c
 14563  001C38  B4D8               	btfsc	status,2,c
 14564  001C3A  D00D               	goto	l6113
 14565  001C3C  2859               	incf	___fladd@aexp,w,c
 14566  001C3E  A4D8               	btfss	status,2,c
 14567  001C40  D008               	goto	l6109
 14568  001C42  0E00               	movlw	0
 14569  001C44  6E50               	movwf	___fladd@a,c
 14570  001C46  0E00               	movlw	0
 14571  001C48  6E51               	movwf	___fladd@a+1,c
 14572  001C4A  0E00               	movlw	0
 14573  001C4C  6E52               	movwf	___fladd@a+2,c
 14574  001C4E  0E00               	movlw	0
 14575  001C50  6E53               	movwf	___fladd@a+3,c
 14576  001C52                     l6109:
 14577  001C52  8E52               	bsf	___fladd@a+2,7,c
 14578  001C54  D006               	goto	L30
 14579  001C56                     l6113:
 14580  001C56  0E00               	movlw	0
 14581  001C58  6E50               	movwf	___fladd@a,c
 14582  001C5A  0E00               	movlw	0
 14583  001C5C  6E51               	movwf	___fladd@a+1,c
 14584  001C5E  0E00               	movlw	0
 14585  001C60  6E52               	movwf	___fladd@a+2,c
 14586  001C62                     L30:
 14587  001C62  0E00               	movlw	0
 14588  001C64  6E53               	movwf	___fladd@a+3,c
 14589  001C66  505A               	movf	___fladd@bexp,w,c
 14590  001C68  5C59               	subwf	___fladd@aexp,w,c
 14591  001C6A  B0D8               	btfsc	status,0,c
 14592  001C6C  D022               	goto	l6151
 14593  001C6E  AC58               	btfss	___fladd@signs,6,c
 14594  001C70  D002               	goto	l6121
 14595  001C72  0E80               	movlw	128
 14596  001C74  1A58               	xorwf	___fladd@signs,f,c
 14597  001C76                     l6121:
 14598  001C76  C05A  F05B         	movff	___fladd@bexp,___fladd@grs
 14599  001C7A  C059  F05A         	movff	___fladd@aexp,___fladd@bexp
 14600  001C7E  C05B  F059         	movff	___fladd@grs,___fladd@aexp
 14601  001C82  C04C  F05B         	movff	___fladd@b,___fladd@grs
 14602  001C86  C050  F04C         	movff	___fladd@a,___fladd@b
 14603  001C8A  C05B  F050         	movff	___fladd@grs,___fladd@a
 14604  001C8E  C04D  F05B         	movff	___fladd@b+1,___fladd@grs
 14605  001C92  C051  F04D         	movff	___fladd@a+1,___fladd@b+1
 14606  001C96  C05B  F051         	movff	___fladd@grs,___fladd@a+1
 14607  001C9A  C04E  F05B         	movff	___fladd@b+2,___fladd@grs
 14608  001C9E  C052  F04E         	movff	___fladd@a+2,___fladd@b+2
 14609  001CA2  C05B  F052         	movff	___fladd@grs,___fladd@a+2
 14610  001CA6  C04F  F05B         	movff	___fladd@b+3,___fladd@grs
 14611  001CAA  C053  F04F         	movff	___fladd@a+3,___fladd@b+3
 14612  001CAE  C05B  F053         	movff	___fladd@grs,___fladd@a+3
 14613  001CB2                     l6151:
 14614  001CB2  0E00               	movlw	0
 14615  001CB4  6E5B               	movwf	___fladd@grs,c
 14616  001CB6  505A               	movf	___fladd@bexp,w,c
 14617  001CB8  C059  F054         	movff	___fladd@aexp,??___fladd
 14618  001CBC  6A55               	clrf	(??___fladd+1)& (0+255),c
 14619  001CBE  5E54               	subwf	??___fladd,f,c
 14620  001CC0  0E00               	movlw	0
 14621  001CC2  5A55               	subwfb	??___fladd+1,f,c
 14622  001CC4  BE55               	btfsc	??___fladd+1,7,c
 14623  001CC6  D02C               	goto	l1887
 14624  001CC8  5055               	movf	??___fladd+1,w,c
 14625  001CCA  E104               	bnz	u4960
 14626  001CCC  0E1A               	movlw	26
 14627  001CCE  5C54               	subwf	??___fladd,w,c
 14628  001CD0  A0D8               	btfss	status,0,c
 14629  001CD2  D026               	goto	l1887
 14630  001CD4                     u4960:
 14631  001CD4  504C               	movf	___fladd@b,w,c
 14632  001CD6  104D               	iorwf	___fladd@b+1,w,c
 14633  001CD8  104E               	iorwf	___fladd@b+2,w,c
 14634  001CDA  104F               	iorwf	___fladd@b+3,w,c
 14635  001CDC  B4D8               	btfsc	status,2,c
 14636  001CDE  D002               	goto	u4970
 14637  001CE0  0E01               	movlw	1
 14638  001CE2  D001               	goto	u4980
 14639  001CE4                     u4970:
 14640  001CE4  0E00               	movlw	0
 14641  001CE6                     u4980:
 14642  001CE6  6E5B               	movwf	___fladd@grs,c
 14643  001CE8  0E00               	movlw	0
 14644  001CEA  6E4C               	movwf	___fladd@b,c
 14645  001CEC  0E00               	movlw	0
 14646  001CEE  6E4D               	movwf	___fladd@b+1,c
 14647  001CF0  0E00               	movlw	0
 14648  001CF2  6E4E               	movwf	___fladd@b+2,c
 14649  001CF4  0E00               	movlw	0
 14650  001CF6  6E4F               	movwf	___fladd@b+3,c
 14651  001CF8  C059  F05A         	movff	___fladd@aexp,___fladd@bexp
 14652  001CFC  D015               	goto	u5010
 14653  001CFE                     l1888:
 14654  001CFE  A05B               	btfss	___fladd@grs,0,c
 14655  001D00  D005               	goto	l6163
 14656  001D02  90D8               	bcf	status,0,c
 14657  001D04  305B               	rrcf	___fladd@grs,w,c
 14658  001D06  0901               	iorlw	1
 14659  001D08  6E5B               	movwf	___fladd@grs,c
 14660  001D0A  D002               	goto	l6165
 14661  001D0C                     l6163:
 14662  001D0C  90D8               	bcf	status,0,c
 14663  001D0E  325B               	rrcf	___fladd@grs,f,c
 14664  001D10                     l6165:
 14665  001D10  B04C               	btfsc	___fladd@b,0,c
 14666  001D12  8E5B               	bsf	___fladd@grs,7,c
 14667  001D14  344F               	rlcf	___fladd@b+3,w,c
 14668  001D16  324F               	rrcf	___fladd@b+3,f,c
 14669  001D18  324E               	rrcf	___fladd@b+2,f,c
 14670  001D1A  324D               	rrcf	___fladd@b+1,f,c
 14671  001D1C  324C               	rrcf	___fladd@b,f,c
 14672  001D1E  2A5A               	incf	___fladd@bexp,f,c
 14673  001D20                     l1887:
 14674  001D20  5059               	movf	___fladd@aexp,w,c
 14675  001D22  5C5A               	subwf	___fladd@bexp,w,c
 14676  001D24  A0D8               	btfss	status,0,c
 14677  001D26  D7EB               	goto	l1888
 14678  001D28                     u5010:
 14679  001D28  BC58               	btfsc	___fladd@signs,6,c
 14680  001D2A  D028               	goto	l6197
 14681  001D2C  505A               	movf	___fladd@bexp,w,c
 14682  001D2E  A4D8               	btfss	status,2,c
 14683  001D30  D009               	goto	l6179
 14684  001D32  0E00               	movlw	0
 14685  001D34  6E4C               	movwf	?___fladd,c
 14686  001D36  0E00               	movlw	0
 14687  001D38  6E4D               	movwf	?___fladd+1,c
 14688  001D3A  0E00               	movlw	0
 14689  001D3C  6E4E               	movwf	?___fladd+2,c
 14690  001D3E  0E00               	movlw	0
 14691  001D40  6E4F               	movwf	?___fladd+3,c
 14692  001D42  0012               	return	
 14693  001D44                     l6179:
 14694  001D44  5050               	movf	___fladd@a,w,c
 14695  001D46  264C               	addwf	___fladd@b,f,c
 14696  001D48  5051               	movf	___fladd@a+1,w,c
 14697  001D4A  224D               	addwfc	___fladd@b+1,f,c
 14698  001D4C  5052               	movf	___fladd@a+2,w,c
 14699  001D4E  224E               	addwfc	___fladd@b+2,f,c
 14700  001D50  5053               	movf	___fladd@a+3,w,c
 14701  001D52  224F               	addwfc	___fladd@b+3,f,c
 14702  001D54  A04F               	btfss	___fladd@b+3,0,c
 14703  001D56  D071               	goto	u5140
 14704  001D58  A05B               	btfss	___fladd@grs,0,c
 14705  001D5A  D005               	goto	l6187
 14706  001D5C  90D8               	bcf	status,0,c
 14707  001D5E  305B               	rrcf	___fladd@grs,w,c
 14708  001D60  0901               	iorlw	1
 14709  001D62  6E5B               	movwf	___fladd@grs,c
 14710  001D64  D002               	goto	l6189
 14711  001D66                     l6187:
 14712  001D66  90D8               	bcf	status,0,c
 14713  001D68  325B               	rrcf	___fladd@grs,f,c
 14714  001D6A                     l6189:
 14715  001D6A  B04C               	btfsc	___fladd@b,0,c
 14716  001D6C  8E5B               	bsf	___fladd@grs,7,c
 14717  001D6E  344F               	rlcf	___fladd@b+3,w,c
 14718  001D70  324F               	rrcf	___fladd@b+3,f,c
 14719  001D72  324E               	rrcf	___fladd@b+2,f,c
 14720  001D74  324D               	rrcf	___fladd@b+1,f,c
 14721  001D76  324C               	rrcf	___fladd@b,f,c
 14722  001D78  2A5A               	incf	___fladd@bexp,f,c
 14723  001D7A  D05F               	goto	u5140
 14724  001D7C                     l6197:
 14725  001D7C  5050               	movf	___fladd@a,w,c
 14726  001D7E  5C4C               	subwf	___fladd@b,w,c
 14727  001D80  5051               	movf	___fladd@a+1,w,c
 14728  001D82  584D               	subwfb	___fladd@b+1,w,c
 14729  001D84  5052               	movf	___fladd@a+2,w,c
 14730  001D86  584E               	subwfb	___fladd@b+2,w,c
 14731  001D88  504F               	movf	___fladd@b+3,w,c
 14732  001D8A  0A80               	xorlw	128
 14733  001D8C  6E54               	movwf	??___fladd& (0+255),c
 14734  001D8E  5053               	movf	___fladd@a+3,w,c
 14735  001D90  0A80               	xorlw	128
 14736  001D92  5854               	subwfb	??___fladd& (0+255),w,c
 14737  001D94  B0D8               	btfsc	status,0,c
 14738  001D96  D025               	goto	l6207
 14739  001D98  504C               	movf	___fladd@b,w,c
 14740  001D9A  5C50               	subwf	___fladd@a,w,c
 14741  001D9C  6E54               	movwf	??___fladd& (0+255),c
 14742  001D9E  504D               	movf	___fladd@b+1,w,c
 14743  001DA0  5851               	subwfb	___fladd@a+1,w,c
 14744  001DA2  6E55               	movwf	(??___fladd+1)& (0+255),c
 14745  001DA4  504E               	movf	___fladd@b+2,w,c
 14746  001DA6  5852               	subwfb	___fladd@a+2,w,c
 14747  001DA8  6E56               	movwf	(??___fladd+2)& (0+255),c
 14748  001DAA  504F               	movf	___fladd@b+3,w,c
 14749  001DAC  5853               	subwfb	___fladd@a+3,w,c
 14750  001DAE  6E57               	movwf	(??___fladd+3)& (0+255),c
 14751  001DB0  0EFF               	movlw	255
 14752  001DB2  2454               	addwf	??___fladd,w,c
 14753  001DB4  6E4C               	movwf	___fladd@b,c
 14754  001DB6  0EFF               	movlw	255
 14755  001DB8  2055               	addwfc	??___fladd+1,w,c
 14756  001DBA  6E4D               	movwf	___fladd@b+1,c
 14757  001DBC  0EFF               	movlw	255
 14758  001DBE  2056               	addwfc	??___fladd+2,w,c
 14759  001DC0  6E4E               	movwf	___fladd@b+2,c
 14760  001DC2  0EFF               	movlw	255
 14761  001DC4  2057               	addwfc	??___fladd+3,w,c
 14762  001DC6  6E4F               	movwf	___fladd@b+3,c
 14763  001DC8  0E80               	movlw	128
 14764  001DCA  1A58               	xorwf	___fladd@signs,f,c
 14765  001DCC  6C5B               	negf	___fladd@grs,c
 14766  001DCE  505B               	movf	___fladd@grs,w,c
 14767  001DD0  A4D8               	btfss	status,2,c
 14768  001DD2  D00F               	goto	l1903
 14769  001DD4  0E01               	movlw	1
 14770  001DD6  264C               	addwf	___fladd@b,f,c
 14771  001DD8  0E00               	movlw	0
 14772  001DDA  224D               	addwfc	___fladd@b+1,f,c
 14773  001DDC  224E               	addwfc	___fladd@b+2,f,c
 14774  001DDE  224F               	addwfc	___fladd@b+3,f,c
 14775  001DE0  D008               	goto	l1903
 14776  001DE2                     l6207:
 14777  001DE2  5050               	movf	___fladd@a,w,c
 14778  001DE4  5E4C               	subwf	___fladd@b,f,c
 14779  001DE6  5051               	movf	___fladd@a+1,w,c
 14780  001DE8  5A4D               	subwfb	___fladd@b+1,f,c
 14781  001DEA  5052               	movf	___fladd@a+2,w,c
 14782  001DEC  5A4E               	subwfb	___fladd@b+2,f,c
 14783  001DEE  5053               	movf	___fladd@a+3,w,c
 14784  001DF0  5A4F               	subwfb	___fladd@b+3,f,c
 14785  001DF2                     l1903:
 14786  001DF2  504C               	movf	___fladd@b,w,c
 14787  001DF4  104D               	iorwf	___fladd@b+1,w,c
 14788  001DF6  104E               	iorwf	___fladd@b+2,w,c
 14789  001DF8  104F               	iorwf	___fladd@b+3,w,c
 14790  001DFA  A4D8               	btfss	status,2,c
 14791  001DFC  D01C               	goto	l6231
 14792  001DFE  505B               	movf	___fladd@grs,w,c
 14793  001E00  A4D8               	btfss	status,2,c
 14794  001E02  D019               	goto	l6231
 14795  001E04  0E00               	movlw	0
 14796  001E06  6E4C               	movwf	?___fladd,c
 14797  001E08  0E00               	movlw	0
 14798  001E0A  6E4D               	movwf	?___fladd+1,c
 14799  001E0C  0E00               	movlw	0
 14800  001E0E  6E4E               	movwf	?___fladd+2,c
 14801  001E10  0E00               	movlw	0
 14802  001E12  6E4F               	movwf	?___fladd+3,c
 14803  001E14  0012               	return	
 14804  001E16                     l6215:
 14805  001E16  90D8               	bcf	status,0,c
 14806  001E18  364C               	rlcf	___fladd@b,f,c
 14807  001E1A  364D               	rlcf	___fladd@b+1,f,c
 14808  001E1C  364E               	rlcf	___fladd@b+2,f,c
 14809  001E1E  364F               	rlcf	___fladd@b+3,f,c
 14810  001E20  BE5B               	btfsc	___fladd@grs,7,c
 14811  001E22  804C               	bsf	___fladd@b,0,c
 14812  001E24  A05B               	btfss	___fladd@grs,0,c
 14813  001E26  D002               	goto	l6225
 14814  001E28  80D8               	bsf	status,0,c
 14815  001E2A  D001               	goto	L31
 14816  001E2C                     l6225:
 14817  001E2C  90D8               	bcf	status,0,c
 14818  001E2E                     L31:
 14819  001E2E  365B               	rlcf	___fladd@grs,f,c
 14820  001E30  505A               	movf	___fladd@bexp,w,c
 14821  001E32  A4D8               	btfss	status,2,c
 14822  001E34  065A               	decf	___fladd@bexp,f,c
 14823  001E36                     l6231:
 14824  001E36  AE4E               	btfss	___fladd@b+2,7,c
 14825  001E38  D7EE               	goto	l6215
 14826  001E3A                     u5140:
 14827  001E3A  0E00               	movlw	0
 14828  001E3C  6E59               	movwf	___fladd@aexp,c
 14829  001E3E  AE5B               	btfss	___fladd@grs,7,c
 14830  001E40  D00B               	goto	l1912
 14831  001E42  C05B  F054         	movff	___fladd@grs,??___fladd
 14832  001E46  0E7F               	movlw	127
 14833  001E48  1654               	andwf	??___fladd,f,c
 14834  001E4A  B4D8               	btfsc	status,2,c
 14835  001E4C  D003               	goto	l1913
 14836  001E4E                     u5160:
 14837  001E4E  0E01               	movlw	1
 14838  001E50  6E59               	movwf	___fladd@aexp,c
 14839  001E52  D002               	goto	l1912
 14840  001E54                     l1913:
 14841  001E54  B04C               	btfsc	___fladd@b,0,c
 14842  001E56  D7FB               	goto	u5160
 14843  001E58                     l1912:
 14844  001E58  5059               	movf	___fladd@aexp,w,c
 14845  001E5A  B4D8               	btfsc	status,2,c
 14846  001E5C  D020               	goto	l6251
 14847  001E5E  0E01               	movlw	1
 14848  001E60  264C               	addwf	___fladd@b,f,c
 14849  001E62  0E00               	movlw	0
 14850  001E64  224D               	addwfc	___fladd@b+1,f,c
 14851  001E66  224E               	addwfc	___fladd@b+2,f,c
 14852  001E68  224F               	addwfc	___fladd@b+3,f,c
 14853  001E6A  A04F               	btfss	___fladd@b+3,0,c
 14854  001E6C  D018               	goto	l6251
 14855  001E6E  C04C  F054         	movff	___fladd@b,??___fladd
 14856  001E72  C04D  F055         	movff	___fladd@b+1,??___fladd+1
 14857  001E76  C04E  F056         	movff	___fladd@b+2,??___fladd+2
 14858  001E7A  C04F  F057         	movff	___fladd@b+3,??___fladd+3
 14859  001E7E  3457               	rlcf	??___fladd+3,w,c
 14860  001E80  3257               	rrcf	??___fladd+3,f,c
 14861  001E82  3256               	rrcf	??___fladd+2,f,c
 14862  001E84  3255               	rrcf	??___fladd+1,f,c
 14863  001E86  3254               	rrcf	??___fladd,f,c
 14864  001E88  C054  F04C         	movff	??___fladd,___fladd@b
 14865  001E8C  C055  F04D         	movff	??___fladd+1,___fladd@b+1
 14866  001E90  C056  F04E         	movff	??___fladd+2,___fladd@b+2
 14867  001E94  C057  F04F         	movff	??___fladd+3,___fladd@b+3
 14868  001E98  285A               	incf	___fladd@bexp,w,c
 14869  001E9A  A4D8               	btfss	status,2,c
 14870  001E9C  2A5A               	incf	___fladd@bexp,f,c
 14871  001E9E                     l6251:
 14872  001E9E  285A               	incf	___fladd@bexp,w,c
 14873  001EA0  B4D8               	btfsc	status,2,c
 14874  001EA2  D003               	goto	u5220
 14875  001EA4  505A               	movf	___fladd@bexp,w,c
 14876  001EA6  A4D8               	btfss	status,2,c
 14877  001EA8  D00D               	goto	l6259
 14878  001EAA                     u5220:
 14879  001EAA  0E00               	movlw	0
 14880  001EAC  6E4C               	movwf	___fladd@b,c
 14881  001EAE  0E00               	movlw	0
 14882  001EB0  6E4D               	movwf	___fladd@b+1,c
 14883  001EB2  0E00               	movlw	0
 14884  001EB4  6E4E               	movwf	___fladd@b+2,c
 14885  001EB6  0E00               	movlw	0
 14886  001EB8  6E4F               	movwf	___fladd@b+3,c
 14887  001EBA  505A               	movf	___fladd@bexp,w,c
 14888  001EBC  A4D8               	btfss	status,2,c
 14889  001EBE  D002               	goto	l6259
 14890  001EC0  0E00               	movlw	0
 14891  001EC2  6E58               	movwf	___fladd@signs,c
 14892  001EC4                     l6259:
 14893  001EC4  A05A               	btfss	___fladd@bexp,0,c
 14894  001EC6  D002               	goto	l6263
 14895  001EC8  8E4E               	bsf	___fladd@b+2,7,c
 14896  001ECA  D001               	goto	l6265
 14897  001ECC                     l6263:
 14898  001ECC  9E4E               	bcf	___fladd@b+2,7,c
 14899  001ECE                     l6265:
 14900  001ECE  90D8               	bcf	status,0,c
 14901  001ED0  305A               	rrcf	___fladd@bexp,w,c
 14902  001ED2  6E4F               	movwf	___fladd@b+3,c
 14903  001ED4  BE58               	btfsc	___fladd@signs,7,c
 14904  001ED6  8E4F               	bsf	___fladd@b+3,7,c
 14905  001ED8  C04C  F04C         	movff	___fladd@b,?___fladd
 14906  001EDC  C04D  F04D         	movff	___fladd@b+1,?___fladd+1
 14907  001EE0  C04E  F04E         	movff	___fladd@b+2,?___fladd+2
 14908  001EE4  C04F  F04F         	movff	___fladd@b+3,?___fladd+3
 14909  001EE8  0012               	return		;funcret
 14910  001EEA                     __end_of___fladd:
 14911                           	opt callstack 0
 14912                           
 14913 ;; *************** function ___flneg *****************
 14914 ;; Defined at:
 14915 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 14916 ;; Parameters:    Size  Location     Type
 14917 ;;  f1              4    0[COMRAM] unsigned char 
 14918 ;; Auto vars:     Size  Location     Type
 14919 ;;		None
 14920 ;; Return value:  Size  Location     Type
 14921 ;;                  4    0[COMRAM] unsigned char 
 14922 ;; Registers used:
 14923 ;;		wreg, status,2, status,0
 14924 ;; Tracked objects:
 14925 ;;		On entry : 0/0
 14926 ;;		On exit  : 0/0
 14927 ;;		Unchanged: 0/0
 14928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14933 ;;Total ram usage:        4 bytes
 14934 ;; Hardware stack levels used:    1
 14935 ;; Hardware stack levels required when called:    1
 14936 ;; This function calls:
 14937 ;;		Nothing
 14938 ;; This function is called by:
 14939 ;;		_efgtoa
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           	psect	text66
 14944  0053EA                     __ptext66:
 14945                           	opt callstack 0
 14946  0053EA                     ___flneg:
 14947                           	opt callstack 23
 14948                           
 14949                           ;incstack = 0
 14950  0053EA  5001               	movf	___flneg@f1,w,c
 14951  0053EC  1002               	iorwf	___flneg@f1+1,w,c
 14952  0053EE  1003               	iorwf	___flneg@f1+2,w,c
 14953  0053F0  1004               	iorwf	___flneg@f1+3,w,c
 14954  0053F2  B4D8               	btfsc	status,2,c
 14955  0053F4  D008               	goto	l6869
 14956  0053F6  0E00               	movlw	0
 14957  0053F8  1A01               	xorwf	___flneg@f1,f,c
 14958  0053FA  0E00               	movlw	0
 14959  0053FC  1A02               	xorwf	___flneg@f1+1,f,c
 14960  0053FE  0E00               	movlw	0
 14961  005400  1A03               	xorwf	___flneg@f1+2,f,c
 14962  005402  0E80               	movlw	128
 14963  005404  1A04               	xorwf	___flneg@f1+3,f,c
 14964  005406                     l6869:
 14965  005406  C001  F001         	movff	___flneg@f1,?___flneg
 14966  00540A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14967  00540E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14968  005412  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14969  005416  0012               	return		;funcret
 14970  005418                     __end_of___flneg:
 14971                           	opt callstack 0
 14972                           
 14973 ;; *************** function ___flmul *****************
 14974 ;; Defined at:
 14975 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 14976 ;; Parameters:    Size  Location     Type
 14977 ;;  b               4   44[COMRAM] unsigned char 
 14978 ;;  a               4   48[COMRAM] unsigned char 
 14979 ;; Auto vars:     Size  Location     Type
 14980 ;;  prod            4   63[COMRAM] struct .
 14981 ;;  grs             4   57[COMRAM] unsigned long 
 14982 ;;  temp            2   67[COMRAM] struct .
 14983 ;;  bexp            1   62[COMRAM] unsigned char 
 14984 ;;  aexp            1   61[COMRAM] unsigned char 
 14985 ;;  sign            1   56[COMRAM] unsigned char 
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  4   44[COMRAM] unsigned char 
 14988 ;; Registers used:
 14989 ;;		wreg, status,2, status,0, prodl, prodh
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14995 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14996 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14998 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14999 ;;Total ram usage:       25 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:    1
 15002 ;; This function calls:
 15003 ;;		Nothing
 15004 ;; This function is called by:
 15005 ;;		_buildTimeScreen
 15006 ;;		_getTime
 15007 ;;		_getDistance
 15008 ;;		_efgtoa
 15009 ;;		_adjustCanister
 15010 ;;		_mapDist
 15011 ;;		_getDistance2
 15012 ;; This function uses a non-reentrant model
 15013 ;;
 15014                           
 15015                           	psect	text67
 15016  001548                     __ptext67:
 15017                           	opt callstack 0
 15018  001548                     ___flmul:
 15019                           	opt callstack 23
 15020                           
 15021                           ;incstack = 0
 15022  001548  5030               	movf	___flmul@b+3,w,c
 15023  00154A  0B80               	andlw	128
 15024  00154C  6E39               	movwf	___flmul@sign,c
 15025  00154E  5030               	movf	___flmul@b+3,w,c
 15026  001550  2430               	addwf	___flmul@b+3,w,c
 15027  001552  6E3F               	movwf	___flmul@bexp,c
 15028  001554  BE2F               	btfsc	___flmul@b+2,7,c
 15029  001556  803F               	bsf	___flmul@bexp,0,c
 15030  001558  503F               	movf	___flmul@bexp,w,c
 15031  00155A  B4D8               	btfsc	status,2,c
 15032  00155C  D00D               	goto	l6625
 15033  00155E  283F               	incf	___flmul@bexp,w,c
 15034  001560  A4D8               	btfss	status,2,c
 15035  001562  D008               	goto	l6623
 15036  001564  0E00               	movlw	0
 15037  001566  6E2D               	movwf	___flmul@b,c
 15038  001568  0E00               	movlw	0
 15039  00156A  6E2E               	movwf	___flmul@b+1,c
 15040  00156C  0E00               	movlw	0
 15041  00156E  6E2F               	movwf	___flmul@b+2,c
 15042  001570  0E00               	movlw	0
 15043  001572  6E30               	movwf	___flmul@b+3,c
 15044  001574                     l6623:
 15045  001574  8E2F               	bsf	___flmul@b+2,7,c
 15046  001576  D008               	goto	l6627
 15047  001578                     l6625:
 15048  001578  0E00               	movlw	0
 15049  00157A  6E2D               	movwf	___flmul@b,c
 15050  00157C  0E00               	movlw	0
 15051  00157E  6E2E               	movwf	___flmul@b+1,c
 15052  001580  0E00               	movlw	0
 15053  001582  6E2F               	movwf	___flmul@b+2,c
 15054  001584  0E00               	movlw	0
 15055  001586  6E30               	movwf	___flmul@b+3,c
 15056  001588                     l6627:
 15057  001588  5034               	movf	___flmul@a+3,w,c
 15058  00158A  0B80               	andlw	128
 15059  00158C  1A39               	xorwf	___flmul@sign,f,c
 15060  00158E  5034               	movf	___flmul@a+3,w,c
 15061  001590  2434               	addwf	___flmul@a+3,w,c
 15062  001592  6E3E               	movwf	___flmul@aexp,c
 15063  001594  BE33               	btfsc	___flmul@a+2,7,c
 15064  001596  803E               	bsf	___flmul@aexp,0,c
 15065  001598  503E               	movf	___flmul@aexp,w,c
 15066  00159A  B4D8               	btfsc	status,2,c
 15067  00159C  D00D               	goto	l6643
 15068  00159E  283E               	incf	___flmul@aexp,w,c
 15069  0015A0  A4D8               	btfss	status,2,c
 15070  0015A2  D008               	goto	l6641
 15071  0015A4  0E00               	movlw	0
 15072  0015A6  6E31               	movwf	___flmul@a,c
 15073  0015A8  0E00               	movlw	0
 15074  0015AA  6E32               	movwf	___flmul@a+1,c
 15075  0015AC  0E00               	movlw	0
 15076  0015AE  6E33               	movwf	___flmul@a+2,c
 15077  0015B0  0E00               	movlw	0
 15078  0015B2  6E34               	movwf	___flmul@a+3,c
 15079  0015B4                     l6641:
 15080  0015B4  8E33               	bsf	___flmul@a+2,7,c
 15081  0015B6  D008               	goto	l1972
 15082  0015B8                     l6643:
 15083  0015B8  0E00               	movlw	0
 15084  0015BA  6E31               	movwf	___flmul@a,c
 15085  0015BC  0E00               	movlw	0
 15086  0015BE  6E32               	movwf	___flmul@a+1,c
 15087  0015C0  0E00               	movlw	0
 15088  0015C2  6E33               	movwf	___flmul@a+2,c
 15089  0015C4  0E00               	movlw	0
 15090  0015C6  6E34               	movwf	___flmul@a+3,c
 15091  0015C8                     l1972:
 15092  0015C8  503E               	movf	___flmul@aexp,w,c
 15093  0015CA  B4D8               	btfsc	status,2,c
 15094  0015CC  D003               	goto	u6050
 15095  0015CE  503F               	movf	___flmul@bexp,w,c
 15096  0015D0  A4D8               	btfss	status,2,c
 15097  0015D2  D009               	goto	l6651
 15098  0015D4                     u6050:
 15099  0015D4  0E00               	movlw	0
 15100  0015D6  6E2D               	movwf	?___flmul,c
 15101  0015D8  0E00               	movlw	0
 15102  0015DA  6E2E               	movwf	?___flmul+1,c
 15103  0015DC  0E00               	movlw	0
 15104  0015DE  6E2F               	movwf	?___flmul+2,c
 15105  0015E0  0E00               	movlw	0
 15106  0015E2  6E30               	movwf	?___flmul+3,c
 15107  0015E4  0012               	return	
 15108  0015E6                     l6651:
 15109  0015E6  5033               	movf	___flmul@a+2,w,c
 15110  0015E8  022D               	mulwf	___flmul@b,c
 15111  0015EA  CFF3 F044          	movff	prodl,___flmul@temp
 15112  0015EE  CFF4 F045          	movff	prodh,___flmul@temp+1
 15113  0015F2  5044               	movf	___flmul@temp,w,c
 15114  0015F4  6E3A               	movwf	___flmul@grs,c
 15115  0015F6  6A3B               	clrf	___flmul@grs+1,c
 15116  0015F8  6A3C               	clrf	___flmul@grs+2,c
 15117  0015FA  6A3D               	clrf	___flmul@grs+3,c
 15118  0015FC  5045               	movf	___flmul@temp+1,w,c
 15119  0015FE  6E40               	movwf	___flmul@prod,c
 15120  001600  6A41               	clrf	___flmul@prod+1,c
 15121  001602  6A42               	clrf	___flmul@prod+2,c
 15122  001604  6A43               	clrf	___flmul@prod+3,c
 15123  001606  5032               	movf	___flmul@a+1,w,c
 15124  001608  022E               	mulwf	___flmul@b+1,c
 15125  00160A  CFF3 F044          	movff	prodl,___flmul@temp
 15126  00160E  CFF4 F045          	movff	prodh,___flmul@temp+1
 15127  001612  5044               	movf	___flmul@temp,w,c
 15128  001614  263A               	addwf	___flmul@grs,f,c
 15129  001616  0E00               	movlw	0
 15130  001618  223B               	addwfc	___flmul@grs+1,f,c
 15131  00161A  223C               	addwfc	___flmul@grs+2,f,c
 15132  00161C  223D               	addwfc	___flmul@grs+3,f,c
 15133  00161E  5045               	movf	___flmul@temp+1,w,c
 15134  001620  2640               	addwf	___flmul@prod,f,c
 15135  001622  0E00               	movlw	0
 15136  001624  2241               	addwfc	___flmul@prod+1,f,c
 15137  001626  2242               	addwfc	___flmul@prod+2,f,c
 15138  001628  2243               	addwfc	___flmul@prod+3,f,c
 15139  00162A  5031               	movf	___flmul@a,w,c
 15140  00162C  022F               	mulwf	___flmul@b+2,c
 15141  00162E  CFF3 F044          	movff	prodl,___flmul@temp
 15142  001632  CFF4 F045          	movff	prodh,___flmul@temp+1
 15143  001636  5044               	movf	___flmul@temp,w,c
 15144  001638  263A               	addwf	___flmul@grs,f,c
 15145  00163A  0E00               	movlw	0
 15146  00163C  223B               	addwfc	___flmul@grs+1,f,c
 15147  00163E  223C               	addwfc	___flmul@grs+2,f,c
 15148  001640  223D               	addwfc	___flmul@grs+3,f,c
 15149  001642  5045               	movf	___flmul@temp+1,w,c
 15150  001644  2640               	addwf	___flmul@prod,f,c
 15151  001646  0E00               	movlw	0
 15152  001648  2241               	addwfc	___flmul@prod+1,f,c
 15153  00164A  2242               	addwfc	___flmul@prod+2,f,c
 15154  00164C  2243               	addwfc	___flmul@prod+3,f,c
 15155  00164E  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 15156  001652  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 15157  001656  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 15158  00165A  6A3A               	clrf	___flmul@grs,c
 15159  00165C  5031               	movf	___flmul@a,w,c
 15160  00165E  022E               	mulwf	___flmul@b+1,c
 15161  001660  CFF3 F044          	movff	prodl,___flmul@temp
 15162  001664  CFF4 F045          	movff	prodh,___flmul@temp+1
 15163  001668  5044               	movf	___flmul@temp,w,c
 15164  00166A  263A               	addwf	___flmul@grs,f,c
 15165  00166C  5045               	movf	___flmul@temp+1,w,c
 15166  00166E  223B               	addwfc	___flmul@grs+1,f,c
 15167  001670  0E00               	movlw	0
 15168  001672  223C               	addwfc	___flmul@grs+2,f,c
 15169  001674  0E00               	movlw	0
 15170  001676  223D               	addwfc	___flmul@grs+3,f,c
 15171  001678  5032               	movf	___flmul@a+1,w,c
 15172  00167A  022D               	mulwf	___flmul@b,c
 15173  00167C  CFF3 F044          	movff	prodl,___flmul@temp
 15174  001680  CFF4 F045          	movff	prodh,___flmul@temp+1
 15175  001684  5044               	movf	___flmul@temp,w,c
 15176  001686  263A               	addwf	___flmul@grs,f,c
 15177  001688  5045               	movf	___flmul@temp+1,w,c
 15178  00168A  223B               	addwfc	___flmul@grs+1,f,c
 15179  00168C  0E00               	movlw	0
 15180  00168E  223C               	addwfc	___flmul@grs+2,f,c
 15181  001690  0E00               	movlw	0
 15182  001692  223D               	addwfc	___flmul@grs+3,f,c
 15183  001694  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 15184  001698  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 15185  00169C  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 15186  0016A0  6A3A               	clrf	___flmul@grs,c
 15187  0016A2  5031               	movf	___flmul@a,w,c
 15188  0016A4  022D               	mulwf	___flmul@b,c
 15189  0016A6  CFF3 F044          	movff	prodl,___flmul@temp
 15190  0016AA  CFF4 F045          	movff	prodh,___flmul@temp+1
 15191  0016AE  5044               	movf	___flmul@temp,w,c
 15192  0016B0  263A               	addwf	___flmul@grs,f,c
 15193  0016B2  5045               	movf	___flmul@temp+1,w,c
 15194  0016B4  223B               	addwfc	___flmul@grs+1,f,c
 15195  0016B6  0E00               	movlw	0
 15196  0016B8  223C               	addwfc	___flmul@grs+2,f,c
 15197  0016BA  0E00               	movlw	0
 15198  0016BC  223D               	addwfc	___flmul@grs+3,f,c
 15199  0016BE  5033               	movf	___flmul@a+2,w,c
 15200  0016C0  022E               	mulwf	___flmul@b+1,c
 15201  0016C2  CFF3 F044          	movff	prodl,___flmul@temp
 15202  0016C6  CFF4 F045          	movff	prodh,___flmul@temp+1
 15203  0016CA  5044               	movf	___flmul@temp,w,c
 15204  0016CC  2640               	addwf	___flmul@prod,f,c
 15205  0016CE  5045               	movf	___flmul@temp+1,w,c
 15206  0016D0  2241               	addwfc	___flmul@prod+1,f,c
 15207  0016D2  0E00               	movlw	0
 15208  0016D4  2242               	addwfc	___flmul@prod+2,f,c
 15209  0016D6  0E00               	movlw	0
 15210  0016D8  2243               	addwfc	___flmul@prod+3,f,c
 15211  0016DA  5032               	movf	___flmul@a+1,w,c
 15212  0016DC  022F               	mulwf	___flmul@b+2,c
 15213  0016DE  CFF3 F044          	movff	prodl,___flmul@temp
 15214  0016E2  CFF4 F045          	movff	prodh,___flmul@temp+1
 15215  0016E6  5044               	movf	___flmul@temp,w,c
 15216  0016E8  2640               	addwf	___flmul@prod,f,c
 15217  0016EA  5045               	movf	___flmul@temp+1,w,c
 15218  0016EC  2241               	addwfc	___flmul@prod+1,f,c
 15219  0016EE  0E00               	movlw	0
 15220  0016F0  2242               	addwfc	___flmul@prod+2,f,c
 15221  0016F2  0E00               	movlw	0
 15222  0016F4  2243               	addwfc	___flmul@prod+3,f,c
 15223  0016F6  5033               	movf	___flmul@a+2,w,c
 15224  0016F8  022F               	mulwf	___flmul@b+2,c
 15225  0016FA  CFF3 F044          	movff	prodl,___flmul@temp
 15226  0016FE  CFF4 F045          	movff	prodh,___flmul@temp+1
 15227  001702  5044               	movf	___flmul@temp,w,c
 15228  001704  6E35               	movwf	??___flmul& (0+255),c
 15229  001706  5045               	movf	___flmul@temp+1,w,c
 15230  001708  6E36               	movwf	(??___flmul+1)& (0+255),c
 15231  00170A  6A37               	clrf	(??___flmul+2)& (0+255),c
 15232  00170C  6A38               	clrf	(??___flmul+3)& (0+255),c
 15233  00170E  C037  F038         	movff	??___flmul+2,??___flmul+3
 15234  001712  C036  F037         	movff	??___flmul+1,??___flmul+2
 15235  001716  C035  F036         	movff	??___flmul,??___flmul+1
 15236  00171A  6A35               	clrf	??___flmul,c
 15237  00171C  5035               	movf	??___flmul,w,c
 15238  00171E  2640               	addwf	___flmul@prod,f,c
 15239  001720  5036               	movf	??___flmul+1,w,c
 15240  001722  2241               	addwfc	___flmul@prod+1,f,c
 15241  001724  5037               	movf	??___flmul+2,w,c
 15242  001726  2242               	addwfc	___flmul@prod+2,f,c
 15243  001728  5038               	movf	??___flmul+3,w,c
 15244  00172A  2243               	addwfc	___flmul@prod+3,f,c
 15245  00172C  C03A  F035         	movff	___flmul@grs,??___flmul
 15246  001730  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 15247  001734  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 15248  001738  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 15249  00173C  0E19               	movlw	25
 15250  00173E  D005               	goto	u6060
 15251  001740                     u6065:
 15252  001740  90D8               	bcf	status,0,c
 15253  001742  3238               	rrcf	??___flmul+3,f,c
 15254  001744  3237               	rrcf	??___flmul+2,f,c
 15255  001746  3236               	rrcf	??___flmul+1,f,c
 15256  001748  3235               	rrcf	??___flmul,f,c
 15257  00174A                     u6060:
 15258  00174A  2EE8               	decfsz	wreg,f,c
 15259  00174C  D7F9               	goto	u6065
 15260  00174E  5035               	movf	??___flmul,w,c
 15261  001750  2640               	addwf	___flmul@prod,f,c
 15262  001752  5036               	movf	??___flmul+1,w,c
 15263  001754  2241               	addwfc	___flmul@prod+1,f,c
 15264  001756  5037               	movf	??___flmul+2,w,c
 15265  001758  2242               	addwfc	___flmul@prod+2,f,c
 15266  00175A  5038               	movf	??___flmul+3,w,c
 15267  00175C  2243               	addwfc	___flmul@prod+3,f,c
 15268  00175E  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 15269  001762  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 15270  001766  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 15271  00176A  6A3A               	clrf	___flmul@grs,c
 15272  00176C  503E               	movf	___flmul@aexp,w,c
 15273  00176E  C03F  F035         	movff	___flmul@bexp,??___flmul
 15274  001772  6A36               	clrf	(??___flmul+1)& (0+255),c
 15275  001774  2635               	addwf	??___flmul,f,c
 15276  001776  0E00               	movlw	0
 15277  001778  2236               	addwfc	??___flmul+1,f,c
 15278  00177A  0E82               	movlw	130
 15279  00177C  2435               	addwf	??___flmul,w,c
 15280  00177E  6E44               	movwf	___flmul@temp,c
 15281  001780  0EFF               	movlw	255
 15282  001782  2036               	addwfc	??___flmul+1,w,c
 15283  001784  6E45               	movwf	___flmul@temp+1,c
 15284  001786  D00F               	goto	l6699
 15285  001788                     l6693:
 15286  001788  90D8               	bcf	status,0,c
 15287  00178A  3640               	rlcf	___flmul@prod,f,c
 15288  00178C  3641               	rlcf	___flmul@prod+1,f,c
 15289  00178E  3642               	rlcf	___flmul@prod+2,f,c
 15290  001790  3643               	rlcf	___flmul@prod+3,f,c
 15291  001792  BE3D               	btfsc	___flmul@grs+3,7,c
 15292  001794  8040               	bsf	___flmul@prod,0,c
 15293  001796  90D8               	bcf	status,0,c
 15294  001798  363A               	rlcf	___flmul@grs,f,c
 15295  00179A  363B               	rlcf	___flmul@grs+1,f,c
 15296  00179C  363C               	rlcf	___flmul@grs+2,f,c
 15297  00179E  363D               	rlcf	___flmul@grs+3,f,c
 15298  0017A0  0644               	decf	___flmul@temp,f,c
 15299  0017A2  A0D8               	btfss	status,0,c
 15300  0017A4  0645               	decf	___flmul@temp+1,f,c
 15301  0017A6                     l6699:
 15302  0017A6  AE42               	btfss	___flmul@prod+2,7,c
 15303  0017A8  D7EF               	goto	l6693
 15304  0017AA  0E00               	movlw	0
 15305  0017AC  6E3E               	movwf	___flmul@aexp,c
 15306  0017AE  AE3D               	btfss	___flmul@grs+3,7,c
 15307  0017B0  D017               	goto	l1981
 15308  0017B2  0EFF               	movlw	255
 15309  0017B4  143A               	andwf	___flmul@grs,w,c
 15310  0017B6  6E35               	movwf	??___flmul& (0+255),c
 15311  0017B8  0EFF               	movlw	255
 15312  0017BA  143B               	andwf	___flmul@grs+1,w,c
 15313  0017BC  6E36               	movwf	(??___flmul+1)& (0+255),c
 15314  0017BE  0EFF               	movlw	255
 15315  0017C0  143C               	andwf	___flmul@grs+2,w,c
 15316  0017C2  6E37               	movwf	(??___flmul+2)& (0+255),c
 15317  0017C4  0E7F               	movlw	127
 15318  0017C6  143D               	andwf	___flmul@grs+3,w,c
 15319  0017C8  6E38               	movwf	(??___flmul+3)& (0+255),c
 15320  0017CA  5035               	movf	??___flmul,w,c
 15321  0017CC  1036               	iorwf	??___flmul+1,w,c
 15322  0017CE  1037               	iorwf	??___flmul+2,w,c
 15323  0017D0  1038               	iorwf	??___flmul+3,w,c
 15324  0017D2  B4D8               	btfsc	status,2,c
 15325  0017D4  D003               	goto	l1982
 15326  0017D6                     u6100:
 15327  0017D6  0E01               	movlw	1
 15328  0017D8  6E3E               	movwf	___flmul@aexp,c
 15329  0017DA  D002               	goto	l1981
 15330  0017DC                     l1982:
 15331  0017DC  B040               	btfsc	___flmul@prod,0,c
 15332  0017DE  D7FB               	goto	u6100
 15333  0017E0                     l1981:
 15334  0017E0  503E               	movf	___flmul@aexp,w,c
 15335  0017E2  B4D8               	btfsc	status,2,c
 15336  0017E4  D01F               	goto	l6719
 15337  0017E6  0E01               	movlw	1
 15338  0017E8  2640               	addwf	___flmul@prod,f,c
 15339  0017EA  0E00               	movlw	0
 15340  0017EC  2241               	addwfc	___flmul@prod+1,f,c
 15341  0017EE  2242               	addwfc	___flmul@prod+2,f,c
 15342  0017F0  2243               	addwfc	___flmul@prod+3,f,c
 15343  0017F2  A043               	btfss	___flmul@prod+3,0,c
 15344  0017F4  D017               	goto	l6719
 15345  0017F6  C040  F035         	movff	___flmul@prod,??___flmul
 15346  0017FA  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 15347  0017FE  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 15348  001802  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 15349  001806  3438               	rlcf	??___flmul+3,w,c
 15350  001808  3238               	rrcf	??___flmul+3,f,c
 15351  00180A  3237               	rrcf	??___flmul+2,f,c
 15352  00180C  3236               	rrcf	??___flmul+1,f,c
 15353  00180E  3235               	rrcf	??___flmul,f,c
 15354  001810  C035  F040         	movff	??___flmul,___flmul@prod
 15355  001814  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 15356  001818  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 15357  00181C  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 15358  001820  4A44               	infsnz	___flmul@temp,f,c
 15359  001822  2A45               	incf	___flmul@temp+1,f,c
 15360  001824                     l6719:
 15361  001824  BE45               	btfsc	___flmul@temp+1,7,c
 15362  001826  D00D               	goto	l6723
 15363  001828  5045               	movf	___flmul@temp+1,w,c
 15364  00182A  E103               	bnz	u6140
 15365  00182C  2844               	incf	___flmul@temp,w,c
 15366  00182E  A0D8               	btfss	status,0,c
 15367  001830  D008               	goto	l6723
 15368  001832                     u6140:
 15369  001832  0E00               	movlw	0
 15370  001834  6E40               	movwf	___flmul@prod,c
 15371  001836  0E00               	movlw	0
 15372  001838  6E41               	movwf	___flmul@prod+1,c
 15373  00183A  0E80               	movlw	128
 15374  00183C  6E42               	movwf	___flmul@prod+2,c
 15375  00183E  0E7F               	movlw	127
 15376  001840  D020               	goto	L32
 15377  001842                     l6723:
 15378  001842  BE45               	btfsc	___flmul@temp+1,7,c
 15379  001844  D005               	goto	u6150
 15380  001846  5045               	movf	___flmul@temp+1,w,c
 15381  001848  E10E               	bnz	l1989
 15382  00184A  0444               	decf	___flmul@temp,w,c
 15383  00184C  B0D8               	btfsc	status,0,c
 15384  00184E  D00B               	goto	l1989
 15385  001850                     u6150:
 15386  001850  0E00               	movlw	0
 15387  001852  6E40               	movwf	___flmul@prod,c
 15388  001854  0E00               	movlw	0
 15389  001856  6E41               	movwf	___flmul@prod+1,c
 15390  001858  0E00               	movlw	0
 15391  00185A  6E42               	movwf	___flmul@prod+2,c
 15392  00185C  0E00               	movlw	0
 15393  00185E  6E43               	movwf	___flmul@prod+3,c
 15394  001860  0E00               	movlw	0
 15395  001862  6E39               	movwf	___flmul@sign,c
 15396  001864  D00F               	goto	l6735
 15397  001866                     l1989:
 15398  001866  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 15399  00186A  0EFF               	movlw	255
 15400  00186C  1640               	andwf	___flmul@prod,f,c
 15401  00186E  0EFF               	movlw	255
 15402  001870  1641               	andwf	___flmul@prod+1,f,c
 15403  001872  0E7F               	movlw	127
 15404  001874  1642               	andwf	___flmul@prod+2,f,c
 15405  001876  0E00               	movlw	0
 15406  001878  1643               	andwf	___flmul@prod+3,f,c
 15407  00187A  B03F               	btfsc	___flmul@bexp,0,c
 15408  00187C  8E42               	bsf	___flmul@prod+2,7,c
 15409  00187E  90D8               	bcf	status,0,c
 15410  001880  303F               	rrcf	___flmul@bexp,w,c
 15411  001882                     L32:
 15412  001882  6E43               	movwf	___flmul@prod+3,c
 15413  001884                     l6735:
 15414  001884  5039               	movf	___flmul@sign,w,c
 15415  001886  1243               	iorwf	___flmul@prod+3,f,c
 15416  001888  C040  F02D         	movff	___flmul@prod,?___flmul
 15417  00188C  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 15418  001890  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 15419  001894  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 15420  001898  0012               	return		;funcret
 15421  00189A                     __end_of___flmul:
 15422                           	opt callstack 0
 15423                           
 15424 ;; *************** function ___flge *****************
 15425 ;; Defined at:
 15426 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 15427 ;; Parameters:    Size  Location     Type
 15428 ;;  ff1             4   99[COMRAM] unsigned char 
 15429 ;;  ff2             4  103[COMRAM] unsigned char 
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;		None
 15432 ;; Return value:  Size  Location     Type
 15433 ;;		None               void
 15434 ;; Registers used:
 15435 ;;		wreg, status,2, status,0
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15441 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15444 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;Total ram usage:       12 bytes
 15446 ;; Hardware stack levels used:    1
 15447 ;; Hardware stack levels required when called:    1
 15448 ;; This function calls:
 15449 ;;		Nothing
 15450 ;; This function is called by:
 15451 ;;		_detectCanister
 15452 ;;		_detectCanisterTurned
 15453 ;;		_testDrive
 15454 ;;		_testDrive2
 15455 ;;		_releaseDoor1
 15456 ;;		_releaseDoor2
 15457 ;;		_efgtoa
 15458 ;;		_printState
 15459 ;;		_adjustCanister
 15460 ;; This function uses a non-reentrant model
 15461 ;;
 15462                           
 15463                           	psect	text68
 15464  003EFE                     __ptext68:
 15465                           	opt callstack 0
 15466  003EFE                     ___flge:
 15467                           	opt callstack 23
 15468                           
 15469                           ;incstack = 0
 15470  003EFE  0E00               	movlw	0
 15471  003F00  1464               	andwf	___flge@ff1,w,c
 15472  003F02  6E6C               	movwf	??___flge& (0+255),c
 15473  003F04  0E00               	movlw	0
 15474  003F06  1465               	andwf	___flge@ff1+1,w,c
 15475  003F08  6E6D               	movwf	(??___flge+1)& (0+255),c
 15476  003F0A  0E80               	movlw	128
 15477  003F0C  1466               	andwf	___flge@ff1+2,w,c
 15478  003F0E  6E6E               	movwf	(??___flge+2)& (0+255),c
 15479  003F10  0E7F               	movlw	127
 15480  003F12  1467               	andwf	___flge@ff1+3,w,c
 15481  003F14  6E6F               	movwf	(??___flge+3)& (0+255),c
 15482  003F16  506C               	movf	??___flge,w,c
 15483  003F18  106D               	iorwf	??___flge+1,w,c
 15484  003F1A  106E               	iorwf	??___flge+2,w,c
 15485  003F1C  106F               	iorwf	??___flge+3,w,c
 15486  003F1E  A4D8               	btfss	status,2,c
 15487  003F20  D008               	goto	l6847
 15488  003F22  0E00               	movlw	0
 15489  003F24  6E64               	movwf	___flge@ff1,c
 15490  003F26  0E00               	movlw	0
 15491  003F28  6E65               	movwf	___flge@ff1+1,c
 15492  003F2A  0E00               	movlw	0
 15493  003F2C  6E66               	movwf	___flge@ff1+2,c
 15494  003F2E  0E00               	movlw	0
 15495  003F30  6E67               	movwf	___flge@ff1+3,c
 15496  003F32                     l6847:
 15497  003F32  0E00               	movlw	0
 15498  003F34  1468               	andwf	___flge@ff2,w,c
 15499  003F36  6E6C               	movwf	??___flge& (0+255),c
 15500  003F38  0E00               	movlw	0
 15501  003F3A  1469               	andwf	___flge@ff2+1,w,c
 15502  003F3C  6E6D               	movwf	(??___flge+1)& (0+255),c
 15503  003F3E  0E80               	movlw	128
 15504  003F40  146A               	andwf	___flge@ff2+2,w,c
 15505  003F42  6E6E               	movwf	(??___flge+2)& (0+255),c
 15506  003F44  0E7F               	movlw	127
 15507  003F46  146B               	andwf	___flge@ff2+3,w,c
 15508  003F48  6E6F               	movwf	(??___flge+3)& (0+255),c
 15509  003F4A  506C               	movf	??___flge,w,c
 15510  003F4C  106D               	iorwf	??___flge+1,w,c
 15511  003F4E  106E               	iorwf	??___flge+2,w,c
 15512  003F50  106F               	iorwf	??___flge+3,w,c
 15513  003F52  A4D8               	btfss	status,2,c
 15514  003F54  D008               	goto	l6851
 15515  003F56  0E00               	movlw	0
 15516  003F58  6E68               	movwf	___flge@ff2,c
 15517  003F5A  0E00               	movlw	0
 15518  003F5C  6E69               	movwf	___flge@ff2+1,c
 15519  003F5E  0E00               	movlw	0
 15520  003F60  6E6A               	movwf	___flge@ff2+2,c
 15521  003F62  0E00               	movlw	0
 15522  003F64  6E6B               	movwf	___flge@ff2+3,c
 15523  003F66                     l6851:
 15524  003F66  AE67               	btfss	___flge@ff1+3,7,c
 15525  003F68  D009               	goto	l6855
 15526  003F6A  6C64               	negf	___flge@ff1,c
 15527  003F6C  1E65               	comf	___flge@ff1+1,f,c
 15528  003F6E  B0D8               	btfsc	status,0,c
 15529  003F70  2A65               	incf	___flge@ff1+1,f,c
 15530  003F72  1E66               	comf	___flge@ff1+2,f,c
 15531  003F74  B0D8               	btfsc	status,0,c
 15532  003F76  2A66               	incf	___flge@ff1+2,f,c
 15533  003F78  0E80               	movlw	128
 15534  003F7A  5667               	subfwb	___flge@ff1+3,f,c
 15535  003F7C                     l6855:
 15536  003F7C  AE6B               	btfss	___flge@ff2+3,7,c
 15537  003F7E  D009               	goto	l1623
 15538  003F80  6C68               	negf	___flge@ff2,c
 15539  003F82  1E69               	comf	___flge@ff2+1,f,c
 15540  003F84  B0D8               	btfsc	status,0,c
 15541  003F86  2A69               	incf	___flge@ff2+1,f,c
 15542  003F88  1E6A               	comf	___flge@ff2+2,f,c
 15543  003F8A  B0D8               	btfsc	status,0,c
 15544  003F8C  2A6A               	incf	___flge@ff2+2,f,c
 15545  003F8E  0E80               	movlw	128
 15546  003F90  566B               	subfwb	___flge@ff2+3,f,c
 15547  003F92                     l1623:
 15548  003F92  0E00               	movlw	0
 15549  003F94  1A64               	xorwf	___flge@ff1,f,c
 15550  003F96  0E00               	movlw	0
 15551  003F98  1A65               	xorwf	___flge@ff1+1,f,c
 15552  003F9A  0E00               	movlw	0
 15553  003F9C  1A66               	xorwf	___flge@ff1+2,f,c
 15554  003F9E  0E80               	movlw	128
 15555  003FA0  1A67               	xorwf	___flge@ff1+3,f,c
 15556  003FA2  0E00               	movlw	0
 15557  003FA4  1A68               	xorwf	___flge@ff2,f,c
 15558  003FA6  0E00               	movlw	0
 15559  003FA8  1A69               	xorwf	___flge@ff2+1,f,c
 15560  003FAA  0E00               	movlw	0
 15561  003FAC  1A6A               	xorwf	___flge@ff2+2,f,c
 15562  003FAE  0E80               	movlw	128
 15563  003FB0  1A6B               	xorwf	___flge@ff2+3,f,c
 15564  003FB2  5068               	movf	___flge@ff2,w,c
 15565  003FB4  5C64               	subwf	___flge@ff1,w,c
 15566  003FB6  5069               	movf	___flge@ff2+1,w,c
 15567  003FB8  5865               	subwfb	___flge@ff1+1,w,c
 15568  003FBA  506A               	movf	___flge@ff2+2,w,c
 15569  003FBC  5866               	subwfb	___flge@ff1+2,w,c
 15570  003FBE  506B               	movf	___flge@ff2+3,w,c
 15571  003FC0  5867               	subwfb	___flge@ff1+3,w,c
 15572  003FC2  B0D8               	btfsc	status,0,c
 15573  003FC4  D002               	goto	l6861
 15574  003FC6  90D8               	bcf	status,0,c
 15575  003FC8  0012               	return	
 15576  003FCA                     l6861:
 15577  003FCA  80D8               	bsf	status,0,c
 15578  003FCC  0012               	return		;funcret
 15579  003FCE                     __end_of___flge:
 15580                           	opt callstack 0
 15581                           
 15582 ;; *************** function ___fleq *****************
 15583 ;; Defined at:
 15584 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 15585 ;; Parameters:    Size  Location     Type
 15586 ;;  ff1             4    0[COMRAM] unsigned char 
 15587 ;;  ff2             4    4[COMRAM] unsigned char 
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;		None
 15590 ;; Return value:  Size  Location     Type
 15591 ;;		None               void
 15592 ;; Registers used:
 15593 ;;		wreg, status,2, status,0
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 0/0
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15602 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15603 ;;Total ram usage:       12 bytes
 15604 ;; Hardware stack levels used:    1
 15605 ;; Hardware stack levels required when called:    1
 15606 ;; This function calls:
 15607 ;;		Nothing
 15608 ;; This function is called by:
 15609 ;;		_efgtoa
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613                           	psect	text69
 15614  0046C8                     __ptext69:
 15615                           	opt callstack 0
 15616  0046C8                     ___fleq:
 15617                           	opt callstack 23
 15618                           
 15619                           ;incstack = 0
 15620  0046C8  0E00               	movlw	0
 15621  0046CA  1401               	andwf	___fleq@ff1,w,c
 15622  0046CC  6E09               	movwf	??___fleq& (0+255),c
 15623  0046CE  0E00               	movlw	0
 15624  0046D0  1402               	andwf	___fleq@ff1+1,w,c
 15625  0046D2  6E0A               	movwf	(??___fleq+1)& (0+255),c
 15626  0046D4  0E80               	movlw	128
 15627  0046D6  1403               	andwf	___fleq@ff1+2,w,c
 15628  0046D8  6E0B               	movwf	(??___fleq+2)& (0+255),c
 15629  0046DA  0E7F               	movlw	127
 15630  0046DC  1404               	andwf	___fleq@ff1+3,w,c
 15631  0046DE  6E0C               	movwf	(??___fleq+3)& (0+255),c
 15632  0046E0  5009               	movf	??___fleq,w,c
 15633  0046E2  100A               	iorwf	??___fleq+1,w,c
 15634  0046E4  100B               	iorwf	??___fleq+2,w,c
 15635  0046E6  100C               	iorwf	??___fleq+3,w,c
 15636  0046E8  A4D8               	btfss	status,2,c
 15637  0046EA  D008               	goto	l6831
 15638  0046EC  0E00               	movlw	0
 15639  0046EE  6E01               	movwf	___fleq@ff1,c
 15640  0046F0  0E00               	movlw	0
 15641  0046F2  6E02               	movwf	___fleq@ff1+1,c
 15642  0046F4  0E00               	movlw	0
 15643  0046F6  6E03               	movwf	___fleq@ff1+2,c
 15644  0046F8  0E00               	movlw	0
 15645  0046FA  6E04               	movwf	___fleq@ff1+3,c
 15646  0046FC                     l6831:
 15647  0046FC  0E00               	movlw	0
 15648  0046FE  1405               	andwf	___fleq@ff2,w,c
 15649  004700  6E09               	movwf	??___fleq& (0+255),c
 15650  004702  0E00               	movlw	0
 15651  004704  1406               	andwf	___fleq@ff2+1,w,c
 15652  004706  6E0A               	movwf	(??___fleq+1)& (0+255),c
 15653  004708  0E80               	movlw	128
 15654  00470A  1407               	andwf	___fleq@ff2+2,w,c
 15655  00470C  6E0B               	movwf	(??___fleq+2)& (0+255),c
 15656  00470E  0E7F               	movlw	127
 15657  004710  1408               	andwf	___fleq@ff2+3,w,c
 15658  004712  6E0C               	movwf	(??___fleq+3)& (0+255),c
 15659  004714  5009               	movf	??___fleq,w,c
 15660  004716  100A               	iorwf	??___fleq+1,w,c
 15661  004718  100B               	iorwf	??___fleq+2,w,c
 15662  00471A  100C               	iorwf	??___fleq+3,w,c
 15663  00471C  A4D8               	btfss	status,2,c
 15664  00471E  D008               	goto	l6835
 15665  004720  0E00               	movlw	0
 15666  004722  6E05               	movwf	___fleq@ff2,c
 15667  004724  0E00               	movlw	0
 15668  004726  6E06               	movwf	___fleq@ff2+1,c
 15669  004728  0E00               	movlw	0
 15670  00472A  6E07               	movwf	___fleq@ff2+2,c
 15671  00472C  0E00               	movlw	0
 15672  00472E  6E08               	movwf	___fleq@ff2+3,c
 15673  004730                     l6835:
 15674  004730  5005               	movf	___fleq@ff2,w,c
 15675  004732  1801               	xorwf	___fleq@ff1,w,c
 15676  004734  E10A               	bnz	u6310
 15677  004736  5006               	movf	___fleq@ff2+1,w,c
 15678  004738  1802               	xorwf	___fleq@ff1+1,w,c
 15679  00473A  E107               	bnz	u6310
 15680  00473C  5007               	movf	___fleq@ff2+2,w,c
 15681  00473E  1803               	xorwf	___fleq@ff1+2,w,c
 15682  004740  E104               	bnz	u6310
 15683  004742  5008               	movf	___fleq@ff2+3,w,c
 15684  004744  1804               	xorwf	___fleq@ff1+3,w,c
 15685  004746  B4D8               	btfsc	status,2,c
 15686  004748  D002               	goto	l6839
 15687  00474A                     u6310:
 15688  00474A  90D8               	bcf	status,0,c
 15689  00474C  0012               	return	
 15690  00474E                     l6839:
 15691  00474E  80D8               	bsf	status,0,c
 15692  004750  0012               	return		;funcret
 15693  004752                     __end_of___fleq:
 15694                           	opt callstack 0
 15695                           
 15696 ;; *************** function ___fldiv *****************
 15697 ;; Defined at:
 15698 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 15699 ;; Parameters:    Size  Location     Type
 15700 ;;  b               4    0[COMRAM] unsigned char 
 15701 ;;  a               4    4[COMRAM] unsigned char 
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;  grs             4   19[COMRAM] unsigned long 
 15704 ;;  rem             4   12[COMRAM] unsigned long 
 15705 ;;  new_exp         2   17[COMRAM] short 
 15706 ;;  aexp            1   24[COMRAM] unsigned char 
 15707 ;;  bexp            1   23[COMRAM] unsigned char 
 15708 ;;  sign            1   16[COMRAM] unsigned char 
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  4    0[COMRAM] unsigned char 
 15711 ;; Registers used:
 15712 ;;		wreg, status,2, status,0
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15718 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15719 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15721 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15722 ;;Total ram usage:       25 bytes
 15723 ;; Hardware stack levels used:    1
 15724 ;; Hardware stack levels required when called:    1
 15725 ;; This function calls:
 15726 ;;		Nothing
 15727 ;; This function is called by:
 15728 ;;		_efgtoa
 15729 ;;		_printState
 15730 ;;		_adjustCanister
 15731 ;; This function uses a non-reentrant model
 15732 ;;
 15733                           
 15734                           	psect	text70
 15735  00245E                     __ptext70:
 15736                           	opt callstack 0
 15737  00245E                     ___fldiv:
 15738                           	opt callstack 23
 15739                           
 15740                           ;incstack = 0
 15741  00245E  5004               	movf	___fldiv@b+3,w,c
 15742  002460  0B80               	andlw	128
 15743  002462  6E11               	movwf	___fldiv@sign,c
 15744  002464  5004               	movf	___fldiv@b+3,w,c
 15745  002466  2404               	addwf	___fldiv@b+3,w,c
 15746  002468  6E18               	movwf	___fldiv@bexp,c
 15747  00246A  BE03               	btfsc	___fldiv@b+2,7,c
 15748  00246C  8018               	bsf	___fldiv@bexp,0,c
 15749  00246E  5018               	movf	___fldiv@bexp,w,c
 15750  002470  B4D8               	btfsc	status,2,c
 15751  002472  D00D               	goto	l6489
 15752  002474  2818               	incf	___fldiv@bexp,w,c
 15753  002476  A4D8               	btfss	status,2,c
 15754  002478  D008               	goto	l6485
 15755  00247A  0E00               	movlw	0
 15756  00247C  6E01               	movwf	___fldiv@b,c
 15757  00247E  0E00               	movlw	0
 15758  002480  6E02               	movwf	___fldiv@b+1,c
 15759  002482  0E00               	movlw	0
 15760  002484  6E03               	movwf	___fldiv@b+2,c
 15761  002486  0E00               	movlw	0
 15762  002488  6E04               	movwf	___fldiv@b+3,c
 15763  00248A                     l6485:
 15764  00248A  8E03               	bsf	___fldiv@b+2,7,c
 15765  00248C  D006               	goto	L33
 15766  00248E                     l6489:
 15767  00248E  0E00               	movlw	0
 15768  002490  6E01               	movwf	___fldiv@b,c
 15769  002492  0E00               	movlw	0
 15770  002494  6E02               	movwf	___fldiv@b+1,c
 15771  002496  0E00               	movlw	0
 15772  002498  6E03               	movwf	___fldiv@b+2,c
 15773  00249A                     L33:
 15774  00249A  0E00               	movlw	0
 15775  00249C  6E04               	movwf	___fldiv@b+3,c
 15776  00249E  5008               	movf	___fldiv@a+3,w,c
 15777  0024A0  0B80               	andlw	128
 15778  0024A2  1A11               	xorwf	___fldiv@sign,f,c
 15779  0024A4  5008               	movf	___fldiv@a+3,w,c
 15780  0024A6  2408               	addwf	___fldiv@a+3,w,c
 15781  0024A8  6E19               	movwf	___fldiv@aexp,c
 15782  0024AA  BE07               	btfsc	___fldiv@a+2,7,c
 15783  0024AC  8019               	bsf	___fldiv@aexp,0,c
 15784  0024AE  5019               	movf	___fldiv@aexp,w,c
 15785  0024B0  B4D8               	btfsc	status,2,c
 15786  0024B2  D00D               	goto	l6509
 15787  0024B4  2819               	incf	___fldiv@aexp,w,c
 15788  0024B6  A4D8               	btfss	status,2,c
 15789  0024B8  D008               	goto	l6505
 15790  0024BA  0E00               	movlw	0
 15791  0024BC  6E05               	movwf	___fldiv@a,c
 15792  0024BE  0E00               	movlw	0
 15793  0024C0  6E06               	movwf	___fldiv@a+1,c
 15794  0024C2  0E00               	movlw	0
 15795  0024C4  6E07               	movwf	___fldiv@a+2,c
 15796  0024C6  0E00               	movlw	0
 15797  0024C8  6E08               	movwf	___fldiv@a+3,c
 15798  0024CA                     l6505:
 15799  0024CA  8E07               	bsf	___fldiv@a+2,7,c
 15800  0024CC  D006               	goto	L34
 15801  0024CE                     l6509:
 15802  0024CE  0E00               	movlw	0
 15803  0024D0  6E05               	movwf	___fldiv@a,c
 15804  0024D2  0E00               	movlw	0
 15805  0024D4  6E06               	movwf	___fldiv@a+1,c
 15806  0024D6  0E00               	movlw	0
 15807  0024D8  6E07               	movwf	___fldiv@a+2,c
 15808  0024DA                     L34:
 15809  0024DA  0E00               	movlw	0
 15810  0024DC  6E08               	movwf	___fldiv@a+3,c
 15811  0024DE  5005               	movf	___fldiv@a,w,c
 15812  0024E0  1006               	iorwf	___fldiv@a+1,w,c
 15813  0024E2  1007               	iorwf	___fldiv@a+2,w,c
 15814  0024E4  1008               	iorwf	___fldiv@a+3,w,c
 15815  0024E6  A4D8               	btfss	status,2,c
 15816  0024E8  D017               	goto	l6523
 15817  0024EA  0E00               	movlw	0
 15818  0024EC  6E01               	movwf	___fldiv@b,c
 15819  0024EE  0E00               	movlw	0
 15820  0024F0  6E02               	movwf	___fldiv@b+1,c
 15821  0024F2  0E00               	movlw	0
 15822  0024F4  6E03               	movwf	___fldiv@b+2,c
 15823  0024F6  0E00               	movlw	0
 15824  0024F8  6E04               	movwf	___fldiv@b+3,c
 15825  0024FA  0E80               	movlw	128
 15826  0024FC  1203               	iorwf	___fldiv@b+2,f,c
 15827  0024FE  0E7F               	movlw	127
 15828  002500  1204               	iorwf	___fldiv@b+3,f,c
 15829  002502                     l6517:
 15830  002502  5011               	movf	___fldiv@sign,w,c
 15831  002504  1204               	iorwf	___fldiv@b+3,f,c
 15832  002506  C001  F001         	movff	___fldiv@b,?___fldiv
 15833  00250A  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
 15834  00250E  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
 15835  002512  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
 15836  002516  0012               	return	
 15837  002518                     l6523:
 15838  002518  5018               	movf	___fldiv@bexp,w,c
 15839  00251A  A4D8               	btfss	status,2,c
 15840  00251C  D009               	goto	l6531
 15841  00251E  0E00               	movlw	0
 15842  002520  6E01               	movwf	?___fldiv,c
 15843  002522  0E00               	movlw	0
 15844  002524  6E02               	movwf	?___fldiv+1,c
 15845  002526  0E00               	movlw	0
 15846  002528  6E03               	movwf	?___fldiv+2,c
 15847  00252A  0E00               	movlw	0
 15848  00252C  6E04               	movwf	?___fldiv+3,c
 15849  00252E  0012               	return	
 15850  002530                     l6531:
 15851  002530  5019               	movf	___fldiv@aexp,w,c
 15852  002532  C018  F009         	movff	___fldiv@bexp,??___fldiv
 15853  002536  6A0A               	clrf	(??___fldiv+1)& (0+255),c
 15854  002538  5E09               	subwf	??___fldiv,f,c
 15855  00253A  0E00               	movlw	0
 15856  00253C  5A0A               	subwfb	??___fldiv+1,f,c
 15857  00253E  0E7F               	movlw	127
 15858  002540  2409               	addwf	??___fldiv,w,c
 15859  002542  6E12               	movwf	___fldiv@new_exp,c
 15860  002544  0E00               	movlw	0
 15861  002546  200A               	addwfc	??___fldiv+1,w,c
 15862  002548  6E13               	movwf	___fldiv@new_exp+1,c
 15863  00254A  C001  F00D         	movff	___fldiv@b,___fldiv@rem
 15864  00254E  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
 15865  002552  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
 15866  002556  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
 15867  00255A  0E00               	movlw	0
 15868  00255C  6E01               	movwf	___fldiv@b,c
 15869  00255E  0E00               	movlw	0
 15870  002560  6E02               	movwf	___fldiv@b+1,c
 15871  002562  0E00               	movlw	0
 15872  002564  6E03               	movwf	___fldiv@b+2,c
 15873  002566  0E00               	movlw	0
 15874  002568  6E04               	movwf	___fldiv@b+3,c
 15875  00256A  0E00               	movlw	0
 15876  00256C  6E14               	movwf	___fldiv@grs,c
 15877  00256E  0E00               	movlw	0
 15878  002570  6E15               	movwf	___fldiv@grs+1,c
 15879  002572  0E00               	movlw	0
 15880  002574  6E16               	movwf	___fldiv@grs+2,c
 15881  002576  0E00               	movlw	0
 15882  002578  6E17               	movwf	___fldiv@grs+3,c
 15883  00257A  0E00               	movlw	0
 15884  00257C  6E19               	movwf	___fldiv@aexp,c
 15885  00257E  D028               	goto	l1942
 15886  002580                     l6541:
 15887  002580  5019               	movf	___fldiv@aexp,w,c
 15888  002582  B4D8               	btfsc	status,2,c
 15889  002584  D011               	goto	l6549
 15890  002586  90D8               	bcf	status,0,c
 15891  002588  360D               	rlcf	___fldiv@rem,f,c
 15892  00258A  360E               	rlcf	___fldiv@rem+1,f,c
 15893  00258C  360F               	rlcf	___fldiv@rem+2,f,c
 15894  00258E  3610               	rlcf	___fldiv@rem+3,f,c
 15895  002590  90D8               	bcf	status,0,c
 15896  002592  3601               	rlcf	___fldiv@b,f,c
 15897  002594  3602               	rlcf	___fldiv@b+1,f,c
 15898  002596  3603               	rlcf	___fldiv@b+2,f,c
 15899  002598  3604               	rlcf	___fldiv@b+3,f,c
 15900  00259A  BE17               	btfsc	___fldiv@grs+3,7,c
 15901  00259C  8001               	bsf	___fldiv@b,0,c
 15902  00259E  90D8               	bcf	status,0,c
 15903  0025A0  3614               	rlcf	___fldiv@grs,f,c
 15904  0025A2  3615               	rlcf	___fldiv@grs+1,f,c
 15905  0025A4  3616               	rlcf	___fldiv@grs+2,f,c
 15906  0025A6  3617               	rlcf	___fldiv@grs+3,f,c
 15907  0025A8                     l6549:
 15908  0025A8  5005               	movf	___fldiv@a,w,c
 15909  0025AA  5C0D               	subwf	___fldiv@rem,w,c
 15910  0025AC  5006               	movf	___fldiv@a+1,w,c
 15911  0025AE  580E               	subwfb	___fldiv@rem+1,w,c
 15912  0025B0  5007               	movf	___fldiv@a+2,w,c
 15913  0025B2  580F               	subwfb	___fldiv@rem+2,w,c
 15914  0025B4  5008               	movf	___fldiv@a+3,w,c
 15915  0025B6  5810               	subwfb	___fldiv@rem+3,w,c
 15916  0025B8  A0D8               	btfss	status,0,c
 15917  0025BA  D009               	goto	l6555
 15918  0025BC  8C17               	bsf	___fldiv@grs+3,6,c
 15919  0025BE  5005               	movf	___fldiv@a,w,c
 15920  0025C0  5E0D               	subwf	___fldiv@rem,f,c
 15921  0025C2  5006               	movf	___fldiv@a+1,w,c
 15922  0025C4  5A0E               	subwfb	___fldiv@rem+1,f,c
 15923  0025C6  5007               	movf	___fldiv@a+2,w,c
 15924  0025C8  5A0F               	subwfb	___fldiv@rem+2,f,c
 15925  0025CA  5008               	movf	___fldiv@a+3,w,c
 15926  0025CC  5A10               	subwfb	___fldiv@rem+3,f,c
 15927  0025CE                     l6555:
 15928  0025CE  2A19               	incf	___fldiv@aexp,f,c
 15929  0025D0                     l1942:
 15930  0025D0  0E19               	movlw	25
 15931  0025D2  6419               	cpfsgt	___fldiv@aexp,c
 15932  0025D4  D7D5               	goto	l6541
 15933  0025D6  500D               	movf	___fldiv@rem,w,c
 15934  0025D8  100E               	iorwf	___fldiv@rem+1,w,c
 15935  0025DA  100F               	iorwf	___fldiv@rem+2,w,c
 15936  0025DC  1010               	iorwf	___fldiv@rem+3,w,c
 15937  0025DE  B4D8               	btfsc	status,2,c
 15938  0025E0  D011               	goto	l6567
 15939  0025E2  8014               	bsf	___fldiv@grs,0,c
 15940  0025E4  D00F               	goto	l6567
 15941  0025E6                     l6561:
 15942  0025E6  90D8               	bcf	status,0,c
 15943  0025E8  3601               	rlcf	___fldiv@b,f,c
 15944  0025EA  3602               	rlcf	___fldiv@b+1,f,c
 15945  0025EC  3603               	rlcf	___fldiv@b+2,f,c
 15946  0025EE  3604               	rlcf	___fldiv@b+3,f,c
 15947  0025F0  BE17               	btfsc	___fldiv@grs+3,7,c
 15948  0025F2  8001               	bsf	___fldiv@b,0,c
 15949  0025F4  90D8               	bcf	status,0,c
 15950  0025F6  3614               	rlcf	___fldiv@grs,f,c
 15951  0025F8  3615               	rlcf	___fldiv@grs+1,f,c
 15952  0025FA  3616               	rlcf	___fldiv@grs+2,f,c
 15953  0025FC  3617               	rlcf	___fldiv@grs+3,f,c
 15954  0025FE  0612               	decf	___fldiv@new_exp,f,c
 15955  002600  A0D8               	btfss	status,0,c
 15956  002602  0613               	decf	___fldiv@new_exp+1,f,c
 15957  002604                     l6567:
 15958  002604  AE03               	btfss	___fldiv@b+2,7,c
 15959  002606  D7EF               	goto	l6561
 15960  002608  0E00               	movlw	0
 15961  00260A  6E19               	movwf	___fldiv@aexp,c
 15962  00260C  AE17               	btfss	___fldiv@grs+3,7,c
 15963  00260E  D017               	goto	l1953
 15964  002610  0EFF               	movlw	255
 15965  002612  1414               	andwf	___fldiv@grs,w,c
 15966  002614  6E09               	movwf	??___fldiv& (0+255),c
 15967  002616  0EFF               	movlw	255
 15968  002618  1415               	andwf	___fldiv@grs+1,w,c
 15969  00261A  6E0A               	movwf	(??___fldiv+1)& (0+255),c
 15970  00261C  0EFF               	movlw	255
 15971  00261E  1416               	andwf	___fldiv@grs+2,w,c
 15972  002620  6E0B               	movwf	(??___fldiv+2)& (0+255),c
 15973  002622  0E7F               	movlw	127
 15974  002624  1417               	andwf	___fldiv@grs+3,w,c
 15975  002626  6E0C               	movwf	(??___fldiv+3)& (0+255),c
 15976  002628  5009               	movf	??___fldiv,w,c
 15977  00262A  100A               	iorwf	??___fldiv+1,w,c
 15978  00262C  100B               	iorwf	??___fldiv+2,w,c
 15979  00262E  100C               	iorwf	??___fldiv+3,w,c
 15980  002630  B4D8               	btfsc	status,2,c
 15981  002632  D003               	goto	l1954
 15982  002634                     u5910:
 15983  002634  0E01               	movlw	1
 15984  002636  6E19               	movwf	___fldiv@aexp,c
 15985  002638  D002               	goto	l1953
 15986  00263A                     l1954:
 15987  00263A  B001               	btfsc	___fldiv@b,0,c
 15988  00263C  D7FB               	goto	u5910
 15989  00263E                     l1953:
 15990  00263E  5019               	movf	___fldiv@aexp,w,c
 15991  002640  B4D8               	btfsc	status,2,c
 15992  002642  D01F               	goto	l6587
 15993  002644  0E01               	movlw	1
 15994  002646  2601               	addwf	___fldiv@b,f,c
 15995  002648  0E00               	movlw	0
 15996  00264A  2202               	addwfc	___fldiv@b+1,f,c
 15997  00264C  2203               	addwfc	___fldiv@b+2,f,c
 15998  00264E  2204               	addwfc	___fldiv@b+3,f,c
 15999  002650  A004               	btfss	___fldiv@b+3,0,c
 16000  002652  D017               	goto	l6587
 16001  002654  C001  F009         	movff	___fldiv@b,??___fldiv
 16002  002658  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
 16003  00265C  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
 16004  002660  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
 16005  002664  340C               	rlcf	??___fldiv+3,w,c
 16006  002666  320C               	rrcf	??___fldiv+3,f,c
 16007  002668  320B               	rrcf	??___fldiv+2,f,c
 16008  00266A  320A               	rrcf	??___fldiv+1,f,c
 16009  00266C  3209               	rrcf	??___fldiv,f,c
 16010  00266E  C009  F001         	movff	??___fldiv,___fldiv@b
 16011  002672  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
 16012  002676  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
 16013  00267A  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
 16014  00267E  4A12               	infsnz	___fldiv@new_exp,f,c
 16015  002680  2A13               	incf	___fldiv@new_exp+1,f,c
 16016  002682                     l6587:
 16017  002682  BE13               	btfsc	___fldiv@new_exp+1,7,c
 16018  002684  D010               	goto	l6591
 16019  002686  5013               	movf	___fldiv@new_exp+1,w,c
 16020  002688  E103               	bnz	u5950
 16021  00268A  2812               	incf	___fldiv@new_exp,w,c
 16022  00268C  A0D8               	btfss	status,0,c
 16023  00268E  D00B               	goto	l6591
 16024  002690                     u5950:
 16025  002690  0E00               	movlw	0
 16026  002692  6E13               	movwf	___fldiv@new_exp+1,c
 16027  002694  6812               	setf	___fldiv@new_exp,c
 16028  002696  0E00               	movlw	0
 16029  002698  6E01               	movwf	___fldiv@b,c
 16030  00269A  0E00               	movlw	0
 16031  00269C  6E02               	movwf	___fldiv@b+1,c
 16032  00269E  0E00               	movlw	0
 16033  0026A0  6E03               	movwf	___fldiv@b+2,c
 16034  0026A2  0E00               	movlw	0
 16035  0026A4  6E04               	movwf	___fldiv@b+3,c
 16036  0026A6                     l6591:
 16037  0026A6  BE13               	btfsc	___fldiv@new_exp+1,7,c
 16038  0026A8  D005               	goto	u5960
 16039  0026AA  5013               	movf	___fldiv@new_exp+1,w,c
 16040  0026AC  E111               	bnz	l6595
 16041  0026AE  0412               	decf	___fldiv@new_exp,w,c
 16042  0026B0  B0D8               	btfsc	status,0,c
 16043  0026B2  D00E               	goto	l6595
 16044  0026B4                     u5960:
 16045  0026B4  0E00               	movlw	0
 16046  0026B6  6E13               	movwf	___fldiv@new_exp+1,c
 16047  0026B8  0E00               	movlw	0
 16048  0026BA  6E12               	movwf	___fldiv@new_exp,c
 16049  0026BC  0E00               	movlw	0
 16050  0026BE  6E01               	movwf	___fldiv@b,c
 16051  0026C0  0E00               	movlw	0
 16052  0026C2  6E02               	movwf	___fldiv@b+1,c
 16053  0026C4  0E00               	movlw	0
 16054  0026C6  6E03               	movwf	___fldiv@b+2,c
 16055  0026C8  0E00               	movlw	0
 16056  0026CA  6E04               	movwf	___fldiv@b+3,c
 16057  0026CC  0E00               	movlw	0
 16058  0026CE  6E11               	movwf	___fldiv@sign,c
 16059  0026D0                     l6595:
 16060  0026D0  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
 16061  0026D4  A018               	btfss	___fldiv@bexp,0,c
 16062  0026D6  D002               	goto	l6601
 16063  0026D8  8E03               	bsf	___fldiv@b+2,7,c
 16064  0026DA  D001               	goto	l6603
 16065  0026DC                     l6601:
 16066  0026DC  9E03               	bcf	___fldiv@b+2,7,c
 16067  0026DE                     l6603:
 16068  0026DE  90D8               	bcf	status,0,c
 16069  0026E0  3018               	rrcf	___fldiv@bexp,w,c
 16070  0026E2  6E04               	movwf	___fldiv@b+3,c
 16071  0026E4  D70E               	goto	l6517
 16072  0026E6                     __end_of___fldiv:
 16073                           	opt callstack 0
 16074                           
 16075 ;; *************** function ___awmod *****************
 16076 ;; Defined at:
 16077 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 16078 ;; Parameters:    Size  Location     Type
 16079 ;;  dividend        2    0[COMRAM] int 
 16080 ;;  divisor         2    2[COMRAM] int 
 16081 ;; Auto vars:     Size  Location     Type
 16082 ;;  sign            1    5[COMRAM] unsigned char 
 16083 ;;  counter         1    4[COMRAM] unsigned char 
 16084 ;; Return value:  Size  Location     Type
 16085 ;;                  2    0[COMRAM] int 
 16086 ;; Registers used:
 16087 ;;		wreg, status,2, status,0
 16088 ;; Tracked objects:
 16089 ;;		On entry : 0/0
 16090 ;;		On exit  : 0/0
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16097 ;;Total ram usage:        6 bytes
 16098 ;; Hardware stack levels used:    1
 16099 ;; Hardware stack levels required when called:    1
 16100 ;; This function calls:
 16101 ;;		Nothing
 16102 ;; This function is called by:
 16103 ;;		_efgtoa
 16104 ;; This function uses a non-reentrant model
 16105 ;;
 16106                           
 16107                           	psect	text71
 16108  004B26                     __ptext71:
 16109                           	opt callstack 0
 16110  004B26                     ___awmod:
 16111                           	opt callstack 23
 16112                           
 16113                           ;incstack = 0
 16114  004B26  0E00               	movlw	0
 16115  004B28  6E06               	movwf	___awmod@sign,c
 16116  004B2A  AE02               	btfss	___awmod@dividend+1,7,c
 16117  004B2C  D006               	goto	l6799
 16118  004B2E  6C01               	negf	___awmod@dividend,c
 16119  004B30  1E02               	comf	___awmod@dividend+1,f,c
 16120  004B32  B0D8               	btfsc	status,0,c
 16121  004B34  2A02               	incf	___awmod@dividend+1,f,c
 16122  004B36  0E01               	movlw	1
 16123  004B38  6E06               	movwf	___awmod@sign,c
 16124  004B3A                     l6799:
 16125  004B3A  AE04               	btfss	___awmod@divisor+1,7,c
 16126  004B3C  D004               	goto	l6803
 16127  004B3E  6C03               	negf	___awmod@divisor,c
 16128  004B40  1E04               	comf	___awmod@divisor+1,f,c
 16129  004B42  B0D8               	btfsc	status,0,c
 16130  004B44  2A04               	incf	___awmod@divisor+1,f,c
 16131  004B46                     l6803:
 16132  004B46  5003               	movf	___awmod@divisor,w,c
 16133  004B48  1004               	iorwf	___awmod@divisor+1,w,c
 16134  004B4A  B4D8               	btfsc	status,2,c
 16135  004B4C  D018               	goto	l6819
 16136  004B4E  0E01               	movlw	1
 16137  004B50  6E05               	movwf	___awmod@counter,c
 16138  004B52  D004               	goto	l6809
 16139  004B54                     l6807:
 16140  004B54  90D8               	bcf	status,0,c
 16141  004B56  3603               	rlcf	___awmod@divisor,f,c
 16142  004B58  3604               	rlcf	___awmod@divisor+1,f,c
 16143  004B5A  2A05               	incf	___awmod@counter,f,c
 16144  004B5C                     l6809:
 16145  004B5C  AE04               	btfss	___awmod@divisor+1,7,c
 16146  004B5E  D7FA               	goto	l6807
 16147  004B60                     u6260:
 16148  004B60  5003               	movf	___awmod@divisor,w,c
 16149  004B62  5C01               	subwf	___awmod@dividend,w,c
 16150  004B64  5004               	movf	___awmod@divisor+1,w,c
 16151  004B66  5802               	subwfb	___awmod@dividend+1,w,c
 16152  004B68  A0D8               	btfss	status,0,c
 16153  004B6A  D004               	goto	l6815
 16154  004B6C  5003               	movf	___awmod@divisor,w,c
 16155  004B6E  5E01               	subwf	___awmod@dividend,f,c
 16156  004B70  5004               	movf	___awmod@divisor+1,w,c
 16157  004B72  5A02               	subwfb	___awmod@dividend+1,f,c
 16158  004B74                     l6815:
 16159  004B74  90D8               	bcf	status,0,c
 16160  004B76  3204               	rrcf	___awmod@divisor+1,f,c
 16161  004B78  3203               	rrcf	___awmod@divisor,f,c
 16162  004B7A  2E05               	decfsz	___awmod@counter,f,c
 16163  004B7C  D7F1               	goto	u6260
 16164  004B7E                     l6819:
 16165  004B7E  5006               	movf	___awmod@sign,w,c
 16166  004B80  B4D8               	btfsc	status,2,c
 16167  004B82  D004               	goto	l6823
 16168  004B84  6C01               	negf	___awmod@dividend,c
 16169  004B86  1E02               	comf	___awmod@dividend+1,f,c
 16170  004B88  B0D8               	btfsc	status,0,c
 16171  004B8A  2A02               	incf	___awmod@dividend+1,f,c
 16172  004B8C                     l6823:
 16173  004B8C  C001  F001         	movff	___awmod@dividend,?___awmod
 16174  004B90  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 16175  004B94  0012               	return		;funcret
 16176  004B96                     __end_of___awmod:
 16177                           	opt callstack 0
 16178                           
 16179 ;; *************** function ___awdiv *****************
 16180 ;; Defined at:
 16181 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 16182 ;; Parameters:    Size  Location     Type
 16183 ;;  dividend        2    0[COMRAM] int 
 16184 ;;  divisor         2    2[COMRAM] int 
 16185 ;; Auto vars:     Size  Location     Type
 16186 ;;  quotient        2    6[COMRAM] int 
 16187 ;;  sign            1    5[COMRAM] unsigned char 
 16188 ;;  counter         1    4[COMRAM] unsigned char 
 16189 ;; Return value:  Size  Location     Type
 16190 ;;                  2    0[COMRAM] int 
 16191 ;; Registers used:
 16192 ;;		wreg, status,2, status,0
 16193 ;; Tracked objects:
 16194 ;;		On entry : 0/0
 16195 ;;		On exit  : 0/0
 16196 ;;		Unchanged: 0/0
 16197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16199 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16202 ;;Total ram usage:        8 bytes
 16203 ;; Hardware stack levels used:    1
 16204 ;; Hardware stack levels required when called:    1
 16205 ;; This function calls:
 16206 ;;		Nothing
 16207 ;; This function is called by:
 16208 ;;		_efgtoa
 16209 ;; This function uses a non-reentrant model
 16210 ;;
 16211                           
 16212                           	psect	text72
 16213  004752                     __ptext72:
 16214                           	opt callstack 0
 16215  004752                     ___awdiv:
 16216                           	opt callstack 23
 16217                           
 16218                           ;incstack = 0
 16219  004752  0E00               	movlw	0
 16220  004754  6E06               	movwf	___awdiv@sign,c
 16221  004756  AE04               	btfss	___awdiv@divisor+1,7,c
 16222  004758  D006               	goto	l6755
 16223  00475A  6C03               	negf	___awdiv@divisor,c
 16224  00475C  1E04               	comf	___awdiv@divisor+1,f,c
 16225  00475E  B0D8               	btfsc	status,0,c
 16226  004760  2A04               	incf	___awdiv@divisor+1,f,c
 16227  004762  0E01               	movlw	1
 16228  004764  6E06               	movwf	___awdiv@sign,c
 16229  004766                     l6755:
 16230  004766  AE02               	btfss	___awdiv@dividend+1,7,c
 16231  004768  D006               	goto	l6761
 16232  00476A  6C01               	negf	___awdiv@dividend,c
 16233  00476C  1E02               	comf	___awdiv@dividend+1,f,c
 16234  00476E  B0D8               	btfsc	status,0,c
 16235  004770  2A02               	incf	___awdiv@dividend+1,f,c
 16236  004772  0E01               	movlw	1
 16237  004774  1A06               	xorwf	___awdiv@sign,f,c
 16238  004776                     l6761:
 16239  004776  0E00               	movlw	0
 16240  004778  6E08               	movwf	___awdiv@quotient+1,c
 16241  00477A  0E00               	movlw	0
 16242  00477C  6E07               	movwf	___awdiv@quotient,c
 16243  00477E  5003               	movf	___awdiv@divisor,w,c
 16244  004780  1004               	iorwf	___awdiv@divisor+1,w,c
 16245  004782  B4D8               	btfsc	status,2,c
 16246  004784  D01C               	goto	l6783
 16247  004786  0E01               	movlw	1
 16248  004788  6E05               	movwf	___awdiv@counter,c
 16249  00478A  D004               	goto	l6769
 16250  00478C                     l6767:
 16251  00478C  90D8               	bcf	status,0,c
 16252  00478E  3603               	rlcf	___awdiv@divisor,f,c
 16253  004790  3604               	rlcf	___awdiv@divisor+1,f,c
 16254  004792  2A05               	incf	___awdiv@counter,f,c
 16255  004794                     l6769:
 16256  004794  AE04               	btfss	___awdiv@divisor+1,7,c
 16257  004796  D7FA               	goto	l6767
 16258  004798                     u6200:
 16259  004798  90D8               	bcf	status,0,c
 16260  00479A  3607               	rlcf	___awdiv@quotient,f,c
 16261  00479C  3608               	rlcf	___awdiv@quotient+1,f,c
 16262  00479E  5003               	movf	___awdiv@divisor,w,c
 16263  0047A0  5C01               	subwf	___awdiv@dividend,w,c
 16264  0047A2  5004               	movf	___awdiv@divisor+1,w,c
 16265  0047A4  5802               	subwfb	___awdiv@dividend+1,w,c
 16266  0047A6  A0D8               	btfss	status,0,c
 16267  0047A8  D005               	goto	l6779
 16268  0047AA  5003               	movf	___awdiv@divisor,w,c
 16269  0047AC  5E01               	subwf	___awdiv@dividend,f,c
 16270  0047AE  5004               	movf	___awdiv@divisor+1,w,c
 16271  0047B0  5A02               	subwfb	___awdiv@dividend+1,f,c
 16272  0047B2  8007               	bsf	___awdiv@quotient,0,c
 16273  0047B4                     l6779:
 16274  0047B4  90D8               	bcf	status,0,c
 16275  0047B6  3204               	rrcf	___awdiv@divisor+1,f,c
 16276  0047B8  3203               	rrcf	___awdiv@divisor,f,c
 16277  0047BA  2E05               	decfsz	___awdiv@counter,f,c
 16278  0047BC  D7ED               	goto	u6200
 16279  0047BE                     l6783:
 16280  0047BE  5006               	movf	___awdiv@sign,w,c
 16281  0047C0  B4D8               	btfsc	status,2,c
 16282  0047C2  D004               	goto	l6787
 16283  0047C4  6C07               	negf	___awdiv@quotient,c
 16284  0047C6  1E08               	comf	___awdiv@quotient+1,f,c
 16285  0047C8  B0D8               	btfsc	status,0,c
 16286  0047CA  2A08               	incf	___awdiv@quotient+1,f,c
 16287  0047CC                     l6787:
 16288  0047CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
 16289  0047D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 16290  0047D4  0012               	return		;funcret
 16291  0047D6                     __end_of___awdiv:
 16292                           	opt callstack 0
 16293                           
 16294 ;; *************** function _dtoa *****************
 16295 ;; Defined at:
 16296 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16297 ;; Parameters:    Size  Location     Type
 16298 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 16299 ;;		 -> NULL(0), 
 16300 ;;  d               8   33[COMRAM] long long 
 16301 ;; Auto vars:     Size  Location     Type
 16302 ;;  n               8   57[COMRAM] long long 
 16303 ;;  i               2   65[COMRAM] int 
 16304 ;;  s               2   55[COMRAM] int 
 16305 ;;  w               2   53[COMRAM] int 
 16306 ;;  p               2   51[COMRAM] int 
 16307 ;; Return value:  Size  Location     Type
 16308 ;;                  2   31[COMRAM] int 
 16309 ;; Registers used:
 16310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16311 ;; Tracked objects:
 16312 ;;		On entry : 0/0
 16313 ;;		On exit  : 0/0
 16314 ;;		Unchanged: 0/0
 16315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16316 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16317 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16318 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16319 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16320 ;;Total ram usage:       36 bytes
 16321 ;; Hardware stack levels used:    1
 16322 ;; Hardware stack levels required when called:    8
 16323 ;; This function calls:
 16324 ;;		___aodiv
 16325 ;;		___aomod
 16326 ;;		_abs
 16327 ;;		_pad
 16328 ;; This function is called by:
 16329 ;;		_vfpfcnvrt
 16330 ;; This function uses a non-reentrant model
 16331 ;;
 16332                           
 16333                           	psect	text73
 16334  00293E                     __ptext73:
 16335                           	opt callstack 0
 16336  00293E                     _dtoa:
 16337                           	opt callstack 17
 16338                           
 16339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 16340                           
 16341                           ;incstack = 0
 16342  00293E  C022  F03A         	movff	dtoa@d,dtoa@n
 16343  002942  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
 16344  002946  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
 16345  00294A  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
 16346  00294E  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
 16347  002952  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
 16348  002956  C028  F040         	movff	dtoa@d+6,dtoa@n+6
 16349  00295A  C029  F041         	movff	dtoa@d+7,dtoa@n+7
 16350                           
 16351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 16352  00295E  AE41               	btfss	dtoa@n+7,7,c
 16353  002960  D002               	goto	u6480
 16354  002962  0E01               	movlw	1
 16355  002964  D001               	goto	u6490
 16356  002966                     u6480:
 16357  002966  0E00               	movlw	0
 16358  002968                     u6490:
 16359  002968  6E38               	movwf	dtoa@s,c
 16360  00296A  6A39               	clrf	dtoa@s+1,c
 16361                           
 16362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 16363  00296C  5038               	movf	dtoa@s,w,c
 16364  00296E  1039               	iorwf	dtoa@s+1,w,c
 16365  002970  B4D8               	btfsc	status,2,c
 16366  002972  D010               	goto	l6949
 16367                           
 16368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 16369  002974  1E41               	comf	dtoa@n+7,f,c
 16370  002976  1E40               	comf	dtoa@n+6,f,c
 16371  002978  1E3F               	comf	dtoa@n+5,f,c
 16372  00297A  1E3E               	comf	dtoa@n+4,f,c
 16373  00297C  1E3D               	comf	dtoa@n+3,f,c
 16374  00297E  1E3C               	comf	dtoa@n+2,f,c
 16375  002980  1E3B               	comf	dtoa@n+1,f,c
 16376  002982  6C3A               	negf	dtoa@n,c
 16377  002984  0E00               	movlw	0
 16378  002986  223B               	addwfc	dtoa@n+1,f,c
 16379  002988  223C               	addwfc	dtoa@n+2,f,c
 16380  00298A  223D               	addwfc	dtoa@n+3,f,c
 16381  00298C  223E               	addwfc	dtoa@n+4,f,c
 16382  00298E  223F               	addwfc	dtoa@n+5,f,c
 16383  002990  2240               	addwfc	dtoa@n+6,f,c
 16384  002992  2241               	addwfc	dtoa@n+7,f,c
 16385  002994                     l6949:
 16386                           
 16387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 16388  002994  0101               	movlb	1	; () banked
 16389  002996  AF87               	btfss	(_prec+1)& (0+255),7,b
 16390                           
 16391                           ; BSR set to: 1
 16392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 16393  002998  9388               	bcf	_flags& (0+255),1,b
 16394                           
 16395                           ; BSR set to: 1
 16396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 16397  00299A  BF87               	btfsc	(_prec+1)& (0+255),7,b
 16398  00299C  D005               	goto	u6520
 16399  00299E  5187               	movf	(_prec+1)& (0+255),w,b
 16400  0029A0  E108               	bnz	l1130
 16401  0029A2  0586               	decf	_prec& (0+255),w,b
 16402  0029A4  B0D8               	btfsc	status,0,c
 16403  0029A6  D005               	goto	l1130
 16404  0029A8                     u6520:
 16405                           
 16406                           ; BSR set to: 1
 16407  0029A8  0E00               	movlw	0
 16408  0029AA  6E35               	movwf	dtoa@p+1,c
 16409  0029AC  0E01               	movlw	1
 16410  0029AE  6E34               	movwf	dtoa@p,c
 16411  0029B0  D004               	goto	l1132
 16412  0029B2                     l1130:
 16413                           
 16414                           ; BSR set to: 1
 16415  0029B2  C186  F034         	movff	_prec,dtoa@p
 16416  0029B6  C187  F035         	movff	_prec+1,dtoa@p+1
 16417  0029BA                     l1132:
 16418                           
 16419                           ; BSR set to: 1
 16420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 16421  0029BA  C184  F036         	movff	_width,dtoa@w
 16422  0029BE  C185  F037         	movff	_width+1,dtoa@w+1
 16423                           
 16424                           ; BSR set to: 1
 16425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 16426  0029C2  5038               	movf	dtoa@s,w,c
 16427  0029C4  1039               	iorwf	dtoa@s+1,w,c
 16428  0029C6  A4D8               	btfss	status,2,c
 16429  0029C8  D002               	goto	u6540
 16430                           
 16431                           ; BSR set to: 1
 16432  0029CA  A588               	btfss	_flags& (0+255),2,b
 16433  0029CC  D003               	goto	l6963
 16434  0029CE                     u6540:
 16435                           
 16436                           ; BSR set to: 1
 16437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 16438  0029CE  0636               	decf	dtoa@w,f,c
 16439  0029D0  A0D8               	btfss	status,0,c
 16440  0029D2  0637               	decf	dtoa@w+1,f,c
 16441  0029D4                     l6963:
 16442                           
 16443                           ; BSR set to: 1
 16444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 16445  0029D4  0E00               	movlw	0
 16446  0029D6  6E43               	movwf	dtoa@i+1,c
 16447  0029D8  0E4F               	movlw	79
 16448  0029DA  6E42               	movwf	dtoa@i,c
 16449                           
 16450                           ; BSR set to: 1
 16451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 16452  0029DC  0E00               	movlw	0
 16453  0029DE  0102               	movlb	2	; () banked
 16454  0029E0  6F4F               	movwf	(_dbuf+79)& (0+255),b
 16455                           
 16456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16457  0029E2  D07C               	goto	l6977
 16458  0029E4                     l6967:
 16459                           
 16460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 16461  0029E4  0642               	decf	dtoa@i,f,c
 16462  0029E6  A0D8               	btfss	status,0,c
 16463  0029E8  0643               	decf	dtoa@i+1,f,c
 16464                           
 16465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 16466  0029EA  0E00               	movlw	low _dbuf
 16467  0029EC  2442               	addwf	dtoa@i,w,c
 16468  0029EE  6ED9               	movwf	fsr2l,c
 16469  0029F0  0E02               	movlw	high _dbuf
 16470  0029F2  2043               	addwfc	dtoa@i+1,w,c
 16471  0029F4  6EDA               	movwf	fsr2h,c
 16472  0029F6  C03A  F001         	movff	dtoa@n,___aomod@dividend
 16473  0029FA  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
 16474  0029FE  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
 16475  002A02  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
 16476  002A06  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
 16477  002A0A  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
 16478  002A0E  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
 16479  002A12  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
 16480  002A16  0E0A               	movlw	10
 16481  002A18  6E09               	movwf	___aomod@divisor,c
 16482  002A1A  0E00               	movlw	0
 16483  002A1C  6E0A               	movwf	___aomod@divisor+1,c
 16484  002A1E  0E00               	movlw	0
 16485  002A20  6E0B               	movwf	___aomod@divisor+2,c
 16486  002A22  0E00               	movlw	0
 16487  002A24  6E0C               	movwf	___aomod@divisor+3,c
 16488  002A26  0E00               	movlw	0
 16489  002A28  6E0D               	movwf	___aomod@divisor+4,c
 16490  002A2A  0E00               	movlw	0
 16491  002A2C  6E0E               	movwf	___aomod@divisor+5,c
 16492  002A2E  0E00               	movlw	0
 16493  002A30  6E0F               	movwf	___aomod@divisor+6,c
 16494  002A32  0E00               	movlw	0
 16495  002A34  6E10               	movwf	___aomod@divisor+7,c
 16496  002A36  EC16  F01D         	call	___aomod	;wreg free
 16497  002A3A  C001  F02A         	movff	?___aomod,??_dtoa
 16498  002A3E  C002  F02B         	movff	?___aomod+1,??_dtoa+1
 16499  002A42  C003  F02C         	movff	?___aomod+2,??_dtoa+2
 16500  002A46  C004  F02D         	movff	?___aomod+3,??_dtoa+3
 16501  002A4A  C005  F02E         	movff	?___aomod+4,??_dtoa+4
 16502  002A4E  C006  F02F         	movff	?___aomod+5,??_dtoa+5
 16503  002A52  C007  F030         	movff	?___aomod+6,??_dtoa+6
 16504  002A56  C008  F031         	movff	?___aomod+7,??_dtoa+7
 16505  002A5A  C02A  F013         	movff	??_dtoa,abs@a
 16506  002A5E  C02C  F014         	movff	??_dtoa+2,abs@a+1
 16507  002A62  EC4E  F029         	call	_abs	;wreg free
 16508  002A66  5013               	movf	?_abs,w,c
 16509  002A68  0F30               	addlw	48
 16510  002A6A  6EDF               	movwf	indf2,c
 16511                           
 16512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 16513  002A6C  0634               	decf	dtoa@p,f,c
 16514  002A6E  A0D8               	btfss	status,0,c
 16515  002A70  0635               	decf	dtoa@p+1,f,c
 16516                           
 16517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 16518  002A72  0636               	decf	dtoa@w,f,c
 16519  002A74  A0D8               	btfss	status,0,c
 16520  002A76  0637               	decf	dtoa@w+1,f,c
 16521                           
 16522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 16523  002A78  C03A  F001         	movff	dtoa@n,___aodiv@dividend
 16524  002A7C  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 16525  002A80  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 16526  002A84  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 16527  002A88  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 16528  002A8C  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 16529  002A90  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 16530  002A94  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 16531  002A98  0E0A               	movlw	10
 16532  002A9A  6E09               	movwf	___aodiv@divisor,c
 16533  002A9C  0E00               	movlw	0
 16534  002A9E  6E0A               	movwf	___aodiv@divisor+1,c
 16535  002AA0  0E00               	movlw	0
 16536  002AA2  6E0B               	movwf	___aodiv@divisor+2,c
 16537  002AA4  0E00               	movlw	0
 16538  002AA6  6E0C               	movwf	___aodiv@divisor+3,c
 16539  002AA8  0E00               	movlw	0
 16540  002AAA  6E0D               	movwf	___aodiv@divisor+4,c
 16541  002AAC  0E00               	movlw	0
 16542  002AAE  6E0E               	movwf	___aodiv@divisor+5,c
 16543  002AB0  0E00               	movlw	0
 16544  002AB2  6E0F               	movwf	___aodiv@divisor+6,c
 16545  002AB4  0E00               	movlw	0
 16546  002AB6  6E10               	movwf	___aodiv@divisor+7,c
 16547  002AB8  ECFA  F019         	call	___aodiv	;wreg free
 16548  002ABC  C001  F03A         	movff	?___aodiv,dtoa@n
 16549  002AC0  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
 16550  002AC4  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
 16551  002AC8  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
 16552  002ACC  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
 16553  002AD0  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
 16554  002AD4  C007  F040         	movff	?___aodiv+6,dtoa@n+6
 16555  002AD8  C008  F041         	movff	?___aodiv+7,dtoa@n+7
 16556  002ADC                     l6977:
 16557                           
 16558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16559  002ADC  BE43               	btfsc	dtoa@i+1,7,c
 16560  002ADE  D020               	goto	u6590
 16561  002AE0  5043               	movf	dtoa@i+1,w,c
 16562  002AE2  E103               	bnz	u6550
 16563  002AE4  0442               	decf	dtoa@i,w,c
 16564  002AE6  A0D8               	btfss	status,0,c
 16565  002AE8  D01B               	goto	u6590
 16566  002AEA                     u6550:
 16567  002AEA  503A               	movf	dtoa@n,w,c
 16568  002AEC  103B               	iorwf	dtoa@n+1,w,c
 16569  002AEE  103C               	iorwf	dtoa@n+2,w,c
 16570  002AF0  103D               	iorwf	dtoa@n+3,w,c
 16571  002AF2  103E               	iorwf	dtoa@n+4,w,c
 16572  002AF4  103F               	iorwf	dtoa@n+5,w,c
 16573  002AF6  1040               	iorwf	dtoa@n+6,w,c
 16574  002AF8  1041               	iorwf	dtoa@n+7,w,c
 16575  002AFA  A4D8               	btfss	status,2,c
 16576  002AFC  D773               	goto	l6967
 16577  002AFE  BE35               	btfsc	dtoa@p+1,7,c
 16578  002B00  D005               	goto	u6570
 16579  002B02  5035               	movf	dtoa@p+1,w,c
 16580  002B04  E102               	bnz	u6571
 16581  002B06  0434               	decf	dtoa@p,w,c
 16582  002B08  B0D8               	btfsc	status,0,c
 16583  002B0A                     u6571:
 16584  002B0A  D76C               	goto	l6967
 16585  002B0C                     u6570:
 16586  002B0C  BE37               	btfsc	dtoa@w+1,7,c
 16587  002B0E  D008               	goto	u6590
 16588  002B10  5037               	movf	dtoa@w+1,w,c
 16589  002B12  E103               	bnz	u6580
 16590  002B14  0436               	decf	dtoa@w,w,c
 16591  002B16  A0D8               	btfss	status,0,c
 16592  002B18  D003               	goto	u6590
 16593  002B1A                     u6580:
 16594  002B1A  0101               	movlb	1	; () banked
 16595  002B1C  B388               	btfsc	_flags& (0+255),1,b
 16596  002B1E  D762               	goto	l6967
 16597  002B20                     u6590:
 16598                           
 16599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 16600  002B20  5038               	movf	dtoa@s,w,c
 16601  002B22  1039               	iorwf	dtoa@s+1,w,c
 16602  002B24  A4D8               	btfss	status,2,c
 16603  002B26  D003               	goto	u6610
 16604  002B28  0101               	movlb	1	; () banked
 16605  002B2A  A588               	btfss	_flags& (0+255),2,b
 16606  002B2C  D017               	goto	l7001
 16607  002B2E                     u6610:
 16608                           
 16609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 16610  002B2E  0642               	decf	dtoa@i,f,c
 16611  002B30  A0D8               	btfss	status,0,c
 16612  002B32  0643               	decf	dtoa@i+1,f,c
 16613                           
 16614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 16615  002B34  5038               	movf	dtoa@s,w,c
 16616  002B36  1039               	iorwf	dtoa@s+1,w,c
 16617  002B38  A4D8               	btfss	status,2,c
 16618  002B3A  D004               	goto	l6997
 16619  002B3C  0E00               	movlw	0
 16620  002B3E  6E33               	movwf	_dtoa$2035+1,c
 16621  002B40  0E2B               	movlw	43
 16622  002B42  D003               	goto	L35
 16623  002B44                     l6997:
 16624  002B44  0E00               	movlw	0
 16625  002B46  6E33               	movwf	_dtoa$2035+1,c
 16626  002B48  0E2D               	movlw	45
 16627  002B4A                     L35:
 16628  002B4A  6E32               	movwf	_dtoa$2035,c
 16629  002B4C  0E00               	movlw	low _dbuf
 16630  002B4E  2442               	addwf	dtoa@i,w,c
 16631  002B50  6ED9               	movwf	fsr2l,c
 16632  002B52  0E02               	movlw	high _dbuf
 16633  002B54  2043               	addwfc	dtoa@i+1,w,c
 16634  002B56  6EDA               	movwf	fsr2h,c
 16635  002B58  C032  FFDF         	movff	_dtoa$2035,indf2
 16636  002B5C                     l7001:
 16637                           
 16638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 16639  002B5C  C020  F015         	movff	dtoa@fp,pad@fp
 16640  002B60  C021  F016         	movff	dtoa@fp+1,pad@fp+1
 16641  002B64  0E00               	movlw	low _dbuf
 16642  002B66  2442               	addwf	dtoa@i,w,c
 16643  002B68  6E17               	movwf	pad@buf,c
 16644  002B6A  0E02               	movlw	high _dbuf
 16645  002B6C  2043               	addwfc	dtoa@i+1,w,c
 16646  002B6E  6E18               	movwf	pad@buf+1,c
 16647  002B70  C036  F019         	movff	dtoa@w,pad@p
 16648  002B74  C037  F01A         	movff	dtoa@w+1,pad@p+1
 16649  002B78  EC4F  F021         	call	_pad	;wreg free
 16650  002B7C  C015  F020         	movff	?_pad,?_dtoa
 16651  002B80  C016  F021         	movff	?_pad+1,?_dtoa+1
 16652  002B84  0012               	return		;funcret
 16653  002B86                     __end_of_dtoa:
 16654                           	opt callstack 0
 16655                           
 16656 ;; *************** function _abs *****************
 16657 ;; Defined at:
 16658 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 16659 ;; Parameters:    Size  Location     Type
 16660 ;;  a               2   18[COMRAM] int 
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;		None
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  2   18[COMRAM] int 
 16665 ;; Registers used:
 16666 ;;		wreg, status,2, status,0
 16667 ;; Tracked objects:
 16668 ;;		On entry : 0/0
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16675 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16676 ;;Total ram usage:        4 bytes
 16677 ;; Hardware stack levels used:    1
 16678 ;; Hardware stack levels required when called:    1
 16679 ;; This function calls:
 16680 ;;		Nothing
 16681 ;; This function is called by:
 16682 ;;		_dtoa
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           	psect	text74
 16687  00529C                     __ptext74:
 16688                           	opt callstack 0
 16689  00529C                     _abs:
 16690                           	opt callstack 23
 16691                           
 16692                           ;incstack = 0
 16693  00529C  BE14               	btfsc	abs@a+1,7,c
 16694  00529E  D005               	goto	u5320
 16695  0052A0  5014               	movf	abs@a+1,w,c
 16696  0052A2  E110               	bnz	l2044
 16697  0052A4  0413               	decf	abs@a,w,c
 16698  0052A6  B0D8               	btfsc	status,0,c
 16699  0052A8  D00D               	goto	l2044
 16700  0052AA                     u5320:
 16701  0052AA  C013  F015         	movff	abs@a,??_abs
 16702  0052AE  C014  F016         	movff	abs@a+1,??_abs+1
 16703  0052B2  1E15               	comf	??_abs,f,c
 16704  0052B4  1E16               	comf	??_abs+1,f,c
 16705  0052B6  4A15               	infsnz	??_abs,f,c
 16706  0052B8  2A16               	incf	??_abs+1,f,c
 16707  0052BA  C015  F013         	movff	??_abs,?_abs
 16708  0052BE  C016  F014         	movff	??_abs+1,?_abs+1
 16709  0052C2  0012               	return	
 16710  0052C4                     l2044:
 16711  0052C4  C013  F013         	movff	abs@a,?_abs
 16712  0052C8  C014  F014         	movff	abs@a+1,?_abs+1
 16713  0052CC  0012               	return		;funcret
 16714  0052CE                     __end_of_abs:
 16715                           	opt callstack 0
 16716                           
 16717 ;; *************** function ___aomod *****************
 16718 ;; Defined at:
 16719 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 16720 ;; Parameters:    Size  Location     Type
 16721 ;;  dividend        8    0[COMRAM] long long 
 16722 ;;  divisor         8    8[COMRAM] long long 
 16723 ;; Auto vars:     Size  Location     Type
 16724 ;;  sign            1   17[COMRAM] unsigned char 
 16725 ;;  counter         1   16[COMRAM] unsigned char 
 16726 ;; Return value:  Size  Location     Type
 16727 ;;                  8    0[COMRAM] long long 
 16728 ;; Registers used:
 16729 ;;		wreg, status,2, status,0
 16730 ;; Tracked objects:
 16731 ;;		On entry : 0/0
 16732 ;;		On exit  : 0/0
 16733 ;;		Unchanged: 0/0
 16734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16735 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16738 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16739 ;;Total ram usage:       18 bytes
 16740 ;; Hardware stack levels used:    1
 16741 ;; Hardware stack levels required when called:    1
 16742 ;; This function calls:
 16743 ;;		Nothing
 16744 ;; This function is called by:
 16745 ;;		_dtoa
 16746 ;; This function uses a non-reentrant model
 16747 ;;
 16748                           
 16749                           	psect	text75
 16750  003A2C                     __ptext75:
 16751                           	opt callstack 0
 16752  003A2C                     ___aomod:
 16753                           	opt callstack 23
 16754                           
 16755                           ;incstack = 0
 16756  003A2C  0E00               	movlw	0
 16757  003A2E  6E12               	movwf	___aomod@sign,c
 16758  003A30  AE08               	btfss	___aomod@dividend+7,7,c
 16759  003A32  D012               	goto	l6445
 16760  003A34  1E08               	comf	___aomod@dividend+7,f,c
 16761  003A36  1E07               	comf	___aomod@dividend+6,f,c
 16762  003A38  1E06               	comf	___aomod@dividend+5,f,c
 16763  003A3A  1E05               	comf	___aomod@dividend+4,f,c
 16764  003A3C  1E04               	comf	___aomod@dividend+3,f,c
 16765  003A3E  1E03               	comf	___aomod@dividend+2,f,c
 16766  003A40  1E02               	comf	___aomod@dividend+1,f,c
 16767  003A42  6C01               	negf	___aomod@dividend,c
 16768  003A44  0E00               	movlw	0
 16769  003A46  2202               	addwfc	___aomod@dividend+1,f,c
 16770  003A48  2203               	addwfc	___aomod@dividend+2,f,c
 16771  003A4A  2204               	addwfc	___aomod@dividend+3,f,c
 16772  003A4C  2205               	addwfc	___aomod@dividend+4,f,c
 16773  003A4E  2206               	addwfc	___aomod@dividend+5,f,c
 16774  003A50  2207               	addwfc	___aomod@dividend+6,f,c
 16775  003A52  2208               	addwfc	___aomod@dividend+7,f,c
 16776  003A54  0E01               	movlw	1
 16777  003A56  6E12               	movwf	___aomod@sign,c
 16778  003A58                     l6445:
 16779  003A58  AE10               	btfss	___aomod@divisor+7,7,c
 16780  003A5A  D010               	goto	l6449
 16781  003A5C  1E10               	comf	___aomod@divisor+7,f,c
 16782  003A5E  1E0F               	comf	___aomod@divisor+6,f,c
 16783  003A60  1E0E               	comf	___aomod@divisor+5,f,c
 16784  003A62  1E0D               	comf	___aomod@divisor+4,f,c
 16785  003A64  1E0C               	comf	___aomod@divisor+3,f,c
 16786  003A66  1E0B               	comf	___aomod@divisor+2,f,c
 16787  003A68  1E0A               	comf	___aomod@divisor+1,f,c
 16788  003A6A  6C09               	negf	___aomod@divisor,c
 16789  003A6C  0E00               	movlw	0
 16790  003A6E  220A               	addwfc	___aomod@divisor+1,f,c
 16791  003A70  220B               	addwfc	___aomod@divisor+2,f,c
 16792  003A72  220C               	addwfc	___aomod@divisor+3,f,c
 16793  003A74  220D               	addwfc	___aomod@divisor+4,f,c
 16794  003A76  220E               	addwfc	___aomod@divisor+5,f,c
 16795  003A78  220F               	addwfc	___aomod@divisor+6,f,c
 16796  003A7A  2210               	addwfc	___aomod@divisor+7,f,c
 16797  003A7C                     l6449:
 16798  003A7C  5009               	movf	___aomod@divisor,w,c
 16799  003A7E  100A               	iorwf	___aomod@divisor+1,w,c
 16800  003A80  100B               	iorwf	___aomod@divisor+2,w,c
 16801  003A82  100C               	iorwf	___aomod@divisor+3,w,c
 16802  003A84  100D               	iorwf	___aomod@divisor+4,w,c
 16803  003A86  100E               	iorwf	___aomod@divisor+5,w,c
 16804  003A88  100F               	iorwf	___aomod@divisor+6,w,c
 16805  003A8A  1010               	iorwf	___aomod@divisor+7,w,c
 16806  003A8C  B4D8               	btfsc	status,2,c
 16807  003A8E  D03C               	goto	l6465
 16808  003A90  0E01               	movlw	1
 16809  003A92  6E11               	movwf	___aomod@counter,c
 16810  003A94  D00A               	goto	l6455
 16811  003A96                     l6453:
 16812  003A96  90D8               	bcf	status,0,c
 16813  003A98  3609               	rlcf	___aomod@divisor,f,c
 16814  003A9A  360A               	rlcf	___aomod@divisor+1,f,c
 16815  003A9C  360B               	rlcf	___aomod@divisor+2,f,c
 16816  003A9E  360C               	rlcf	___aomod@divisor+3,f,c
 16817  003AA0  360D               	rlcf	___aomod@divisor+4,f,c
 16818  003AA2  360E               	rlcf	___aomod@divisor+5,f,c
 16819  003AA4  360F               	rlcf	___aomod@divisor+6,f,c
 16820  003AA6  3610               	rlcf	___aomod@divisor+7,f,c
 16821  003AA8  2A11               	incf	___aomod@counter,f,c
 16822  003AAA                     l6455:
 16823  003AAA  AE10               	btfss	___aomod@divisor+7,7,c
 16824  003AAC  D7F4               	goto	l6453
 16825  003AAE                     u5720:
 16826  003AAE  5009               	movf	___aomod@divisor,w,c
 16827  003AB0  5C01               	subwf	___aomod@dividend,w,c
 16828  003AB2  500A               	movf	___aomod@divisor+1,w,c
 16829  003AB4  5802               	subwfb	___aomod@dividend+1,w,c
 16830  003AB6  500B               	movf	___aomod@divisor+2,w,c
 16831  003AB8  5803               	subwfb	___aomod@dividend+2,w,c
 16832  003ABA  500C               	movf	___aomod@divisor+3,w,c
 16833  003ABC  5804               	subwfb	___aomod@dividend+3,w,c
 16834  003ABE  500D               	movf	___aomod@divisor+4,w,c
 16835  003AC0  5805               	subwfb	___aomod@dividend+4,w,c
 16836  003AC2  500E               	movf	___aomod@divisor+5,w,c
 16837  003AC4  5806               	subwfb	___aomod@dividend+5,w,c
 16838  003AC6  500F               	movf	___aomod@divisor+6,w,c
 16839  003AC8  5807               	subwfb	___aomod@dividend+6,w,c
 16840  003ACA  5010               	movf	___aomod@divisor+7,w,c
 16841  003ACC  5808               	subwfb	___aomod@dividend+7,w,c
 16842  003ACE  A0D8               	btfss	status,0,c
 16843  003AD0  D010               	goto	l6461
 16844  003AD2  5009               	movf	___aomod@divisor,w,c
 16845  003AD4  5E01               	subwf	___aomod@dividend,f,c
 16846  003AD6  500A               	movf	___aomod@divisor+1,w,c
 16847  003AD8  5A02               	subwfb	___aomod@dividend+1,f,c
 16848  003ADA  500B               	movf	___aomod@divisor+2,w,c
 16849  003ADC  5A03               	subwfb	___aomod@dividend+2,f,c
 16850  003ADE  500C               	movf	___aomod@divisor+3,w,c
 16851  003AE0  5A04               	subwfb	___aomod@dividend+3,f,c
 16852  003AE2  500D               	movf	___aomod@divisor+4,w,c
 16853  003AE4  5A05               	subwfb	___aomod@dividend+4,f,c
 16854  003AE6  500E               	movf	___aomod@divisor+5,w,c
 16855  003AE8  5A06               	subwfb	___aomod@dividend+5,f,c
 16856  003AEA  500F               	movf	___aomod@divisor+6,w,c
 16857  003AEC  5A07               	subwfb	___aomod@dividend+6,f,c
 16858  003AEE  5010               	movf	___aomod@divisor+7,w,c
 16859  003AF0  5A08               	subwfb	___aomod@dividend+7,f,c
 16860  003AF2                     l6461:
 16861  003AF2  90D8               	bcf	status,0,c
 16862  003AF4  3210               	rrcf	___aomod@divisor+7,f,c
 16863  003AF6  320F               	rrcf	___aomod@divisor+6,f,c
 16864  003AF8  320E               	rrcf	___aomod@divisor+5,f,c
 16865  003AFA  320D               	rrcf	___aomod@divisor+4,f,c
 16866  003AFC  320C               	rrcf	___aomod@divisor+3,f,c
 16867  003AFE  320B               	rrcf	___aomod@divisor+2,f,c
 16868  003B00  320A               	rrcf	___aomod@divisor+1,f,c
 16869  003B02  3209               	rrcf	___aomod@divisor,f,c
 16870  003B04  2E11               	decfsz	___aomod@counter,f,c
 16871  003B06  D7D3               	goto	u5720
 16872  003B08                     l6465:
 16873  003B08  5012               	movf	___aomod@sign,w,c
 16874  003B0A  B4D8               	btfsc	status,2,c
 16875  003B0C  D010               	goto	l6469
 16876  003B0E  1E08               	comf	___aomod@dividend+7,f,c
 16877  003B10  1E07               	comf	___aomod@dividend+6,f,c
 16878  003B12  1E06               	comf	___aomod@dividend+5,f,c
 16879  003B14  1E05               	comf	___aomod@dividend+4,f,c
 16880  003B16  1E04               	comf	___aomod@dividend+3,f,c
 16881  003B18  1E03               	comf	___aomod@dividend+2,f,c
 16882  003B1A  1E02               	comf	___aomod@dividend+1,f,c
 16883  003B1C  6C01               	negf	___aomod@dividend,c
 16884  003B1E  0E00               	movlw	0
 16885  003B20  2202               	addwfc	___aomod@dividend+1,f,c
 16886  003B22  2203               	addwfc	___aomod@dividend+2,f,c
 16887  003B24  2204               	addwfc	___aomod@dividend+3,f,c
 16888  003B26  2205               	addwfc	___aomod@dividend+4,f,c
 16889  003B28  2206               	addwfc	___aomod@dividend+5,f,c
 16890  003B2A  2207               	addwfc	___aomod@dividend+6,f,c
 16891  003B2C  2208               	addwfc	___aomod@dividend+7,f,c
 16892  003B2E                     l6469:
 16893  003B2E  C001  F001         	movff	___aomod@dividend,?___aomod
 16894  003B32  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 16895  003B36  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 16896  003B3A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 16897  003B3E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 16898  003B42  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 16899  003B46  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 16900  003B4A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 16901  003B4E  0012               	return		;funcret
 16902  003B50                     __end_of___aomod:
 16903                           	opt callstack 0
 16904                           
 16905 ;; *************** function ___aodiv *****************
 16906 ;; Defined at:
 16907 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 16908 ;; Parameters:    Size  Location     Type
 16909 ;;  dividend        8    0[COMRAM] long long 
 16910 ;;  divisor         8    8[COMRAM] long long 
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;  quotient        8   18[COMRAM] long long 
 16913 ;;  sign            1   17[COMRAM] unsigned char 
 16914 ;;  counter         1   16[COMRAM] unsigned char 
 16915 ;; Return value:  Size  Location     Type
 16916 ;;                  8    0[COMRAM] long long 
 16917 ;; Registers used:
 16918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16919 ;; Tracked objects:
 16920 ;;		On entry : 0/0
 16921 ;;		On exit  : 0/0
 16922 ;;		Unchanged: 0/0
 16923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16924 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16925 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;Total ram usage:       26 bytes
 16929 ;; Hardware stack levels used:    1
 16930 ;; Hardware stack levels required when called:    1
 16931 ;; This function calls:
 16932 ;;		Nothing
 16933 ;; This function is called by:
 16934 ;;		_dtoa
 16935 ;; This function uses a non-reentrant model
 16936 ;;
 16937                           
 16938                           	psect	text76
 16939  0033F4                     __ptext76:
 16940                           	opt callstack 0
 16941  0033F4                     ___aodiv:
 16942                           	opt callstack 23
 16943                           
 16944                           ;incstack = 0
 16945  0033F4  0E00               	movlw	0
 16946  0033F6  6E12               	movwf	___aodiv@sign,c
 16947  0033F8  AE10               	btfss	___aodiv@divisor+7,7,c
 16948  0033FA  D012               	goto	l6401
 16949  0033FC  1E10               	comf	___aodiv@divisor+7,f,c
 16950  0033FE  1E0F               	comf	___aodiv@divisor+6,f,c
 16951  003400  1E0E               	comf	___aodiv@divisor+5,f,c
 16952  003402  1E0D               	comf	___aodiv@divisor+4,f,c
 16953  003404  1E0C               	comf	___aodiv@divisor+3,f,c
 16954  003406  1E0B               	comf	___aodiv@divisor+2,f,c
 16955  003408  1E0A               	comf	___aodiv@divisor+1,f,c
 16956  00340A  6C09               	negf	___aodiv@divisor,c
 16957  00340C  0E00               	movlw	0
 16958  00340E  220A               	addwfc	___aodiv@divisor+1,f,c
 16959  003410  220B               	addwfc	___aodiv@divisor+2,f,c
 16960  003412  220C               	addwfc	___aodiv@divisor+3,f,c
 16961  003414  220D               	addwfc	___aodiv@divisor+4,f,c
 16962  003416  220E               	addwfc	___aodiv@divisor+5,f,c
 16963  003418  220F               	addwfc	___aodiv@divisor+6,f,c
 16964  00341A  2210               	addwfc	___aodiv@divisor+7,f,c
 16965  00341C  0E01               	movlw	1
 16966  00341E  6E12               	movwf	___aodiv@sign,c
 16967  003420                     l6401:
 16968  003420  AE08               	btfss	___aodiv@dividend+7,7,c
 16969  003422  D012               	goto	l6407
 16970  003424  1E08               	comf	___aodiv@dividend+7,f,c
 16971  003426  1E07               	comf	___aodiv@dividend+6,f,c
 16972  003428  1E06               	comf	___aodiv@dividend+5,f,c
 16973  00342A  1E05               	comf	___aodiv@dividend+4,f,c
 16974  00342C  1E04               	comf	___aodiv@dividend+3,f,c
 16975  00342E  1E03               	comf	___aodiv@dividend+2,f,c
 16976  003430  1E02               	comf	___aodiv@dividend+1,f,c
 16977  003432  6C01               	negf	___aodiv@dividend,c
 16978  003434  0E00               	movlw	0
 16979  003436  2202               	addwfc	___aodiv@dividend+1,f,c
 16980  003438  2203               	addwfc	___aodiv@dividend+2,f,c
 16981  00343A  2204               	addwfc	___aodiv@dividend+3,f,c
 16982  00343C  2205               	addwfc	___aodiv@dividend+4,f,c
 16983  00343E  2206               	addwfc	___aodiv@dividend+5,f,c
 16984  003440  2207               	addwfc	___aodiv@dividend+6,f,c
 16985  003442  2208               	addwfc	___aodiv@dividend+7,f,c
 16986  003444  0E01               	movlw	1
 16987  003446  1A12               	xorwf	___aodiv@sign,f,c
 16988  003448                     l6407:
 16989  003448  EE20  F013         	lfsr	2,___aodiv@quotient
 16990  00344C  0E07               	movlw	7
 16991  00344E                     u5641:
 16992  00344E  6ADE               	clrf	postinc2,c
 16993  003450  06E8               	decf	wreg,f,c
 16994  003452  E2FD               	bc	u5641
 16995  003454  5009               	movf	___aodiv@divisor,w,c
 16996  003456  100A               	iorwf	___aodiv@divisor+1,w,c
 16997  003458  100B               	iorwf	___aodiv@divisor+2,w,c
 16998  00345A  100C               	iorwf	___aodiv@divisor+3,w,c
 16999  00345C  100D               	iorwf	___aodiv@divisor+4,w,c
 17000  00345E  100E               	iorwf	___aodiv@divisor+5,w,c
 17001  003460  100F               	iorwf	___aodiv@divisor+6,w,c
 17002  003462  1010               	iorwf	___aodiv@divisor+7,w,c
 17003  003464  B4D8               	btfsc	status,2,c
 17004  003466  D046               	goto	l6429
 17005  003468  0E01               	movlw	1
 17006  00346A  6E11               	movwf	___aodiv@counter,c
 17007  00346C  D00A               	goto	l6415
 17008  00346E                     l6413:
 17009  00346E  90D8               	bcf	status,0,c
 17010  003470  3609               	rlcf	___aodiv@divisor,f,c
 17011  003472  360A               	rlcf	___aodiv@divisor+1,f,c
 17012  003474  360B               	rlcf	___aodiv@divisor+2,f,c
 17013  003476  360C               	rlcf	___aodiv@divisor+3,f,c
 17014  003478  360D               	rlcf	___aodiv@divisor+4,f,c
 17015  00347A  360E               	rlcf	___aodiv@divisor+5,f,c
 17016  00347C  360F               	rlcf	___aodiv@divisor+6,f,c
 17017  00347E  3610               	rlcf	___aodiv@divisor+7,f,c
 17018  003480  2A11               	incf	___aodiv@counter,f,c
 17019  003482                     l6415:
 17020  003482  AE10               	btfss	___aodiv@divisor+7,7,c
 17021  003484  D7F4               	goto	l6413
 17022  003486                     u5660:
 17023  003486  90D8               	bcf	status,0,c
 17024  003488  3613               	rlcf	___aodiv@quotient,f,c
 17025  00348A  3614               	rlcf	___aodiv@quotient+1,f,c
 17026  00348C  3615               	rlcf	___aodiv@quotient+2,f,c
 17027  00348E  3616               	rlcf	___aodiv@quotient+3,f,c
 17028  003490  3617               	rlcf	___aodiv@quotient+4,f,c
 17029  003492  3618               	rlcf	___aodiv@quotient+5,f,c
 17030  003494  3619               	rlcf	___aodiv@quotient+6,f,c
 17031  003496  361A               	rlcf	___aodiv@quotient+7,f,c
 17032  003498  5009               	movf	___aodiv@divisor,w,c
 17033  00349A  5C01               	subwf	___aodiv@dividend,w,c
 17034  00349C  500A               	movf	___aodiv@divisor+1,w,c
 17035  00349E  5802               	subwfb	___aodiv@dividend+1,w,c
 17036  0034A0  500B               	movf	___aodiv@divisor+2,w,c
 17037  0034A2  5803               	subwfb	___aodiv@dividend+2,w,c
 17038  0034A4  500C               	movf	___aodiv@divisor+3,w,c
 17039  0034A6  5804               	subwfb	___aodiv@dividend+3,w,c
 17040  0034A8  500D               	movf	___aodiv@divisor+4,w,c
 17041  0034AA  5805               	subwfb	___aodiv@dividend+4,w,c
 17042  0034AC  500E               	movf	___aodiv@divisor+5,w,c
 17043  0034AE  5806               	subwfb	___aodiv@dividend+5,w,c
 17044  0034B0  500F               	movf	___aodiv@divisor+6,w,c
 17045  0034B2  5807               	subwfb	___aodiv@dividend+6,w,c
 17046  0034B4  5010               	movf	___aodiv@divisor+7,w,c
 17047  0034B6  5808               	subwfb	___aodiv@dividend+7,w,c
 17048  0034B8  A0D8               	btfss	status,0,c
 17049  0034BA  D011               	goto	l6425
 17050  0034BC  5009               	movf	___aodiv@divisor,w,c
 17051  0034BE  5E01               	subwf	___aodiv@dividend,f,c
 17052  0034C0  500A               	movf	___aodiv@divisor+1,w,c
 17053  0034C2  5A02               	subwfb	___aodiv@dividend+1,f,c
 17054  0034C4  500B               	movf	___aodiv@divisor+2,w,c
 17055  0034C6  5A03               	subwfb	___aodiv@dividend+2,f,c
 17056  0034C8  500C               	movf	___aodiv@divisor+3,w,c
 17057  0034CA  5A04               	subwfb	___aodiv@dividend+3,f,c
 17058  0034CC  500D               	movf	___aodiv@divisor+4,w,c
 17059  0034CE  5A05               	subwfb	___aodiv@dividend+4,f,c
 17060  0034D0  500E               	movf	___aodiv@divisor+5,w,c
 17061  0034D2  5A06               	subwfb	___aodiv@dividend+5,f,c
 17062  0034D4  500F               	movf	___aodiv@divisor+6,w,c
 17063  0034D6  5A07               	subwfb	___aodiv@dividend+6,f,c
 17064  0034D8  5010               	movf	___aodiv@divisor+7,w,c
 17065  0034DA  5A08               	subwfb	___aodiv@dividend+7,f,c
 17066  0034DC  8013               	bsf	___aodiv@quotient,0,c
 17067  0034DE                     l6425:
 17068  0034DE  90D8               	bcf	status,0,c
 17069  0034E0  3210               	rrcf	___aodiv@divisor+7,f,c
 17070  0034E2  320F               	rrcf	___aodiv@divisor+6,f,c
 17071  0034E4  320E               	rrcf	___aodiv@divisor+5,f,c
 17072  0034E6  320D               	rrcf	___aodiv@divisor+4,f,c
 17073  0034E8  320C               	rrcf	___aodiv@divisor+3,f,c
 17074  0034EA  320B               	rrcf	___aodiv@divisor+2,f,c
 17075  0034EC  320A               	rrcf	___aodiv@divisor+1,f,c
 17076  0034EE  3209               	rrcf	___aodiv@divisor,f,c
 17077  0034F0  2E11               	decfsz	___aodiv@counter,f,c
 17078  0034F2  D7C9               	goto	u5660
 17079  0034F4                     l6429:
 17080  0034F4  5012               	movf	___aodiv@sign,w,c
 17081  0034F6  B4D8               	btfsc	status,2,c
 17082  0034F8  D010               	goto	l6433
 17083  0034FA  1E1A               	comf	___aodiv@quotient+7,f,c
 17084  0034FC  1E19               	comf	___aodiv@quotient+6,f,c
 17085  0034FE  1E18               	comf	___aodiv@quotient+5,f,c
 17086  003500  1E17               	comf	___aodiv@quotient+4,f,c
 17087  003502  1E16               	comf	___aodiv@quotient+3,f,c
 17088  003504  1E15               	comf	___aodiv@quotient+2,f,c
 17089  003506  1E14               	comf	___aodiv@quotient+1,f,c
 17090  003508  6C13               	negf	___aodiv@quotient,c
 17091  00350A  0E00               	movlw	0
 17092  00350C  2214               	addwfc	___aodiv@quotient+1,f,c
 17093  00350E  2215               	addwfc	___aodiv@quotient+2,f,c
 17094  003510  2216               	addwfc	___aodiv@quotient+3,f,c
 17095  003512  2217               	addwfc	___aodiv@quotient+4,f,c
 17096  003514  2218               	addwfc	___aodiv@quotient+5,f,c
 17097  003516  2219               	addwfc	___aodiv@quotient+6,f,c
 17098  003518  221A               	addwfc	___aodiv@quotient+7,f,c
 17099  00351A                     l6433:
 17100  00351A  C013  F001         	movff	___aodiv@quotient,?___aodiv
 17101  00351E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 17102  003522  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 17103  003526  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 17104  00352A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 17105  00352E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 17106  003532  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 17107  003536  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 17108  00353A  0012               	return		;funcret
 17109  00353C                     __end_of___aodiv:
 17110                           	opt callstack 0
 17111                           
 17112 ;; *************** function _ctoa *****************
 17113 ;; Defined at:
 17114 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 17115 ;; Parameters:    Size  Location     Type
 17116 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 17117 ;;		 -> NULL(0), 
 17118 ;;  c               1   33[COMRAM] unsigned char 
 17119 ;; Auto vars:     Size  Location     Type
 17120 ;;  w               2   34[COMRAM] int 
 17121 ;;  l               2    0        int 
 17122 ;; Return value:  Size  Location     Type
 17123 ;;                  2   31[COMRAM] int 
 17124 ;; Registers used:
 17125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17126 ;; Tracked objects:
 17127 ;;		On entry : 0/0
 17128 ;;		On exit  : 0/0
 17129 ;;		Unchanged: 0/0
 17130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17134 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17135 ;;Total ram usage:        5 bytes
 17136 ;; Hardware stack levels used:    1
 17137 ;; Hardware stack levels required when called:    8
 17138 ;; This function calls:
 17139 ;;		_pad
 17140 ;; This function is called by:
 17141 ;;		_vfpfcnvrt
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text77
 17146  004F5A                     __ptext77:
 17147                           	opt callstack 0
 17148  004F5A                     _ctoa:
 17149                           	opt callstack 17
 17150                           
 17151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 17152                           
 17153                           ;incstack = 0
 17154  004F5A  0101               	movlb	1	; () banked
 17155  004F5C  5184               	movf	_width& (0+255),w,b
 17156  004F5E  1185               	iorwf	(_width+1)& (0+255),w,b
 17157  004F60  A4D8               	btfss	status,2,c
 17158  004F62  D005               	goto	l6933
 17159                           
 17160                           ; BSR set to: 1
 17161  004F64  C184  F023         	movff	_width,ctoa@w
 17162  004F68  C185  F024         	movff	_width+1,ctoa@w+1
 17163  004F6C  D006               	goto	l6935
 17164  004F6E                     l6933:
 17165                           
 17166                           ; BSR set to: 1
 17167  004F6E  0EFF               	movlw	255
 17168  004F70  2584               	addwf	_width& (0+255),w,b
 17169  004F72  6E23               	movwf	ctoa@w,c
 17170  004F74  0EFF               	movlw	255
 17171  004F76  2185               	addwfc	(_width+1)& (0+255),w,b
 17172  004F78  6E24               	movwf	ctoa@w+1,c
 17173  004F7A                     l6935:
 17174                           
 17175                           ; BSR set to: 1
 17176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 17177  004F7A  C022  F200         	movff	ctoa@c,_dbuf
 17178                           
 17179                           ; BSR set to: 1
 17180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 17181  004F7E  0E00               	movlw	0
 17182  004F80  0102               	movlb	2	; () banked
 17183  004F82  6F01               	movwf	(_dbuf+1)& (0+255),b
 17184                           
 17185                           ; BSR set to: 2
 17186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 17187  004F84  C020  F015         	movff	ctoa@fp,pad@fp
 17188  004F88  C021  F016         	movff	ctoa@fp+1,pad@fp+1
 17189  004F8C  0E00               	movlw	low _dbuf
 17190  004F8E  6E17               	movwf	pad@buf,c
 17191  004F90  0E02               	movlw	high _dbuf
 17192  004F92  6E18               	movwf	pad@buf+1,c
 17193  004F94  C023  F019         	movff	ctoa@w,pad@p
 17194  004F98  C024  F01A         	movff	ctoa@w+1,pad@p+1
 17195  004F9C  EC4F  F021         	call	_pad	;wreg free
 17196  004FA0  C015  F020         	movff	?_pad,?_ctoa
 17197  004FA4  C016  F021         	movff	?_pad+1,?_ctoa+1
 17198  004FA8  0012               	return		;funcret
 17199  004FAA                     __end_of_ctoa:
 17200                           	opt callstack 0
 17201                           
 17202 ;; *************** function _pad *****************
 17203 ;; Defined at:
 17204 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 17205 ;; Parameters:    Size  Location     Type
 17206 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 17207 ;;		 -> NULL(0), 
 17208 ;;  buf             2   22[COMRAM] PTR unsigned char 
 17209 ;;		 -> dbuf(80), 
 17210 ;;  p               2   24[COMRAM] int 
 17211 ;; Auto vars:     Size  Location     Type
 17212 ;;  w               2   29[COMRAM] int 
 17213 ;;  i               2   27[COMRAM] int 
 17214 ;; Return value:  Size  Location     Type
 17215 ;;                  2   20[COMRAM] int 
 17216 ;; Registers used:
 17217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17218 ;; Tracked objects:
 17219 ;;		On entry : 0/0
 17220 ;;		On exit  : 0/0
 17221 ;;		Unchanged: 0/0
 17222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17223 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17226 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17227 ;;Total ram usage:       11 bytes
 17228 ;; Hardware stack levels used:    1
 17229 ;; Hardware stack levels required when called:    7
 17230 ;; This function calls:
 17231 ;;		_fputc
 17232 ;;		_fputs
 17233 ;;		_strlen
 17234 ;; This function is called by:
 17235 ;;		_ctoa
 17236 ;;		_dtoa
 17237 ;;		_efgtoa
 17238 ;;		_xtoa
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text78
 17243  00429E                     __ptext78:
 17244                           	opt callstack 0
 17245  00429E                     _pad:
 17246                           	opt callstack 17
 17247                           
 17248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 17249                           
 17250                           ;incstack = 0
 17251  00429E  0101               	movlb	1	; () banked
 17252  0042A0  A188               	btfss	_flags& (0+255),0,b
 17253  0042A2  D00A               	goto	l6283
 17254                           
 17255                           ; BSR set to: 1
 17256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 17257  0042A4  C017  F00E         	movff	pad@buf,fputs@s
 17258  0042A8  C018  F00F         	movff	pad@buf+1,fputs@s+1
 17259  0042AC  C015  F010         	movff	pad@fp,fputs@fp
 17260  0042B0  C016  F011         	movff	pad@fp+1,fputs@fp+1
 17261  0042B4  EC18  F029         	call	_fputs	;wreg free
 17262  0042B8                     l6283:
 17263                           
 17264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 17265  0042B8  BE1A               	btfsc	pad@p+1,7,c
 17266  0042BA  D005               	goto	l6287
 17267  0042BC  C019  F01E         	movff	pad@p,pad@w
 17268  0042C0  C01A  F01F         	movff	pad@p+1,pad@w+1
 17269  0042C4  D004               	goto	l1112
 17270  0042C6                     l6287:
 17271  0042C6  0E00               	movlw	0
 17272  0042C8  6E1F               	movwf	pad@w+1,c
 17273  0042CA  0E00               	movlw	0
 17274  0042CC  6E1E               	movwf	pad@w,c
 17275  0042CE                     l1112:
 17276                           
 17277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 17278  0042CE  0E00               	movlw	0
 17279  0042D0  6E1D               	movwf	pad@i+1,c
 17280  0042D2  0E00               	movlw	0
 17281  0042D4  6E1C               	movwf	pad@i,c
 17282                           
 17283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17284  0042D6  D00C               	goto	l6293
 17285  0042D8                     l6289:
 17286                           
 17287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 17288  0042D8  0E00               	movlw	0
 17289  0042DA  6E06               	movwf	fputc@c+1,c
 17290  0042DC  0E20               	movlw	32
 17291  0042DE  6E05               	movwf	fputc@c,c
 17292  0042E0  C015  F007         	movff	pad@fp,fputc@fp
 17293  0042E4  C016  F008         	movff	pad@fp+1,fputc@fp+1
 17294  0042E8  ECCB  F025         	call	_fputc	;wreg free
 17295                           
 17296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 17297  0042EC  4A1C               	infsnz	pad@i,f,c
 17298  0042EE  2A1D               	incf	pad@i+1,f,c
 17299  0042F0                     l6293:
 17300                           
 17301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17302  0042F0  501E               	movf	pad@w,w,c
 17303  0042F2  5C1C               	subwf	pad@i,w,c
 17304  0042F4  501D               	movf	pad@i+1,w,c
 17305  0042F6  0A80               	xorlw	128
 17306  0042F8  6E1B               	movwf	??_pad& (0+255),c
 17307  0042FA  501F               	movf	pad@w+1,w,c
 17308  0042FC  0A80               	xorlw	128
 17309  0042FE  581B               	subwfb	??_pad& (0+255),w,c
 17310  004300  A0D8               	btfss	status,0,c
 17311  004302  D7EA               	goto	l6289
 17312                           
 17313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 17314  004304  0101               	movlb	1	; () banked
 17315  004306  B188               	btfsc	_flags& (0+255),0,b
 17316  004308  D00A               	goto	l6297
 17317                           
 17318                           ; BSR set to: 1
 17319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 17320  00430A  C017  F00E         	movff	pad@buf,fputs@s
 17321  00430E  C018  F00F         	movff	pad@buf+1,fputs@s+1
 17322  004312  C015  F010         	movff	pad@fp,fputs@fp
 17323  004316  C016  F011         	movff	pad@fp+1,fputs@fp+1
 17324  00431A  EC18  F029         	call	_fputs	;wreg free
 17325  00431E                     l6297:
 17326                           
 17327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 17328  00431E  C017  F001         	movff	pad@buf,strlen@s
 17329  004322  C018  F002         	movff	pad@buf+1,strlen@s+1
 17330  004326  ECD7  F028         	call	_strlen	;wreg free
 17331  00432A  501E               	movf	pad@w,w,c
 17332  00432C  2401               	addwf	?_strlen,w,c
 17333  00432E  6E15               	movwf	?_pad,c
 17334  004330  501F               	movf	pad@w+1,w,c
 17335  004332  2002               	addwfc	?_strlen+1,w,c
 17336  004334  6E16               	movwf	?_pad+1,c
 17337  004336  0012               	return		;funcret
 17338  004338                     __end_of_pad:
 17339                           	opt callstack 0
 17340                           
 17341 ;; *************** function _strlen *****************
 17342 ;; Defined at:
 17343 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 17344 ;; Parameters:    Size  Location     Type
 17345 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17346 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(80), STR_48(6), 
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;  a               2    2[COMRAM] PTR const unsigned char 
 17349 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(80), STR_48(6), 
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  2    0[COMRAM] unsigned int 
 17352 ;; Registers used:
 17353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17354 ;; Tracked objects:
 17355 ;;		On entry : 0/0
 17356 ;;		On exit  : 0/0
 17357 ;;		Unchanged: 0/0
 17358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;Total ram usage:        4 bytes
 17364 ;; Hardware stack levels used:    1
 17365 ;; Hardware stack levels required when called:    1
 17366 ;; This function calls:
 17367 ;;		Nothing
 17368 ;; This function is called by:
 17369 ;;		_pad
 17370 ;;		_stoa
 17371 ;; This function uses a non-reentrant model
 17372 ;;
 17373                           
 17374                           	psect	text79
 17375  0051AE                     __ptext79:
 17376                           	opt callstack 0
 17377  0051AE                     _strlen:
 17378                           	opt callstack 22
 17379                           
 17380                           ;incstack = 0
 17381  0051AE  C001  F003         	movff	strlen@s,strlen@a
 17382  0051B2  C002  F004         	movff	strlen@s+1,strlen@a+1
 17383  0051B6  D002               	goto	l6063
 17384  0051B8                     l6061:
 17385  0051B8  4A01               	infsnz	strlen@s,f,c
 17386  0051BA  2A02               	incf	strlen@s+1,f,c
 17387  0051BC                     l6063:
 17388  0051BC  C001  FFF6         	movff	strlen@s,tblptrl
 17389  0051C0  C002  FFF7         	movff	strlen@s+1,tblptrh
 17390  0051C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17391  0051C6  6EF8               	movwf	tblptru,c
 17392  0051C8  0E0F               	movlw	(high __ramtop+-1)
 17393  0051CA  64F7               	cpfsgt	tblptrh,c
 17394  0051CC  D003               	bra	u4837
 17395  0051CE  0008               	tblrd		*
 17396  0051D0  50F5               	movf	tablat,w,c
 17397  0051D2  D005               	bra	u4830
 17398  0051D4                     u4837:
 17399  0051D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 17400  0051D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 17401  0051DC  50EF               	movf	indf0,w,c
 17402  0051DE                     u4830:
 17403  0051DE  0900               	iorlw	0
 17404  0051E0  A4D8               	btfss	status,2,c
 17405  0051E2  D7EA               	goto	l6061
 17406  0051E4  5003               	movf	strlen@a,w,c
 17407  0051E6  5C01               	subwf	strlen@s,w,c
 17408  0051E8  6E01               	movwf	?_strlen,c
 17409  0051EA  5004               	movf	strlen@a+1,w,c
 17410  0051EC  5802               	subwfb	strlen@s+1,w,c
 17411  0051EE  6E02               	movwf	?_strlen+1,c
 17412  0051F0  0012               	return		;funcret
 17413  0051F2                     __end_of_strlen:
 17414                           	opt callstack 0
 17415                           
 17416 ;; *************** function _fputs *****************
 17417 ;; Defined at:
 17418 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 17419 ;; Parameters:    Size  Location     Type
 17420 ;;  s               2   13[COMRAM] PTR const unsigned char 
 17421 ;;		 -> dbuf(80), 
 17422 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 17423 ;;		 -> NULL(0), 
 17424 ;; Auto vars:     Size  Location     Type
 17425 ;;  i               2   18[COMRAM] int 
 17426 ;;  c               1   17[COMRAM] unsigned char 
 17427 ;; Return value:  Size  Location     Type
 17428 ;;                  2   13[COMRAM] int 
 17429 ;; Registers used:
 17430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17431 ;; Tracked objects:
 17432 ;;		On entry : 0/0
 17433 ;;		On exit  : 0/0
 17434 ;;		Unchanged: 0/0
 17435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17440 ;;Total ram usage:        7 bytes
 17441 ;; Hardware stack levels used:    1
 17442 ;; Hardware stack levels required when called:    6
 17443 ;; This function calls:
 17444 ;;		_fputc
 17445 ;; This function is called by:
 17446 ;;		_pad
 17447 ;; This function uses a non-reentrant model
 17448 ;;
 17449                           
 17450                           	psect	text80
 17451  005230                     __ptext80:
 17452                           	opt callstack 0
 17453  005230                     _fputs:
 17454                           	opt callstack 17
 17455                           
 17456                           ;incstack = 0
 17457  005230  0E00               	movlw	0
 17458  005232  6E14               	movwf	fputs@i+1,c
 17459  005234  0E00               	movlw	0
 17460  005236  6E13               	movwf	fputs@i,c
 17461  005238  D00B               	goto	l6057
 17462  00523A                     l6053:
 17463  00523A  C012  F005         	movff	fputs@c,fputc@c
 17464  00523E  6A06               	clrf	fputc@c+1,c
 17465  005240  C010  F007         	movff	fputs@fp,fputc@fp
 17466  005244  C011  F008         	movff	fputs@fp+1,fputc@fp+1
 17467  005248  ECCB  F025         	call	_fputc	;wreg free
 17468  00524C  4A13               	infsnz	fputs@i,f,c
 17469  00524E  2A14               	incf	fputs@i+1,f,c
 17470  005250                     l6057:
 17471  005250  5013               	movf	fputs@i,w,c
 17472  005252  240E               	addwf	fputs@s,w,c
 17473  005254  6ED9               	movwf	fsr2l,c
 17474  005256  5014               	movf	fputs@i+1,w,c
 17475  005258  200F               	addwfc	fputs@s+1,w,c
 17476  00525A  6EDA               	movwf	fsr2h,c
 17477  00525C  50DF               	movf	indf2,w,c
 17478  00525E  6E12               	movwf	fputs@c,c
 17479  005260  5012               	movf	fputs@c,w,c
 17480  005262  B4D8               	btfsc	status,2,c
 17481  005264  0012               	return	
 17482  005266  D7E9               	goto	l6053
 17483  005268                     __end_of_fputs:
 17484                           	opt callstack 0
 17485                           
 17486 ;; *************** function _fputc *****************
 17487 ;; Defined at:
 17488 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;  c               2    4[COMRAM] int 
 17491 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
 17492 ;;		 -> NULL(0), 
 17493 ;; Auto vars:     Size  Location     Type
 17494 ;;		None
 17495 ;; Return value:  Size  Location     Type
 17496 ;;                  2    4[COMRAM] int 
 17497 ;; Registers used:
 17498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17499 ;; Tracked objects:
 17500 ;;		On entry : 0/0
 17501 ;;		On exit  : 0/0
 17502 ;;		Unchanged: 0/0
 17503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17506 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17507 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17508 ;;Total ram usage:        9 bytes
 17509 ;; Hardware stack levels used:    1
 17510 ;; Hardware stack levels required when called:    5
 17511 ;; This function calls:
 17512 ;;		_putch
 17513 ;; This function is called by:
 17514 ;;		_pad
 17515 ;;		_stoa
 17516 ;;		_vfpfcnvrt
 17517 ;;		_fputs
 17518 ;; This function uses a non-reentrant model
 17519 ;;
 17520                           
 17521                           	psect	text81
 17522  004B96                     __ptext81:
 17523                           	opt callstack 0
 17524  004B96                     _fputc:
 17525                           	opt callstack 17
 17526                           
 17527                           ;incstack = 0
 17528  004B96  5007               	movf	fputc@fp,w,c
 17529  004B98  1008               	iorwf	fputc@fp+1,w,c
 17530  004B9A  B4D8               	btfsc	status,2,c
 17531  004B9C  D004               	goto	u4790
 17532  004B9E  5007               	movf	fputc@fp,w,c
 17533  004BA0  1008               	iorwf	fputc@fp+1,w,c
 17534  004BA2  A4D8               	btfss	status,2,c
 17535  004BA4  D004               	goto	l6043
 17536  004BA6                     u4790:
 17537  004BA6  5005               	movf	fputc@c,w,c
 17538  004BA8  EC99  F02A         	call	_putch
 17539  004BAC  0012               	return	
 17540  004BAE                     l6043:
 17541  004BAE  EE20 F004          	lfsr	2,4
 17542  004BB2  5007               	movf	fputc@fp,w,c
 17543  004BB4  26D9               	addwf	fsr2l,f,c
 17544  004BB6  5008               	movf	fputc@fp+1,w,c
 17545  004BB8  22DA               	addwfc	fsr2h,f,c
 17546  004BBA  50DE               	movf	postinc2,w,c
 17547  004BBC  10DE               	iorwf	postinc2,w,c
 17548  004BBE  B4D8               	btfsc	status,2,c
 17549  004BC0  D016               	goto	u4810
 17550  004BC2  EE20 F004          	lfsr	2,4
 17551  004BC6  5007               	movf	fputc@fp,w,c
 17552  004BC8  26D9               	addwf	fsr2l,f,c
 17553  004BCA  5008               	movf	fputc@fp+1,w,c
 17554  004BCC  22DA               	addwfc	fsr2h,f,c
 17555  004BCE  EE10 F002          	lfsr	1,2
 17556  004BD2  5007               	movf	fputc@fp,w,c
 17557  004BD4  26E1               	addwf	fsr1l,f,c
 17558  004BD6  5008               	movf	fputc@fp+1,w,c
 17559  004BD8  22E2               	addwfc	fsr1h,f,c
 17560  004BDA  50DE               	movf	postinc2,w,c
 17561  004BDC  5CE6               	subwf	postinc1,w,c
 17562  004BDE  50E6               	movf	postinc1,w,c
 17563  004BE0  0A80               	xorlw	128
 17564  004BE2  6E0D               	movwf	(??_fputc+4)& (0+255),c
 17565  004BE4  50DE               	movf	postinc2,w,c
 17566  004BE6  0A80               	xorlw	128
 17567  004BE8  580D               	subwfb	(??_fputc+4)& (0+255),w,c
 17568  004BEA  B0D8               	btfsc	status,0,c
 17569  004BEC  0012               	return	
 17570  004BEE                     u4810:
 17571  004BEE  EE20 F002          	lfsr	2,2
 17572  004BF2  5007               	movf	fputc@fp,w,c
 17573  004BF4  26D9               	addwf	fsr2l,f,c
 17574  004BF6  5008               	movf	fputc@fp+1,w,c
 17575  004BF8  22DA               	addwfc	fsr2h,f,c
 17576  004BFA  2ADE               	incf	postinc2,f,c
 17577  004BFC  0E00               	movlw	0
 17578  004BFE  22DD               	addwfc	postdec2,f,c
 17579  004C00  0012               	return		;funcret
 17580  004C02                     __end_of_fputc:
 17581                           	opt callstack 0
 17582                           
 17583 ;; *************** function _putch *****************
 17584 ;; Defined at:
 17585 ;;		line 102 in file "lcd.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;  data            1    wreg     unsigned char 
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;  data            1    3[COMRAM] unsigned char 
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  1    wreg      void 
 17592 ;; Registers used:
 17593 ;;		wreg, status,2, status,0, cstack
 17594 ;; Tracked objects:
 17595 ;;		On entry : 0/0
 17596 ;;		On exit  : 0/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17603 ;;Total ram usage:        1 bytes
 17604 ;; Hardware stack levels used:    1
 17605 ;; Hardware stack levels required when called:    4
 17606 ;; This function calls:
 17607 ;;		_send_byte
 17608 ;; This function is called by:
 17609 ;;		_fputc
 17610 ;; This function uses a non-reentrant model
 17611 ;;
 17612                           
 17613                           	psect	text82
 17614  005532                     __ptext82:
 17615                           	opt callstack 0
 17616  005532                     _putch:
 17617                           	opt callstack 17
 17618                           
 17619                           ;incstack = 0
 17620                           ;putch@data stored from wreg
 17621  005532  6E04               	movwf	putch@data,c
 17622                           
 17623                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 17624  005534  848C               	bsf	3980,2,c	;volatile
 17625                           
 17626                           ;lcd.c: 104:     send_byte((unsigned char)data);
 17627  005536  5004               	movf	putch@data,w,c
 17628  005538  EC90  F02A         	call	_send_byte
 17629  00553C  0012               	return		;funcret
 17630  00553E                     __end_of_putch:
 17631                           	opt callstack 0
 17632                           
 17633 ;; *************** function _atoi *****************
 17634 ;; Defined at:
 17635 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;  s               2    7[COMRAM] PTR const unsigned char 
 17638 ;;		 -> STR_58(13), STR_57(18), STR_56(13), STR_55(13), 
 17639 ;;		 -> STR_54(17), STR_53(16), STR_52(16), STR_51(17), 
 17640 ;;		 -> STR_50(18), STR_49(13), STR_47(11), STR_46(13), 
 17641 ;;		 -> STR_45(14), STR_44(9), STR_43(15), STR_42(12), 
 17642 ;;		 -> STR_41(15), STR_40(17), STR_39(14), STR_38(16), 
 17643 ;;		 -> STR_37(14), STR_36(16), STR_35(17), STR_34(12), 
 17644 ;;		 -> STR_33(14), STR_32(15), STR_31(6), STR_30(15), 
 17645 ;;		 -> STR_29(15), STR_28(9), STR_27(14), STR_26(3), 
 17646 ;;		 -> STR_25(12), STR_24(10), STR_23(10), STR_22(5), 
 17647 ;;		 -> STR_21(12), STR_20(10), STR_19(10), STR_18(5), 
 17648 ;;		 -> STR_17(12), STR_16(10), STR_15(10), STR_14(13), 
 17649 ;;		 -> STR_13(12), STR_12(12), STR_11(12), STR_10(12), 
 17650 ;;		 -> STR_9(12), STR_8(3), STR_7(5), STR_6(5), 
 17651 ;;		 -> STR_5(10), STR_4(10), STR_3(5), STR_2(5), 
 17652 ;;		 -> STR_1(16), 
 17653 ;; Auto vars:     Size  Location     Type
 17654 ;;  n               2   20[COMRAM] int 
 17655 ;;  neg             2   13[COMRAM] int 
 17656 ;; Return value:  Size  Location     Type
 17657 ;;                  2    7[COMRAM] int 
 17658 ;; Registers used:
 17659 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17660 ;; Tracked objects:
 17661 ;;		On entry : 0/0
 17662 ;;		On exit  : 0/0
 17663 ;;		Unchanged: 0/0
 17664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17666 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17667 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17668 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17669 ;;Total ram usage:       15 bytes
 17670 ;; Hardware stack levels used:    1
 17671 ;; Hardware stack levels required when called:    2
 17672 ;; This function calls:
 17673 ;;		___wmul
 17674 ;;		_isdigit
 17675 ;;		_isspace
 17676 ;; This function is called by:
 17677 ;;		_vfpfcnvrt
 17678 ;; This function uses a non-reentrant model
 17679 ;;
 17680                           
 17681                           	psect	text83
 17682  0037C0                     __ptext83:
 17683                           	opt callstack 0
 17684  0037C0                     _atoi:
 17685                           	opt callstack 23
 17686                           
 17687                           ;incstack = 0
 17688  0037C0  0E00               	movlw	0
 17689  0037C2  6E16               	movwf	atoi@n+1,c
 17690  0037C4  0E00               	movlw	0
 17691  0037C6  6E15               	movwf	atoi@n,c
 17692  0037C8  0E00               	movlw	0
 17693  0037CA  6E0F               	movwf	atoi@neg+1,c
 17694  0037CC  0E00               	movlw	0
 17695  0037CE  6E0E               	movwf	atoi@neg,c
 17696  0037D0  D002               	goto	l7415
 17697  0037D2                     l7413:
 17698  0037D2  4A08               	infsnz	atoi@s,f,c
 17699  0037D4  2A09               	incf	atoi@s+1,f,c
 17700  0037D6                     l7415:
 17701  0037D6  0E01               	movlw	1
 17702  0037D8  6E14               	movwf	_atoi$2587,c
 17703  0037DA  C008  FFF6         	movff	atoi@s,tblptrl
 17704  0037DE  C009  FFF7         	movff	atoi@s+1,tblptrh
 17705  0037E2                     	if	0	;tblptru may be non-zero
 17706  0037E2                     	endif
 17707  0037E2                     	if	0	;tblptru may be non-zero
 17708  0037E2                     	endif
 17709  0037E2  0008               	tblrd		*
 17710  0037E4  50F5               	movf	tablat,w,c
 17711  0037E6  0A20               	xorlw	32
 17712  0037E8  B4D8               	btfsc	status,2,c
 17713  0037EA  D018               	goto	l7423
 17714  0037EC  0EF7               	movlw	247
 17715  0037EE  6E0A               	movwf	??_atoi& (0+255),c
 17716  0037F0  0EFF               	movlw	255
 17717  0037F2  6E0B               	movwf	(??_atoi+1)& (0+255),c
 17718  0037F4  C008  FFF6         	movff	atoi@s,tblptrl
 17719  0037F8  C009  FFF7         	movff	atoi@s+1,tblptrh
 17720  0037FC                     	if	0	;tblptru may be non-zero
 17721  0037FC                     	endif
 17722  0037FC                     	if	0	;tblptru may be non-zero
 17723  0037FC                     	endif
 17724  0037FC  0008               	tblrd		*
 17725  0037FE  50F5               	movf	tablat,w,c
 17726  003800  6E0C               	movwf	(??_atoi+2)& (0+255),c
 17727  003802  6A0D               	clrf	(??_atoi+3)& (0+255),c
 17728  003804  500A               	movf	??_atoi,w,c
 17729  003806  260C               	addwf	??_atoi+2,f,c
 17730  003808  500B               	movf	??_atoi+1,w,c
 17731  00380A  220D               	addwfc	??_atoi+3,f,c
 17732  00380C  500D               	movf	??_atoi+3,w,c
 17733  00380E  E104               	bnz	u7430
 17734  003810  0E05               	movlw	5
 17735  003812  5C0C               	subwf	??_atoi+2,w,c
 17736  003814  A0D8               	btfss	status,0,c
 17737  003816  D002               	goto	l7423
 17738  003818                     u7430:
 17739  003818  0E00               	movlw	0
 17740  00381A  6E14               	movwf	_atoi$2587,c
 17741  00381C                     l7423:
 17742  00381C  C014  F010         	movff	_atoi$2587,_atoi$2586
 17743  003820  6A11               	clrf	_atoi$2586+1,c
 17744  003822  5010               	movf	_atoi$2586,w,c
 17745  003824  1011               	iorwf	_atoi$2586+1,w,c
 17746  003826  B4D8               	btfsc	status,2,c
 17747  003828  D008               	goto	l7433
 17748  00382A  D7D3               	goto	l7413
 17749  00382C                     l7429:
 17750  00382C  0E00               	movlw	0
 17751  00382E  6E0F               	movwf	atoi@neg+1,c
 17752  003830  0E01               	movlw	1
 17753  003832  6E0E               	movwf	atoi@neg,c
 17754  003834                     l7431:
 17755  003834  4A08               	infsnz	atoi@s,f,c
 17756  003836  2A09               	incf	atoi@s+1,f,c
 17757  003838  D02E               	goto	l7439
 17758  00383A                     l7433:
 17759  00383A  C008  FFF6         	movff	atoi@s,tblptrl
 17760  00383E  C009  FFF7         	movff	atoi@s+1,tblptrh
 17761  003842                     	if	0	;tblptru may be non-zero
 17762  003842                     	endif
 17763  003842                     	if	0	;tblptru may be non-zero
 17764  003842                     	endif
 17765  003842  0008               	tblrd		*
 17766  003844  50F5               	movf	tablat,w,c
 17767  003846  6E0A               	movwf	??_atoi& (0+255),c
 17768  003848  6A0B               	clrf	(??_atoi+1)& (0+255),c
 17769                           
 17770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17771                           ; Switch size 1, requested type "simple"
 17772                           ; Number of cases is 1, Range of values is 0 to 0
 17773                           ; switch strategies available:
 17774                           ; Name         Instructions Cycles
 17775                           ; simple_byte            4     3 (average)
 17776                           ;	Chosen strategy is simple_byte
 17777  00384A  500B               	movf	??_atoi+1,w,c
 17778  00384C  0A00               	xorlw	0	; case 0
 17779  00384E  A4D8               	btfss	status,2,c
 17780  003850  D022               	goto	l7439
 17781                           
 17782                           ; Switch size 1, requested type "simple"
 17783                           ; Number of cases is 2, Range of values is 43 to 45
 17784                           ; switch strategies available:
 17785                           ; Name         Instructions Cycles
 17786                           ; simple_byte            7     4 (average)
 17787                           ;	Chosen strategy is simple_byte
 17788  003852  500A               	movf	??_atoi,w,c
 17789  003854  0A2B               	xorlw	43	; case 43
 17790  003856  B4D8               	btfsc	status,2,c
 17791  003858  D7ED               	goto	l7431
 17792  00385A  0A06               	xorlw	6	; case 45
 17793  00385C  B4D8               	btfsc	status,2,c
 17794  00385E  D7E6               	goto	l7429
 17795  003860  D01A               	goto	l7439
 17796  003862                     l7435:
 17797  003862  C015  F001         	movff	atoi@n,___wmul@multiplier
 17798  003866  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 17799  00386A  0E00               	movlw	0
 17800  00386C  6E04               	movwf	___wmul@multiplicand+1,c
 17801  00386E  0E0A               	movlw	10
 17802  003870  6E03               	movwf	___wmul@multiplicand,c
 17803  003872  EC4B  F02A         	call	___wmul	;wreg free
 17804  003876  C008  FFF6         	movff	atoi@s,tblptrl
 17805  00387A  C009  FFF7         	movff	atoi@s+1,tblptrh
 17806  00387E                     	if	0	;tblptru may be non-zero
 17807  00387E                     	endif
 17808  00387E                     	if	0	;tblptru may be non-zero
 17809  00387E                     	endif
 17810  00387E  0008               	tblrd		*
 17811  003880  50F5               	movf	tablat,w,c
 17812  003882  5E01               	subwf	?___wmul,f,c
 17813  003884  0E00               	movlw	0
 17814  003886  5A02               	subwfb	?___wmul+1,f,c
 17815  003888  0E30               	movlw	48
 17816  00388A  2401               	addwf	?___wmul,w,c
 17817  00388C  6E15               	movwf	atoi@n,c
 17818  00388E  0E00               	movlw	0
 17819  003890  2002               	addwfc	?___wmul+1,w,c
 17820  003892  6E16               	movwf	atoi@n+1,c
 17821  003894  D7CF               	goto	l7431
 17822  003896                     l7439:
 17823  003896  0ED0               	movlw	208
 17824  003898  6E0A               	movwf	??_atoi& (0+255),c
 17825  00389A  0EFF               	movlw	255
 17826  00389C  6E0B               	movwf	(??_atoi+1)& (0+255),c
 17827  00389E  C008  FFF6         	movff	atoi@s,tblptrl
 17828  0038A2  C009  FFF7         	movff	atoi@s+1,tblptrh
 17829  0038A6                     	if	0	;tblptru may be non-zero
 17830  0038A6                     	endif
 17831  0038A6                     	if	0	;tblptru may be non-zero
 17832  0038A6                     	endif
 17833  0038A6  0008               	tblrd		*
 17834  0038A8  50F5               	movf	tablat,w,c
 17835  0038AA  6E0C               	movwf	(??_atoi+2)& (0+255),c
 17836  0038AC  6A0D               	clrf	(??_atoi+3)& (0+255),c
 17837  0038AE  500A               	movf	??_atoi,w,c
 17838  0038B0  260C               	addwf	??_atoi+2,f,c
 17839  0038B2  500B               	movf	??_atoi+1,w,c
 17840  0038B4  220D               	addwfc	??_atoi+3,f,c
 17841  0038B6  500D               	movf	??_atoi+3,w,c
 17842  0038B8  E106               	bnz	u7450
 17843  0038BA  0E0A               	movlw	10
 17844  0038BC  5C0C               	subwf	??_atoi+2,w,c
 17845  0038BE  B0D8               	btfsc	status,0,c
 17846  0038C0  D002               	goto	u7450
 17847  0038C2  0E01               	movlw	1
 17848  0038C4  D001               	goto	u7460
 17849  0038C6                     u7450:
 17850  0038C6  0E00               	movlw	0
 17851  0038C8                     u7460:
 17852  0038C8  6E12               	movwf	_atoi$2588,c
 17853  0038CA  6A13               	clrf	_atoi$2588+1,c
 17854  0038CC  5012               	movf	_atoi$2588,w,c
 17855  0038CE  1013               	iorwf	_atoi$2588+1,w,c
 17856  0038D0  A4D8               	btfss	status,2,c
 17857  0038D2  D7C7               	goto	l7435
 17858  0038D4  500E               	movf	atoi@neg,w,c
 17859  0038D6  100F               	iorwf	atoi@neg+1,w,c
 17860  0038D8  A4D8               	btfss	status,2,c
 17861  0038DA  D00D               	goto	l2075
 17862  0038DC  C015  F00A         	movff	atoi@n,??_atoi
 17863  0038E0  C016  F00B         	movff	atoi@n+1,??_atoi+1
 17864  0038E4  1E0A               	comf	??_atoi,f,c
 17865  0038E6  1E0B               	comf	??_atoi+1,f,c
 17866  0038E8  4A0A               	infsnz	??_atoi,f,c
 17867  0038EA  2A0B               	incf	??_atoi+1,f,c
 17868  0038EC  C00A  F008         	movff	??_atoi,?_atoi
 17869  0038F0  C00B  F009         	movff	??_atoi+1,?_atoi+1
 17870  0038F4  0012               	return	
 17871  0038F6                     l2075:
 17872  0038F6  C015  F008         	movff	atoi@n,?_atoi
 17873  0038FA  C016  F009         	movff	atoi@n+1,?_atoi+1
 17874  0038FE  0012               	return		;funcret
 17875  003900                     __end_of_atoi:
 17876                           	opt callstack 0
 17877                           
 17878 ;; *************** function _isspace *****************
 17879 ;; Defined at:
 17880 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 17881 ;; Parameters:    Size  Location     Type
 17882 ;;  c               2    0[COMRAM] int 
 17883 ;; Auto vars:     Size  Location     Type
 17884 ;;		None
 17885 ;; Return value:  Size  Location     Type
 17886 ;;                  2    0[COMRAM] int 
 17887 ;; Registers used:
 17888 ;;		wreg, status,2, status,0
 17889 ;; Tracked objects:
 17890 ;;		On entry : 0/0
 17891 ;;		On exit  : 0/0
 17892 ;;		Unchanged: 0/0
 17893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17896 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17897 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17898 ;;Total ram usage:        7 bytes
 17899 ;; Hardware stack levels used:    1
 17900 ;; Hardware stack levels required when called:    1
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_atoi
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text84
 17909  0051F2                     __ptext84:
 17910                           	opt callstack 0
 17911  0051F2                     _isspace:
 17912                           	opt callstack 23
 17913                           
 17914                           ;incstack = 0
 17915  0051F2  0E01               	movlw	1
 17916  0051F4  6E07               	movwf	_isspace$2626,c
 17917  0051F6  0E20               	movlw	32
 17918  0051F8  1801               	xorwf	isspace@c,w,c
 17919  0051FA  1002               	iorwf	isspace@c+1,w,c
 17920  0051FC  B4D8               	btfsc	status,2,c
 17921  0051FE  D014               	goto	l6925
 17922  005200  0EF7               	movlw	247
 17923  005202  6E03               	movwf	??_isspace& (0+255),c
 17924  005204  0EFF               	movlw	255
 17925  005206  6E04               	movwf	(??_isspace+1)& (0+255),c
 17926  005208  C001  F005         	movff	isspace@c,??_isspace+2
 17927  00520C  C002  F006         	movff	isspace@c+1,??_isspace+3
 17928  005210  5003               	movf	??_isspace,w,c
 17929  005212  2605               	addwf	??_isspace+2,f,c
 17930  005214  5004               	movf	??_isspace+1,w,c
 17931  005216  2206               	addwfc	??_isspace+3,f,c
 17932  005218  5006               	movf	??_isspace+3,w,c
 17933  00521A  E104               	bnz	u6460
 17934  00521C  0E05               	movlw	5
 17935  00521E  5C05               	subwf	??_isspace+2,w,c
 17936  005220  A0D8               	btfss	status,0,c
 17937  005222  D002               	goto	l6925
 17938  005224                     u6460:
 17939  005224  0E00               	movlw	0
 17940  005226  6E07               	movwf	_isspace$2626,c
 17941  005228                     l6925:
 17942  005228  C007  F001         	movff	_isspace$2626,?_isspace
 17943  00522C  6A02               	clrf	?_isspace+1,c
 17944  00522E  0012               	return		;funcret
 17945  005230                     __end_of_isspace:
 17946                           	opt callstack 0
 17947                           
 17948 ;; *************** function _isdigit *****************
 17949 ;; Defined at:
 17950 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  c               2    0[COMRAM] int 
 17953 ;; Auto vars:     Size  Location     Type
 17954 ;;		None
 17955 ;; Return value:  Size  Location     Type
 17956 ;;                  2    0[COMRAM] int 
 17957 ;; Registers used:
 17958 ;;		wreg, status,2, status,0
 17959 ;; Tracked objects:
 17960 ;;		On entry : 0/0
 17961 ;;		On exit  : 0/0
 17962 ;;		Unchanged: 0/0
 17963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17967 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17968 ;;Total ram usage:        6 bytes
 17969 ;; Hardware stack levels used:    1
 17970 ;; Hardware stack levels required when called:    1
 17971 ;; This function calls:
 17972 ;;		Nothing
 17973 ;; This function is called by:
 17974 ;;		_vfpfcnvrt
 17975 ;;		_atoi
 17976 ;; This function uses a non-reentrant model
 17977 ;;
 17978                           
 17979                           	psect	text85
 17980  00535E                     __ptext85:
 17981                           	opt callstack 0
 17982  00535E                     _isdigit:
 17983                           	opt callstack 24
 17984                           
 17985                           ;incstack = 0
 17986  00535E  0ED0               	movlw	208
 17987  005360  6E03               	movwf	??_isdigit& (0+255),c
 17988  005362  0EFF               	movlw	255
 17989  005364  6E04               	movwf	(??_isdigit+1)& (0+255),c
 17990  005366  C001  F005         	movff	isdigit@c,??_isdigit+2
 17991  00536A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 17992  00536E  5003               	movf	??_isdigit,w,c
 17993  005370  2605               	addwf	??_isdigit+2,f,c
 17994  005372  5004               	movf	??_isdigit+1,w,c
 17995  005374  2206               	addwfc	??_isdigit+3,f,c
 17996  005376  5006               	movf	??_isdigit+3,w,c
 17997  005378  E106               	bnz	u5600
 17998  00537A  0E0A               	movlw	10
 17999  00537C  5C05               	subwf	??_isdigit+2,w,c
 18000  00537E  B0D8               	btfsc	status,0,c
 18001  005380  D002               	goto	u5600
 18002  005382  0E01               	movlw	1
 18003  005384  D001               	goto	u5610
 18004  005386                     u5600:
 18005  005386  0E00               	movlw	0
 18006  005388                     u5610:
 18007  005388  6E01               	movwf	?_isdigit,c
 18008  00538A  6A02               	clrf	?_isdigit+1,c
 18009  00538C  0012               	return		;funcret
 18010  00538E                     __end_of_isdigit:
 18011                           	opt callstack 0
 18012                           
 18013 ;; *************** function _initLCD *****************
 18014 ;; Defined at:
 18015 ;;		line 69 in file "lcd.c"
 18016 ;; Parameters:    Size  Location     Type
 18017 ;;		None
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;		None
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      void 
 18022 ;; Registers used:
 18023 ;;		wreg, status,2, status,0, cstack
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 0/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;Total ram usage:        1 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    5
 18036 ;; This function calls:
 18037 ;;		_lcdInst
 18038 ;;		_send_byte
 18039 ;;		_send_nibble
 18040 ;; This function is called by:
 18041 ;;		_initStartScreen
 18042 ;;		_initMenu
 18043 ;; This function uses a non-reentrant model
 18044 ;;
 18045                           
 18046                           	psect	text86
 18047  004C02                     __ptext86:
 18048                           	opt callstack 0
 18049  004C02                     _initLCD:
 18050                           	opt callstack 23
 18051                           
 18052                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 18053                           
 18054                           ;incstack = 0
 18055  004C02  0E31               	movlw	49
 18056  004C04  6E05               	movwf	??_initLCD& (0+255),c
 18057  004C06  0EB2               	movlw	178
 18058  004C08                     u9857:
 18059  004C08  2EE8               	decfsz	wreg,f,c
 18060  004C0A  D7FE               	bra	u9857
 18061  004C0C  2E05               	decfsz	??_initLCD& (0+255),f,c
 18062  004C0E  D7FC               	bra	u9857
 18063  004C10  D000               	nop2	
 18064                           
 18065                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 18066  004C12  948C               	bcf	3980,2,c	;volatile
 18067                           
 18068                           ;lcd.c: 74:     send_nibble(0b0011);
 18069  004C14  0E03               	movlw	3
 18070  004C16  EC7C  F02A         	call	_send_nibble
 18071                           
 18072                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 18073  004C1A  0E11               	movlw	17
 18074  004C1C  6E05               	movwf	??_initLCD& (0+255),c
 18075  004C1E  0E3A               	movlw	58
 18076  004C20                     u9867:
 18077  004C20  2EE8               	decfsz	wreg,f,c
 18078  004C22  D7FE               	bra	u9867
 18079  004C24  2E05               	decfsz	??_initLCD& (0+255),f,c
 18080  004C26  D7FC               	bra	u9867
 18081  004C28  D000               	nop2	
 18082                           
 18083                           ;lcd.c: 76:     send_nibble(0b0011);
 18084  004C2A  0E03               	movlw	3
 18085  004C2C  EC7C  F02A         	call	_send_nibble
 18086                           
 18087                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 18088  004C30  0E7D               	movlw	125
 18089  004C32                     u9877:
 18090  004C32  2EE8               	decfsz	wreg,f,c
 18091  004C34  D7FE               	bra	u9877
 18092                           
 18093                           ;lcd.c: 78:     send_byte(0b00110010);
 18094  004C36  0E32               	movlw	50
 18095  004C38  EC90  F02A         	call	_send_byte
 18096                           
 18097                           ;lcd.c: 80:     send_byte(0b00101000);
 18098  004C3C  0E28               	movlw	40
 18099  004C3E  EC90  F02A         	call	_send_byte
 18100                           
 18101                           ;lcd.c: 81:     send_byte(0b00001000);
 18102  004C42  0E08               	movlw	8
 18103  004C44  EC90  F02A         	call	_send_byte
 18104                           
 18105                           ;lcd.c: 82:     send_byte(0b00000001);
 18106  004C48  0E01               	movlw	1
 18107  004C4A  EC90  F02A         	call	_send_byte
 18108                           
 18109                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 18110  004C4E  0E11               	movlw	17
 18111  004C50  6E05               	movwf	??_initLCD& (0+255),c
 18112  004C52  0E3A               	movlw	58
 18113  004C54                     u9887:
 18114  004C54  2EE8               	decfsz	wreg,f,c
 18115  004C56  D7FE               	bra	u9887
 18116  004C58  2E05               	decfsz	??_initLCD& (0+255),f,c
 18117  004C5A  D7FC               	bra	u9887
 18118  004C5C  D000               	nop2	
 18119                           
 18120                           ;lcd.c: 84:     send_byte(0b00000110);
 18121  004C5E  0E06               	movlw	6
 18122  004C60  EC90  F02A         	call	_send_byte
 18123                           
 18124                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 18125  004C64  0E0F               	movlw	15
 18126  004C66  EC9F  F02A         	call	_lcdInst
 18127  004C6A  0012               	return		;funcret
 18128  004C6C                     __end_of_initLCD:
 18129                           	opt callstack 0
 18130                           
 18131 ;; *************** function _lcdInst *****************
 18132 ;; Defined at:
 18133 ;;		line 64 in file "lcd.c"
 18134 ;; Parameters:    Size  Location     Type
 18135 ;;  data            1    wreg     unsigned char 
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;  data            1    3[COMRAM] unsigned char 
 18138 ;; Return value:  Size  Location     Type
 18139 ;;                  1    wreg      void 
 18140 ;; Registers used:
 18141 ;;		wreg, status,2, status,0, cstack
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18151 ;;Total ram usage:        1 bytes
 18152 ;; Hardware stack levels used:    1
 18153 ;; Hardware stack levels required when called:    4
 18154 ;; This function calls:
 18155 ;;		_send_byte
 18156 ;; This function is called by:
 18157 ;;		_detectCanister
 18158 ;;		_testDrive
 18159 ;;		_testDrive2
 18160 ;;		_initLCD
 18161 ;;		_initStartScreen
 18162 ;;		_initMenu
 18163 ;;		_buildEndScreen
 18164 ;;		_buildEndScreenMenu
 18165 ;;		_buildTimeScreen
 18166 ;;		_ballsGivenScreen
 18167 ;;		_numCanistersScreen
 18168 ;;		_canisterSelectScreen
 18169 ;;		_canisterDataScreen
 18170 ;;		_sensorData
 18171 ;;		_dispSensors
 18172 ;;		_dispSensors2
 18173 ;;		_printState
 18174 ;;		_adjustCanister
 18175 ;;		_testShaftEncoder
 18176 ;;		_lcd_shift_cursor
 18177 ;;		_lcd_shift_display
 18178 ;;		_printI2CData
 18179 ;;		_detectCanisterScreen
 18180 ;;		_senseTest
 18181 ;; This function uses a non-reentrant model
 18182 ;;
 18183                           
 18184                           	psect	text87
 18185  00553E                     __ptext87:
 18186                           	opt callstack 0
 18187  00553E                     _lcdInst:
 18188                           	opt callstack 24
 18189                           
 18190                           ;incstack = 0
 18191                           ;lcdInst@data stored from wreg
 18192  00553E  6E04               	movwf	lcdInst@data,c
 18193                           
 18194                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 18195  005540  948C               	bcf	3980,2,c	;volatile
 18196                           
 18197                           ;lcd.c: 66:     send_byte(data);
 18198  005542  5004               	movf	lcdInst@data,w,c
 18199  005544  EC90  F02A         	call	_send_byte
 18200  005548  0012               	return		;funcret
 18201  00554A                     __end_of_lcdInst:
 18202                           	opt callstack 0
 18203                           
 18204 ;; *************** function _send_byte *****************
 18205 ;; Defined at:
 18206 ;;		line 55 in file "lcd.c"
 18207 ;; Parameters:    Size  Location     Type
 18208 ;;  data            1    wreg     unsigned char 
 18209 ;; Auto vars:     Size  Location     Type
 18210 ;;  data            1    2[COMRAM] unsigned char 
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  1    wreg      void 
 18213 ;; Registers used:
 18214 ;;		wreg, status,2, status,0, cstack
 18215 ;; Tracked objects:
 18216 ;;		On entry : 0/0
 18217 ;;		On exit  : 0/0
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18224 ;;Total ram usage:        1 bytes
 18225 ;; Hardware stack levels used:    1
 18226 ;; Hardware stack levels required when called:    3
 18227 ;; This function calls:
 18228 ;;		_send_nibble
 18229 ;; This function is called by:
 18230 ;;		_lcdInst
 18231 ;;		_initLCD
 18232 ;;		_putch
 18233 ;; This function uses a non-reentrant model
 18234 ;;
 18235                           
 18236                           	psect	text88
 18237  005520                     __ptext88:
 18238                           	opt callstack 0
 18239  005520                     _send_byte:
 18240                           	opt callstack 17
 18241                           
 18242                           ;incstack = 0
 18243                           ;send_byte@data stored from wreg
 18244  005520  6E03               	movwf	send_byte@data,c
 18245                           
 18246                           ;lcd.c: 57:     send_nibble(data >> 4);
 18247  005522  3803               	swapf	send_byte@data,w,c
 18248  005524  0B0F               	andlw	15
 18249  005526  EC7C  F02A         	call	_send_nibble
 18250                           
 18251                           ;lcd.c: 60:     send_nibble(data);
 18252  00552A  5003               	movf	send_byte@data,w,c
 18253  00552C  EC7C  F02A         	call	_send_nibble
 18254  005530  0012               	return		;funcret
 18255  005532                     __end_of_send_byte:
 18256                           	opt callstack 0
 18257                           
 18258 ;; *************** function _send_nibble *****************
 18259 ;; Defined at:
 18260 ;;		line 44 in file "lcd.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  data            1    wreg     unsigned char 
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;  data            1    1[COMRAM] unsigned char 
 18265 ;; Return value:  Size  Location     Type
 18266 ;;                  1    wreg      void 
 18267 ;; Registers used:
 18268 ;;		wreg, status,2, status,0, cstack
 18269 ;; Tracked objects:
 18270 ;;		On entry : 0/0
 18271 ;;		On exit  : 0/0
 18272 ;;		Unchanged: 0/0
 18273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18277 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18278 ;;Total ram usage:        1 bytes
 18279 ;; Hardware stack levels used:    1
 18280 ;; Hardware stack levels required when called:    2
 18281 ;; This function calls:
 18282 ;;		_pulse_e
 18283 ;; This function is called by:
 18284 ;;		_send_byte
 18285 ;;		_initLCD
 18286 ;; This function uses a non-reentrant model
 18287 ;;
 18288                           
 18289                           	psect	text89
 18290  0054F8                     __ptext89:
 18291                           	opt callstack 0
 18292  0054F8                     _send_nibble:
 18293                           	opt callstack 17
 18294                           
 18295                           ;incstack = 0
 18296                           ;send_nibble@data stored from wreg
 18297  0054F8  6E02               	movwf	send_nibble@data,c
 18298                           
 18299                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 18300  0054FA  508C               	movf	3980,w,c	;volatile
 18301  0054FC  0B0F               	andlw	15
 18302  0054FE  6E8C               	movwf	3980,c	;volatile
 18303                           
 18304                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 18305  005500  3802               	swapf	send_nibble@data,w,c
 18306  005502  0BF0               	andlw	240
 18307  005504  108C               	iorwf	3980,w,c	;volatile
 18308  005506  6E8C               	movwf	3980,c	;volatile
 18309                           
 18310                           ;lcd.c: 48:     pulse_e();
 18311  005508  EC22  F02A         	call	_pulse_e	;wreg free
 18312  00550C  0012               	return		;funcret
 18313  00550E                     __end_of_send_nibble:
 18314                           	opt callstack 0
 18315                           
 18316 ;; *************** function _pulse_e *****************
 18317 ;; Defined at:
 18318 ;;		line 28 in file "lcd.c"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;		None
 18321 ;; Auto vars:     Size  Location     Type
 18322 ;;  interruptSta    1    0[COMRAM] unsigned char 
 18323 ;; Return value:  Size  Location     Type
 18324 ;;                  1    wreg      void 
 18325 ;; Registers used:
 18326 ;;		wreg
 18327 ;; Tracked objects:
 18328 ;;		On entry : 0/0
 18329 ;;		On exit  : 0/0
 18330 ;;		Unchanged: 0/0
 18331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18336 ;;Total ram usage:        1 bytes
 18337 ;; Hardware stack levels used:    1
 18338 ;; Hardware stack levels required when called:    1
 18339 ;; This function calls:
 18340 ;;		Nothing
 18341 ;; This function is called by:
 18342 ;;		_send_nibble
 18343 ;; This function uses a non-reentrant model
 18344 ;;
 18345                           
 18346                           	psect	text90
 18347  005444                     __ptext90:
 18348                           	opt callstack 0
 18349  005444                     _pulse_e:
 18350                           	opt callstack 17
 18351                           
 18352                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 18353                           
 18354                           ;incstack = 0
 18355  005444  0E00               	movlw	0
 18356  005446  BEF2               	btfsc	4082,7,c	;volatile
 18357  005448  0E01               	movlw	1
 18358  00544A  6E01               	movwf	pulse_e@interruptState,c
 18359                           
 18360                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 18361  00544C  9EF2               	bcf	4082,7,c	;volatile
 18362                           
 18363                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 18364  00544E  868C               	bsf	3980,3,c	;volatile
 18365                           
 18366                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 18367  005450  0E14               	movlw	20
 18368  005452                     u9897:
 18369  005452  2EE8               	decfsz	wreg,f,c
 18370  005454  D7FE               	bra	u9897
 18371  005456  D000               	nop2	
 18372                           
 18373                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 18374  005458  968C               	bcf	3980,3,c	;volatile
 18375                           
 18376                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 18377  00545A  0E53               	movlw	83
 18378  00545C                     u9907:
 18379  00545C  2EE8               	decfsz	wreg,f,c
 18380  00545E  D7FE               	bra	u9907
 18381  005460  F000               	nop	
 18382                           
 18383                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 18384  005462  B001               	btfsc	pulse_e@interruptState,0,c
 18385  005464  D002               	bra	u4775
 18386  005466  9EF2               	bcf	4082,7,c	;volatile
 18387  005468  D001               	bra	u4776
 18388  00546A                     u4775:
 18389  00546A  8EF2               	bsf	4082,7,c	;volatile
 18390  00546C                     u4776:
 18391  00546C  0012               	return		;funcret
 18392  00546E                     __end_of_pulse_e:
 18393                           	opt callstack 0
 18394                           
 18395 ;; *************** function _initCanisters *****************
 18396 ;; Defined at:
 18397 ;;		line 17 in file "data.c"
 18398 ;; Parameters:    Size  Location     Type
 18399 ;;		None
 18400 ;; Auto vars:     Size  Location     Type
 18401 ;;  i               2    6[COMRAM] int 
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  1    wreg      void 
 18404 ;; Registers used:
 18405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 0/0
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18415 ;;Total ram usage:        2 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; Hardware stack levels required when called:    2
 18418 ;; This function calls:
 18419 ;;		___wmul
 18420 ;; This function is called by:
 18421 ;;		_main
 18422 ;; This function uses a non-reentrant model
 18423 ;;
 18424                           
 18425                           	psect	text91
 18426  003C62                     __ptext91:
 18427                           	opt callstack 0
 18428  003C62                     _initCanisters:
 18429                           	opt callstack 28
 18430                           
 18431                           ;data.c: 19:     int i = 0;
 18432                           
 18433                           ;incstack = 0
 18434  003C62  0E00               	movlw	0
 18435  003C64  6E08               	movwf	initCanisters@i+1,c
 18436  003C66  0E00               	movlw	0
 18437  003C68  6E07               	movwf	initCanisters@i,c
 18438                           
 18439                           ;data.c: 20:     for (i = 0; i < 10; i++)
 18440  003C6A  0E00               	movlw	0
 18441  003C6C  6E08               	movwf	initCanisters@i+1,c
 18442  003C6E  0E00               	movlw	0
 18443  003C70  6E07               	movwf	initCanisters@i,c
 18444  003C72                     l8735:
 18445                           
 18446                           ;data.c: 21:     {;data.c: 22:         (cans[i]).id = 0;
 18447  003C72  C007  F001         	movff	initCanisters@i,___wmul@multiplier
 18448  003C76  C008  F002         	movff	initCanisters@i+1,___wmul@multiplier+1
 18449  003C7A  0E00               	movlw	0
 18450  003C7C  6E04               	movwf	___wmul@multiplicand+1,c
 18451  003C7E  0E09               	movlw	9
 18452  003C80  6E03               	movwf	___wmul@multiplicand,c
 18453  003C82  EC4B  F02A         	call	___wmul	;wreg free
 18454  003C86  0E00               	movlw	low _cans
 18455  003C88  2401               	addwf	?___wmul,w,c
 18456  003C8A  6ED9               	movwf	fsr2l,c
 18457  003C8C  0E01               	movlw	high _cans
 18458  003C8E  2002               	addwfc	?___wmul+1,w,c
 18459  003C90  6EDA               	movwf	fsr2h,c
 18460  003C92  0E00               	movlw	0
 18461  003C94  6EDE               	movwf	postinc2,c
 18462  003C96  0E00               	movlw	0
 18463  003C98  6EDD               	movwf	postdec2,c
 18464                           
 18465                           ;data.c: 23:         (cans[i]).facing = Left;
 18466  003C9A  C007  F001         	movff	initCanisters@i,___wmul@multiplier
 18467  003C9E  C008  F002         	movff	initCanisters@i+1,___wmul@multiplier+1
 18468  003CA2  0E00               	movlw	0
 18469  003CA4  6E04               	movwf	___wmul@multiplicand+1,c
 18470  003CA6  0E09               	movlw	9
 18471  003CA8  6E03               	movwf	___wmul@multiplicand,c
 18472  003CAA  EC4B  F02A         	call	___wmul	;wreg free
 18473  003CAE  0E02               	movlw	low (_cans+2)
 18474  003CB0  2401               	addwf	?___wmul,w,c
 18475  003CB2  6ED9               	movwf	fsr2l,c
 18476  003CB4  0E01               	movlw	high (_cans+2)
 18477  003CB6  2002               	addwfc	?___wmul+1,w,c
 18478  003CB8  6EDA               	movwf	fsr2h,c
 18479  003CBA  0E00               	movlw	0
 18480  003CBC  6EDF               	movwf	indf2,c
 18481                           
 18482                           ;data.c: 24:         (cans[i]).distance = 0;
 18483  003CBE  C007  F001         	movff	initCanisters@i,___wmul@multiplier
 18484  003CC2  C008  F002         	movff	initCanisters@i+1,___wmul@multiplier+1
 18485  003CC6  0E00               	movlw	0
 18486  003CC8  6E04               	movwf	___wmul@multiplicand+1,c
 18487  003CCA  0E09               	movlw	9
 18488  003CCC  6E03               	movwf	___wmul@multiplicand,c
 18489  003CCE  EC4B  F02A         	call	___wmul	;wreg free
 18490  003CD2  0E03               	movlw	low (_cans+3)
 18491  003CD4  2401               	addwf	?___wmul,w,c
 18492  003CD6  6ED9               	movwf	fsr2l,c
 18493  003CD8  0E01               	movlw	high (_cans+3)
 18494  003CDA  2002               	addwfc	?___wmul+1,w,c
 18495  003CDC  6EDA               	movwf	fsr2h,c
 18496  003CDE  0E00               	movlw	0
 18497  003CE0  6EDE               	movwf	postinc2,c
 18498  003CE2  0E00               	movlw	0
 18499  003CE4  6EDE               	movwf	postinc2,c
 18500  003CE6  0E00               	movlw	0
 18501  003CE8  6EDE               	movwf	postinc2,c
 18502  003CEA  0E00               	movlw	0
 18503  003CEC  6EDD               	movwf	postdec2,c
 18504                           
 18505                           ;data.c: 25:         (cans[i]).status = 0;
 18506  003CEE  C007  F001         	movff	initCanisters@i,___wmul@multiplier
 18507  003CF2  C008  F002         	movff	initCanisters@i+1,___wmul@multiplier+1
 18508  003CF6  0E00               	movlw	0
 18509  003CF8  6E04               	movwf	___wmul@multiplicand+1,c
 18510  003CFA  0E09               	movlw	9
 18511  003CFC  6E03               	movwf	___wmul@multiplicand,c
 18512  003CFE  EC4B  F02A         	call	___wmul	;wreg free
 18513  003D02  0E07               	movlw	low (_cans+7)
 18514  003D04  2401               	addwf	?___wmul,w,c
 18515  003D06  6ED9               	movwf	fsr2l,c
 18516  003D08  0E01               	movlw	high (_cans+7)
 18517  003D0A  2002               	addwfc	?___wmul+1,w,c
 18518  003D0C  6EDA               	movwf	fsr2h,c
 18519  003D0E  0E00               	movlw	0
 18520  003D10  6EDF               	movwf	indf2,c
 18521                           
 18522                           ;data.c: 26:         (cans[i]).ballDeposited = 0;
 18523  003D12  C007  F001         	movff	initCanisters@i,___wmul@multiplier
 18524  003D16  C008  F002         	movff	initCanisters@i+1,___wmul@multiplier+1
 18525  003D1A  0E00               	movlw	0
 18526  003D1C  6E04               	movwf	___wmul@multiplicand+1,c
 18527  003D1E  0E09               	movlw	9
 18528  003D20  6E03               	movwf	___wmul@multiplicand,c
 18529  003D22  EC4B  F02A         	call	___wmul	;wreg free
 18530  003D26  0E08               	movlw	low (_cans+8)
 18531  003D28  2401               	addwf	?___wmul,w,c
 18532  003D2A  6ED9               	movwf	fsr2l,c
 18533  003D2C  0E01               	movlw	high (_cans+8)
 18534  003D2E  2002               	addwfc	?___wmul+1,w,c
 18535  003D30  6EDA               	movwf	fsr2h,c
 18536  003D32  0E00               	movlw	0
 18537  003D34  6EDF               	movwf	indf2,c
 18538                           
 18539                           ;data.c: 27:     }
 18540  003D36  4A07               	infsnz	initCanisters@i,f,c
 18541  003D38  2A08               	incf	initCanisters@i+1,f,c
 18542  003D3A  BE08               	btfsc	initCanisters@i+1,7,c
 18543  003D3C  D79A               	goto	l8735
 18544  003D3E  5008               	movf	initCanisters@i+1,w,c
 18545  003D40  E104               	bnz	u8960
 18546  003D42  0E0A               	movlw	10
 18547  003D44  5C07               	subwf	initCanisters@i,w,c
 18548  003D46  A0D8               	btfss	status,0,c
 18549  003D48  D794               	goto	l8735
 18550  003D4A                     u8960:
 18551                           
 18552                           ;data.c: 28:     numCans = 0;
 18553  003D4A  0E00               	movlw	0
 18554  003D4C  0101               	movlb	1	; () banked
 18555  003D4E  6F8D               	movwf	(_numCans+1)& (0+255),b	;volatile
 18556  003D50  0E00               	movlw	0
 18557  003D52  6F8C               	movwf	_numCans& (0+255),b	;volatile
 18558                           
 18559                           ; BSR set to: 1
 18560  003D54  0012               	return		;funcret
 18561  003D56                     __end_of_initCanisters:
 18562                           	opt callstack 0
 18563                           
 18564 ;; *************** function ___wmul *****************
 18565 ;; Defined at:
 18566 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;  multiplier      2    0[COMRAM] unsigned int 
 18569 ;;  multiplicand    2    2[COMRAM] unsigned int 
 18570 ;; Auto vars:     Size  Location     Type
 18571 ;;  product         2    4[COMRAM] unsigned int 
 18572 ;; Return value:  Size  Location     Type
 18573 ;;                  2    0[COMRAM] unsigned int 
 18574 ;; Registers used:
 18575 ;;		wreg, status,2, status,0, prodl, prodh
 18576 ;; Tracked objects:
 18577 ;;		On entry : 0/0
 18578 ;;		On exit  : 0/0
 18579 ;;		Unchanged: 0/0
 18580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18585 ;;Total ram usage:        6 bytes
 18586 ;; Hardware stack levels used:    1
 18587 ;; Hardware stack levels required when called:    1
 18588 ;; This function calls:
 18589 ;;		Nothing
 18590 ;; This function is called by:
 18591 ;;		_initCanisters
 18592 ;;		_storeCanisterData
 18593 ;;		_updateCanData
 18594 ;;		_getData
 18595 ;;		_atoi
 18596 ;;		_glcdDrawRectangle
 18597 ;; This function uses a non-reentrant model
 18598 ;;
 18599                           
 18600                           	psect	text92
 18601  005496                     __ptext92:
 18602                           	opt callstack 0
 18603  005496                     ___wmul:
 18604                           	opt callstack 23
 18605                           
 18606                           ; BSR set to: 1
 18607                           ;incstack = 0
 18608  005496  5001               	movf	___wmul@multiplier,w,c
 18609  005498  0203               	mulwf	___wmul@multiplicand,c
 18610  00549A  CFF3 F005          	movff	prodl,___wmul@product
 18611  00549E  CFF4 F006          	movff	prodh,___wmul@product+1
 18612  0054A2  5001               	movf	___wmul@multiplier,w,c
 18613  0054A4  0204               	mulwf	___wmul@multiplicand+1,c
 18614  0054A6  50F3               	movf	prodl,w,c
 18615  0054A8  2606               	addwf	___wmul@product+1,f,c
 18616  0054AA  5002               	movf	___wmul@multiplier+1,w,c
 18617  0054AC  0203               	mulwf	___wmul@multiplicand,c
 18618  0054AE  50F3               	movf	prodl,w,c
 18619  0054B0  2606               	addwf	___wmul@product+1,f,c
 18620  0054B2  C005  F001         	movff	___wmul@product,?___wmul
 18621  0054B6  C006  F002         	movff	___wmul@product+1,?___wmul+1
 18622  0054BA  0012               	return		;funcret
 18623  0054BC                     __end_of___wmul:
 18624                           	opt callstack 0
 18625                           
 18626 ;; *************** function _interruptHandler *****************
 18627 ;; Defined at:
 18628 ;;		line 403 in file "menu.c"
 18629 ;; Parameters:    Size  Location     Type
 18630 ;;		None
 18631 ;; Auto vars:     Size  Location     Type
 18632 ;;		None
 18633 ;; Return value:  Size  Location     Type
 18634 ;;                  1    wreg      void 
 18635 ;; Registers used:
 18636 ;;		wreg, status,2, status,0
 18637 ;; Tracked objects:
 18638 ;;		On entry : 0/0
 18639 ;;		On exit  : 0/0
 18640 ;;		Unchanged: 0/0
 18641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18646 ;;Total ram usage:        0 bytes
 18647 ;; Hardware stack levels used:    1
 18648 ;; This function calls:
 18649 ;;		Nothing
 18650 ;; This function is called by:
 18651 ;;		Interrupt level 2
 18652 ;; This function uses a non-reentrant model
 18653 ;;
 18654                           
 18655                           	psect	intcode
 18656  000008                     __pintcode:
 18657                           	opt callstack 0
 18658  000008                     _interruptHandler:
 18659                           	opt callstack 15
 18660                           
 18661                           ;incstack = 0
 18662  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18663  00000A  ED0C  F02A         	call	int_func,f	;refresh shadow registers
 18664                           
 18665                           	psect	intcode_body
 18666  005418                     __pintcode_body:
 18667                           	opt callstack 15
 18668  005418                     int_func:
 18669                           	opt callstack 15
 18670  005418  0006               	pop		; remove dummy address from shadow register refresh
 18671                           
 18672                           ;menu.c: 406:     if (INT1F)
 18673  00541A  A0F0               	btfss	4080,0,c	;volatile
 18674  00541C  D007               	goto	i2l9347
 18675                           
 18676                           ;menu.c: 407:     {;menu.c: 408:         INT1F = 0;
 18677  00541E  90F0               	bcf	4080,0,c	;volatile
 18678                           
 18679                           ;menu.c: 409:         key_pressed = 1;
 18680  005420  0E01               	movlw	1
 18681  005422  0101               	movlb	1	; () banked
 18682  005424  6F92               	movwf	_key_pressed& (0+255),b	;volatile
 18683                           
 18684                           ; BSR set to: 1
 18685                           ;menu.c: 410:         key = (PORTB >> 4);
 18686  005426  3881               	swapf	3969,w,c	;volatile
 18687  005428  0B0F               	andlw	15
 18688  00542A  6F91               	movwf	_key& (0+255),b	;volatile
 18689  00542C                     i2l9347:
 18690                           
 18691                           ;menu.c: 420:     if (TMR0IF)
 18692  00542C  A4F2               	btfss	4082,2,c	;volatile
 18693  00542E  D008               	goto	i2l580
 18694                           
 18695                           ;menu.c: 421:     {;menu.c: 422:         timeCount++;
 18696  005430  0E01               	movlw	1
 18697  005432  0101               	movlb	1	; () banked
 18698  005434  2762               	addwf	_timeCount& (0+255),f,b	;volatile
 18699  005436  0E00               	movlw	0
 18700  005438  2363               	addwfc	(_timeCount+1)& (0+255),f,b	;volatile
 18701  00543A  2364               	addwfc	(_timeCount+2)& (0+255),f,b	;volatile
 18702  00543C  2365               	addwfc	(_timeCount+3)& (0+255),f,b	;volatile
 18703                           
 18704                           ; BSR set to: 1
 18705                           ;menu.c: 423:         TMR0IF = 0;
 18706  00543E  94F2               	bcf	4082,2,c	;volatile
 18707  005440                     i2l580:
 18708  005440  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18709  005442  0011               	retfie		f
 18710  005444                     __end_of_interruptHandler:
 18711                           	opt callstack 0
 18712                           
 18713                           	psect	rparam
 18714  0000                     
 18715                           	psect	temp
 18716  00007F                     btemp:
 18717                           	opt callstack 0
 18718  00007F                     	ds	1
 18719  0000                     int$flags	set	btemp
 18720  0000                     wtemp8	set	btemp+1
 18721  0000                     ttemp5	set	btemp+1
 18722  0000                     ttemp6	set	btemp+4
 18723  0000                     ttemp7	set	btemp+8
 18724                           tosu	equ	0xFFF
 18725                           tosh	equ	0xFFE
 18726                           tosl	equ	0xFFD
 18727                           stkptr	equ	0xFFC
 18728                           pclatu	equ	0xFFB
 18729                           pclath	equ	0xFFA
 18730                           pcl	equ	0xFF9
 18731                           tblptru	equ	0xFF8
 18732                           tblptrh	equ	0xFF7
 18733                           tblptrl	equ	0xFF6
 18734                           tablat	equ	0xFF5
 18735                           prodh	equ	0xFF4
 18736                           prodl	equ	0xFF3
 18737                           indf0	equ	0xFEF
 18738                           postinc0	equ	0xFEE
 18739                           postdec0	equ	0xFED
 18740                           preinc0	equ	0xFEC
 18741                           plusw0	equ	0xFEB
 18742                           fsr0h	equ	0xFEA
 18743                           fsr0l	equ	0xFE9
 18744                           wreg	equ	0xFE8
 18745                           indf1	equ	0xFE7
 18746                           postinc1	equ	0xFE6
 18747                           postdec1	equ	0xFE5
 18748                           preinc1	equ	0xFE4
 18749                           plusw1	equ	0xFE3
 18750                           fsr1h	equ	0xFE2
 18751                           fsr1l	equ	0xFE1
 18752                           bsr	equ	0xFE0
 18753                           indf2	equ	0xFDF
 18754                           postinc2	equ	0xFDE
 18755                           postdec2	equ	0xFDD
 18756                           preinc2	equ	0xFDC
 18757                           plusw2	equ	0xFDB
 18758                           fsr2h	equ	0xFDA
 18759                           fsr2l	equ	0xFD9
 18760                           status	equ	0xFD8


Data Sizes:
    Strings     555
    Constant    89
    Data        11
    BSS         256
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128    128     128
    BANK1           256     66     253
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_69(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_69(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), STR_48(CODE[6]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), STR_48(CODE[6]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_64(CODE[4]), STR_63(CODE[4]), STR_60(CODE[4]), STR_59(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_64(CODE[4]), STR_63(CODE[4]), STR_60(CODE[4]), STR_59(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[13]), STR_57(CODE[18]), STR_56(CODE[13]), STR_55(CODE[13]), 
		 -> STR_54(CODE[17]), STR_53(CODE[16]), STR_52(CODE[16]), STR_51(CODE[17]), 
		 -> STR_50(CODE[18]), STR_49(CODE[13]), STR_47(CODE[11]), STR_46(CODE[13]), 
		 -> STR_45(CODE[14]), STR_44(CODE[9]), STR_43(CODE[15]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[16]), 
		 -> STR_37(CODE[14]), STR_36(CODE[16]), STR_35(CODE[17]), STR_34(CODE[12]), 
		 -> STR_33(CODE[14]), STR_32(CODE[15]), STR_31(CODE[6]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[9]), STR_27(CODE[14]), STR_26(CODE[3]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[10]), STR_22(CODE[5]), 
		 -> STR_21(CODE[12]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[5]), 
		 -> STR_17(CODE[12]), STR_16(CODE[10]), STR_15(CODE[10]), STR_14(CODE[13]), 
		 -> STR_13(CODE[12]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2639_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[13]), STR_57(CODE[18]), STR_56(CODE[13]), STR_55(CODE[13]), 
		 -> STR_54(CODE[17]), STR_53(CODE[16]), STR_52(CODE[16]), STR_51(CODE[17]), 
		 -> STR_50(CODE[18]), STR_49(CODE[13]), STR_47(CODE[11]), STR_46(CODE[13]), 
		 -> STR_45(CODE[14]), STR_44(CODE[9]), STR_43(CODE[15]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[16]), 
		 -> STR_37(CODE[14]), STR_36(CODE[16]), STR_35(CODE[17]), STR_34(CODE[12]), 
		 -> STR_33(CODE[14]), STR_32(CODE[15]), STR_31(CODE[6]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[9]), STR_27(CODE[14]), STR_26(CODE[3]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[10]), STR_22(CODE[5]), 
		 -> STR_21(CODE[12]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[5]), 
		 -> STR_17(CODE[12]), STR_16(CODE[10]), STR_15(CODE[10]), STR_14(CODE[13]), 
		 -> STR_13(CODE[12]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[13]), STR_57(CODE[18]), STR_56(CODE[13]), STR_55(CODE[13]), 
		 -> STR_54(CODE[17]), STR_53(CODE[16]), STR_52(CODE[16]), STR_51(CODE[17]), 
		 -> STR_50(CODE[18]), STR_49(CODE[13]), STR_47(CODE[11]), STR_46(CODE[13]), 
		 -> STR_45(CODE[14]), STR_44(CODE[9]), STR_43(CODE[15]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[16]), 
		 -> STR_37(CODE[14]), STR_36(CODE[16]), STR_35(CODE[17]), STR_34(CODE[12]), 
		 -> STR_33(CODE[14]), STR_32(CODE[15]), STR_31(CODE[6]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[9]), STR_27(CODE[14]), STR_26(CODE[3]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[10]), STR_22(CODE[5]), 
		 -> STR_21(CODE[12]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[5]), 
		 -> STR_17(CODE[12]), STR_16(CODE[10]), STR_15(CODE[10]), STR_14(CODE[13]), 
		 -> STR_13(CODE[12]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[13]), STR_57(CODE[18]), STR_56(CODE[13]), STR_55(CODE[13]), 
		 -> STR_54(CODE[17]), STR_53(CODE[16]), STR_52(CODE[16]), STR_51(CODE[17]), 
		 -> STR_50(CODE[18]), STR_49(CODE[13]), STR_47(CODE[11]), STR_46(CODE[13]), 
		 -> STR_45(CODE[14]), STR_44(CODE[9]), STR_43(CODE[15]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[16]), 
		 -> STR_37(CODE[14]), STR_36(CODE[16]), STR_35(CODE[17]), STR_34(CODE[12]), 
		 -> STR_33(CODE[14]), STR_32(CODE[15]), STR_31(CODE[6]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[9]), STR_27(CODE[14]), STR_26(CODE[3]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[10]), STR_22(CODE[5]), 
		 -> STR_21(CODE[12]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[5]), 
		 -> STR_17(CODE[12]), STR_16(CODE[10]), STR_15(CODE[10]), STR_14(CODE[13]), 
		 -> STR_13(CODE[12]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_48(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_48(CODE[6]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_48(CODE[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    UART._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK1[16]), 

    UART._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    UART	PTR volatile struct . size(2) Largest target is 14
		 -> uart(BANK1[12]), 

    S24$_dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK1[16]), 

    uart._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK1[16]), 

    S24$_dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__getRTCTime	PTR unsigned char  size(2) Largest target is 7
		 -> getRTCTime@time(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _testTurn->_sensorData
    _updateCanData->___wmul
    _readFrontSensor2->_I2C_Master_Init
    _initMenu->_ballsGivenScreen
    _initMenu->_buildEndScreen
    _initMenu->_buildEndScreenMenu
    _initMenu->_buildTimeScreen
    _initMenu->_canisterDataScreen
    _initMenu->_canisterSelectScreen
    _initMenu->_numCanistersScreen
    _getDistance->___flmul
    _storeCanisterData->___wmul
    _setRight->_sensorData
    _setForward->_sensorData
    _setBackward->_sensorData
    _shaftEncoderCount2->_I2C_Master_Init
    _shaftEncoderCount->_I2C_Master_Init
    _releaseDoor->_releaseDoor1
    _releaseDoor->_releaseDoor2
    _releaseDoor2->___flge
    _releaseDoor1->___flge
    _readHallEffect->_I2C_Master_Init
    _getTime->___flmul
    ___xxtofl->_distFromCanister
    _readDigitalSensor->_I2C_Master_Init
    _getData->___wmul
    _distFromCanister->_I2C_Master_Init
    _avoidCan->_readFrontSensor
    _readFrontSensor->_I2C_Master_Init
    _readRemoteStart->_I2C_Master_Init
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->_getDistance
    ___flmul->___xxtofl
    ___flge->___flsub
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _initCanisters->___wmul

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_initStartScreen
    _testTurn->_sensorData
    _testDrive2->_detectCanisterTurned
    _detectCanisterTurned->_setBackward
    _detectCanisterTurned->_setForward
    _detectCanisterTurned->_setRight
    _testDrive->_detectCanister
    _initMenu->_buildTimeScreen
    _numCanistersScreen->_printf
    _canisterSelectScreen->_printf
    _canisterDataScreen->_printf
    _buildTimeScreen->_printf
    _buildEndScreenMenu->_printf
    _buildEndScreen->_printf
    _ballsGivenScreen->_printf
    _detectCanister->_setBackward
    _detectCanister->_setForward
    _detectCanister->_setRight
    _setRight->_sensorData
    _setForward->_sensorData
    _setBackward->_sensorData
    _sensorData->_printf
    _initStartScreen->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_testDrive2
    _testDrive2->_detectCanisterTurned
    _detectCanisterTurned->_setBackward
    _detectCanisterTurned->_setForward
    _detectCanisterTurned->_setRight
    _testDrive->_detectCanister
    _initMenu->_canisterDataScreen
    _detectCanister->_setBackward
    _detectCanister->_setForward
    _detectCanister->_setRight

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 2949999
                                             60 BANK1      6     6      0
                           ___xxtofl
                   _distFromCanister
                    _getNumCanisters
                      _initCanisters
                           _initMenu
                    _initStartScreen
                          _moveRobot
                         _setForward
                          _testDrive
                         _testDrive2
                           _testTurn
 ---------------------------------------------------------------------------------
 (1) _testTurn                                            10     8      2   82572
                                            122 BANK0      4     2      2
                                              0 BANK1      6     6      0
                          _moveRobot
                         _sensorData
                  _shaftEncoderCount
                 _shaftEncoderCount2
 ---------------------------------------------------------------------------------
 (1) _testDrive2                                          15    15      0 1025603
                                             45 BANK1     15    15      0
                            ___fladd
                             ___flge
                            ___flsub
                           _avoidCan
               _detectCanisterTurned
                        _getDistance
                           _initMenu
                            _lcdInst
                          _moveRobot
                             _printf
                  _readDigitalSensor
                    _readFrontSensor
                   _readFrontSensor2
                    _readRemoteStart
                  _shaftEncoderCount
                 _shaftEncoderCount2
 ---------------------------------------------------------------------------------
 (2) _detectCanisterTurned                                49    49      0  327032
                                            126 BANK0      2     2      0
                                              6 BANK1     39    39      0
                             ___flge
                            ___flsub
                   _distFromCanister
                            _getData
                   _increaseNumBalls
                          _moveRobot
                  _readDigitalSensor
                        _releaseDoor
                        _setBackward
                         _setForward
                           _setRight
                      _updateCanData
 ---------------------------------------------------------------------------------
 (3) _updateCanData                                        4     0      4    3031
                                              6 COMRAM     4     0      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _testDrive                                           15    15      0 1099661
                                             44 BANK1     15    15      0
                            ___fladd
                             ___flge
                            ___flsub
                           _avoidCan
                     _detectCanister
                        _getDistance
                           _initMenu
                            _lcdInst
                          _moveRobot
                             _printf
                  _readDigitalSensor
                    _readFrontSensor
                   _readFrontSensor2
                    _readRemoteStart
                  _shaftEncoderCount
                 _shaftEncoderCount2
 ---------------------------------------------------------------------------------
 (2) _readFrontSensor2                                     9     7      2    4820
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _initMenu                                            11    11      0  565488
                                            122 BANK0      2     2      0
                                             15 BANK1      9     9      0
                   _ballsGivenScreen
                     _buildEndScreen
                 _buildEndScreenMenu
                    _buildTimeScreen
                 _canisterDataScreen
               _canisterSelectScreen
                   _getNumBallsGiven
                    _getNumCanisters
                            _initLCD
                            _lcdInst
                 _numCanistersScreen
                             _printf
 ---------------------------------------------------------------------------------
 (3) _numCanistersScreen                                   3     1      2   69103
                                            125 COMRAM     1     1      0
                                            118 BANK0      2     0      2
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _getNumBallsGiven                                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _canisterSelectScreen                                 1     1      0   69005
                                            125 COMRAM     1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _canisterDataScreen                                  18    16      2   72837
                                            125 COMRAM     1     1      0
                                            118 BANK0      2     0      2
                                              0 BANK1     15    15      0
                            ___fltol
                            _getData
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _buildTimeScreen                                      5     5      0   74894
                                            125 COMRAM     1     1      0
                                            118 BANK0      4     4      0
                            ___flmul
                           ___xxtofl
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _buildEndScreenMenu                                   1     1      0   69005
                                            125 COMRAM     1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _buildEndScreen                                      14    14      0   72147
                                            125 COMRAM     1     1      0
                                              0 BANK1     13    13      0
                            _getData
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _ballsGivenScreen                                     3     1      2   69103
                                            125 COMRAM     1     1      0
                                            118 BANK0      2     0      2
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getDistance                                          6     2      4   10709
                                             69 COMRAM     6     2      4
                            ___flmul
                           ___xxtofl
                  _shaftEncoderCount
 ---------------------------------------------------------------------------------
 (2) _detectCanister                                      48    48      0  401090
                                            126 BANK0      2     2      0
                                              6 BANK1     38    38      0
                            ___fladd
                             ___flge
                            ___flsub
                   _distFromCanister
                            _getData
                    _getNumCanisters
                   _increaseNumBalls
                            _lcdInst
                          _moveRobot
                             _printf
                  _readDigitalSensor
                        _releaseDoor
                        _setBackward
                         _setForward
                           _setRight
                  _storeCanisterData
 ---------------------------------------------------------------------------------
 (3) _storeCanisterData                                    9     3      6    4304
                                              6 COMRAM     9     3      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _setRight                                            10     8      2   82572
                                            122 BANK0      4     2      2
                                              0 BANK1      6     6      0
                          _moveRobot
                         _sensorData
                  _shaftEncoderCount
                 _shaftEncoderCount2
 ---------------------------------------------------------------------------------
 (3) _setForward                                          10     8      2   82648
                                            122 BANK0      4     2      2
                                              0 BANK1      6     6      0
                          _moveRobot
                         _sensorData
                  _shaftEncoderCount
                 _shaftEncoderCount2
 ---------------------------------------------------------------------------------
 (3) _setBackward                                         10     8      2   82572
                                            122 BANK0      4     2      2
                                              0 BANK1      6     6      0
                          _moveRobot
                         _sensorData
                  _shaftEncoderCount
                 _shaftEncoderCount2
 ---------------------------------------------------------------------------------
 (2) _shaftEncoderCount2                                   9     7      2    4820
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _shaftEncoderCount                                    9     7      2    4820
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sensorData                                           5     1      4   69961
                                            125 COMRAM     1     1      0
                                            118 BANK0      4     0      4
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _releaseDoor                                          0     0      0   47107
                     _readHallEffect
                       _releaseDoor1
                       _releaseDoor2
 ---------------------------------------------------------------------------------
 (4) _releaseDoor2                                         4     4      0   21166
                                            111 COMRAM     4     4      0
                             ___flge
                            ___flsub
                            _getTime
                     _readHallEffect
 ---------------------------------------------------------------------------------
 (4) _releaseDoor1                                         4     4      0   21121
                                            111 COMRAM     4     4      0
                             ___flge
                            ___flsub
                            _getTime
                     _readHallEffect
 ---------------------------------------------------------------------------------
 (5) _readHallEffect                                       9     7      2    4820
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _getTime                                              8     4      4    5889
                                             69 COMRAM     8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1842
                                             30 COMRAM    14    10      4
                   _distFromCanister (ARG)
 ---------------------------------------------------------------------------------
 (2) _readDigitalSensor                                    9     7      2    4820
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _increaseNumBalls                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getNumCanisters                                      2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _getData                                              9     0      9    3117
                                              6 COMRAM     9     0      9
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _distFromCanister                                     9     7      2    7644
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _avoidCan                                             2     2      0    7502
                                             30 COMRAM     2     2      0
                          _moveRobot
                    _readFrontSensor
 ---------------------------------------------------------------------------------
 (2) _readFrontSensor                                      9     7      2    4820
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _moveRobot                                            4     2      2    2682
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initStartScreen                                     10    10      0   78982
                                            118 BANK0     10    10      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
                    _readRemoteStart
 ---------------------------------------------------------------------------------
 (2) _readRemoteStart                                      9     7      2    4820
                                             21 COMRAM     9     7      2
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    3366
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      8     4      4    1248
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _printf                                              12     4      8   68894
                                            106 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   64492
                                            123 COMRAM     2     2      0
                                            100 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           49    43      6   64086
                                             56 BANK0     44    38      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    6861
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2184
                                             13 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   33867
                                            111 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    7905
                                             91 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                        _getDistance (ARG)
                            _getTime (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3782
                                             75 COMRAM    16     8      8
                        _getDistance (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4024
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    2462
                                             99 COMRAM    12     4      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                            _getTime (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2463
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6576
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    5147
                                             31 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4927
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1736
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1335
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    3708
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (11) _send_byte                                           1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (12) _send_nibble                                         1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (13) _pulse_e                                             1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCanisters                                        2     2      0    2872
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    2715
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _interruptHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___xxtofl
     _distFromCanister (ARG)
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _distFromCanister
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _getNumCanisters
   _initCanisters
     ___wmul
   _initMenu
     _ballsGivenScreen
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _buildEndScreen
       _getData
         ___wmul
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _buildEndScreenMenu
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _buildTimeScreen
       ___flmul
         ___xxtofl (ARG)
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___xxtofl
         _distFromCanister (ARG)
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _canisterDataScreen
       ___fltol
       _getData
         ___wmul
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _canisterSelectScreen
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _getNumBallsGiven
     _getNumCanisters
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _numCanistersScreen
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flsub (ARG)
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flneg
             ___flsub
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initStartScreen
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flsub (ARG)
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flneg
             ___flsub
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _readRemoteStart
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _moveRobot
   _setForward
     _moveRobot
     _sensorData
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _shaftEncoderCount
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _shaftEncoderCount2
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _testDrive
     ___fladd
       _getDistance (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___flsub (ARG)
         ___fladd
           _getDistance (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _shaftEncoderCount
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___flmul (ARG)
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         _getDistance (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _shaftEncoderCount
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _getTime (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
       _getTime (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     ___flsub
       ___fladd
         _getDistance (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _shaftEncoderCount
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___flmul (ARG)
         ___xxtofl (ARG)
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       _getDistance (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _getTime (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _avoidCan
       _moveRobot
       _readFrontSensor
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _detectCanister
       ___fladd
         _getDistance (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _shaftEncoderCount
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___flsub (ARG)
           ___fladd
             _getDistance (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _shaftEncoderCount
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___flmul (ARG)
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           _getDistance (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _shaftEncoderCount
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _getTime (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
         _getTime (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
       ___flsub
         ___fladd
           _getDistance (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _shaftEncoderCount
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___flmul (ARG)
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         _getDistance (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _shaftEncoderCount
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _getTime (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
       _distFromCanister
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _getData
         ___wmul
       _getNumCanisters
       _increaseNumBalls
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _moveRobot
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
       _readDigitalSensor
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _releaseDoor
         _readHallEffect
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _releaseDoor1
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flsub (ARG)
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           ___flsub
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             _getDistance (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _shaftEncoderCount
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           _getTime
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           _readHallEffect
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _releaseDoor2
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flsub (ARG)
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           ___flsub
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             _getDistance (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _shaftEncoderCount
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           _getTime
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           _readHallEffect
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       _setBackward
         _moveRobot
         _sensorData
           _lcdInst
             _send_byte
               _send_nibble
                 _pulse_e
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___fldiv
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flsub (ARG)
                       ___fladd
                         _getDistance (ARG)
                           ___flmul
                             ___xxtofl (ARG)
                               _distFromCanister (ARG)
                                 _I2C_Master_Init
                                   ___lldiv
                                 _I2C_Master_Read
                                   _I2C_Master_Wait
                                 _I2C_Master_Start
                                   _I2C_Master_Wait
                                 _I2C_Master_Stop
                                   _I2C_Master_Wait
                                 _I2C_Master_Write
                                   _I2C_Master_Wait
                           ___xxtofl
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                           _shaftEncoderCount
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _getTime (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flneg
                   ___flsub
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _toupper
                     _islower
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _shaftEncoderCount2
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _setForward
         _moveRobot
         _sensorData
           _lcdInst
             _send_byte
               _send_nibble
                 _pulse_e
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___fldiv
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flsub (ARG)
                       ___fladd
                         _getDistance (ARG)
                           ___flmul
                             ___xxtofl (ARG)
                               _distFromCanister (ARG)
                                 _I2C_Master_Init
                                   ___lldiv
                                 _I2C_Master_Read
                                   _I2C_Master_Wait
                                 _I2C_Master_Start
                                   _I2C_Master_Wait
                                 _I2C_Master_Stop
                                   _I2C_Master_Wait
                                 _I2C_Master_Write
                                   _I2C_Master_Wait
                           ___xxtofl
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                           _shaftEncoderCount
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _getTime (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flneg
                   ___flsub
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _toupper
                     _islower
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _shaftEncoderCount2
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _setRight
         _moveRobot
         _sensorData
           _lcdInst
             _send_byte
               _send_nibble
                 _pulse_e
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___fldiv
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flsub (ARG)
                       ___fladd
                         _getDistance (ARG)
                           ___flmul
                             ___xxtofl (ARG)
                               _distFromCanister (ARG)
                                 _I2C_Master_Init
                                   ___lldiv
                                 _I2C_Master_Read
                                   _I2C_Master_Wait
                                 _I2C_Master_Start
                                   _I2C_Master_Wait
                                 _I2C_Master_Stop
                                   _I2C_Master_Wait
                                 _I2C_Master_Write
                                   _I2C_Master_Wait
                           ___xxtofl
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                           _shaftEncoderCount
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _getTime (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flneg
                   ___flsub
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _toupper
                     _islower
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _shaftEncoderCount2
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _storeCanisterData
         ___wmul
     _getDistance
       ___flmul
         ___xxtofl (ARG)
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___xxtofl
         _distFromCanister (ARG)
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _shaftEncoderCount
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _initMenu
       _ballsGivenScreen
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _buildEndScreen
         _getData
           ___wmul
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _buildEndScreenMenu
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _buildTimeScreen
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _canisterDataScreen
         ___fltol
         _getData
           ___wmul
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _canisterSelectScreen
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _getNumBallsGiven
       _getNumCanisters
       _initLCD
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _send_byte
           _send_nibble
             _pulse_e
         _send_nibble
           _pulse_e
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _numCanistersScreen
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _moveRobot
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flsub (ARG)
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flneg
             ___flsub
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _readDigitalSensor
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readFrontSensor
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readFrontSensor2
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readRemoteStart
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _shaftEncoderCount
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _shaftEncoderCount2
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _testDrive2
     ___fladd
       _getDistance (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___flsub (ARG)
         ___fladd
           _getDistance (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _shaftEncoderCount
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___flmul (ARG)
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         _getDistance (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _shaftEncoderCount
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _getTime (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
       _getTime (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     ___flsub
       ___fladd
         _getDistance (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _shaftEncoderCount
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___flmul (ARG)
         ___xxtofl (ARG)
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       _getDistance (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _getTime (ARG)
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _avoidCan
       _moveRobot
       _readFrontSensor
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _detectCanisterTurned
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___flsub (ARG)
           ___fladd
             _getDistance (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _shaftEncoderCount
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___flmul (ARG)
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           _getDistance (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _shaftEncoderCount
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _getTime (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
         _getTime (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
       ___flsub
         ___fladd
           _getDistance (ARG)
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _shaftEncoderCount
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___flmul (ARG)
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         _getDistance (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
           _shaftEncoderCount
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _getTime (ARG)
           ___flmul
             ___xxtofl (ARG)
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           ___xxtofl
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
       _distFromCanister
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _getData
         ___wmul
       _increaseNumBalls
       _moveRobot
       _readDigitalSensor
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _releaseDoor
         _readHallEffect
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _releaseDoor1
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flsub (ARG)
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           ___flsub
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             _getDistance (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _shaftEncoderCount
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           _getTime
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           _readHallEffect
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _releaseDoor2
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flsub (ARG)
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           ___flsub
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             _getDistance (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _shaftEncoderCount
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
             _getTime (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___xxtofl
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
           _getTime
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___xxtofl
               _distFromCanister (ARG)
                 _I2C_Master_Init
                   ___lldiv
                 _I2C_Master_Read
                   _I2C_Master_Wait
                 _I2C_Master_Start
                   _I2C_Master_Wait
                 _I2C_Master_Stop
                   _I2C_Master_Wait
                 _I2C_Master_Write
                   _I2C_Master_Wait
           _readHallEffect
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       _setBackward
         _moveRobot
         _sensorData
           _lcdInst
             _send_byte
               _send_nibble
                 _pulse_e
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___fldiv
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flsub (ARG)
                       ___fladd
                         _getDistance (ARG)
                           ___flmul
                             ___xxtofl (ARG)
                               _distFromCanister (ARG)
                                 _I2C_Master_Init
                                   ___lldiv
                                 _I2C_Master_Read
                                   _I2C_Master_Wait
                                 _I2C_Master_Start
                                   _I2C_Master_Wait
                                 _I2C_Master_Stop
                                   _I2C_Master_Wait
                                 _I2C_Master_Write
                                   _I2C_Master_Wait
                           ___xxtofl
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                           _shaftEncoderCount
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _getTime (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flneg
                   ___flsub
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _toupper
                     _islower
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _shaftEncoderCount2
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _setForward
         _moveRobot
         _sensorData
           _lcdInst
             _send_byte
               _send_nibble
                 _pulse_e
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___fldiv
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flsub (ARG)
                       ___fladd
                         _getDistance (ARG)
                           ___flmul
                             ___xxtofl (ARG)
                               _distFromCanister (ARG)
                                 _I2C_Master_Init
                                   ___lldiv
                                 _I2C_Master_Read
                                   _I2C_Master_Wait
                                 _I2C_Master_Start
                                   _I2C_Master_Wait
                                 _I2C_Master_Stop
                                   _I2C_Master_Wait
                                 _I2C_Master_Write
                                   _I2C_Master_Wait
                           ___xxtofl
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                           _shaftEncoderCount
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _getTime (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flneg
                   ___flsub
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _toupper
                     _islower
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _shaftEncoderCount2
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _setRight
         _moveRobot
         _sensorData
           _lcdInst
             _send_byte
               _send_nibble
                 _pulse_e
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___fldiv
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flsub (ARG)
                       ___fladd
                         _getDistance (ARG)
                           ___flmul
                             ___xxtofl (ARG)
                               _distFromCanister (ARG)
                                 _I2C_Master_Init
                                   ___lldiv
                                 _I2C_Master_Read
                                   _I2C_Master_Wait
                                 _I2C_Master_Start
                                   _I2C_Master_Wait
                                 _I2C_Master_Stop
                                   _I2C_Master_Wait
                                 _I2C_Master_Write
                                   _I2C_Master_Wait
                           ___xxtofl
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                           _shaftEncoderCount
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _getTime (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flneg
                   ___flsub
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                     _fputs
                       _fputc
                         _putch
                           _send_byte
                             _send_nibble
                               _pulse_e
                     _strlen
                   _toupper
                     _islower
         _shaftEncoderCount
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _shaftEncoderCount2
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _updateCanData
         ___wmul
     _getDistance
       ___flmul
         ___xxtofl (ARG)
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
       ___xxtofl
         _distFromCanister (ARG)
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _shaftEncoderCount
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _initMenu
       _ballsGivenScreen
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _buildEndScreen
         _getData
           ___wmul
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _buildEndScreenMenu
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _buildTimeScreen
         ___flmul
           ___xxtofl (ARG)
             _distFromCanister (ARG)
               _I2C_Master_Init
                 ___lldiv
               _I2C_Master_Read
                 _I2C_Master_Wait
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
         ___xxtofl
           _distFromCanister (ARG)
             _I2C_Master_Init
               ___lldiv
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _canisterDataScreen
         ___fltol
         _getData
           ___wmul
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _canisterSelectScreen
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _getNumBallsGiven
       _getNumCanisters
       _initLCD
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _send_byte
           _send_nibble
             _pulse_e
         _send_nibble
           _pulse_e
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _numCanistersScreen
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flsub (ARG)
                     ___fladd
                       _getDistance (ARG)
                         ___flmul
                           ___xxtofl (ARG)
                             _distFromCanister (ARG)
                               _I2C_Master_Init
                                 ___lldiv
                               _I2C_Master_Read
                                 _I2C_Master_Wait
                               _I2C_Master_Start
                                 _I2C_Master_Wait
                               _I2C_Master_Stop
                                 _I2C_Master_Wait
                               _I2C_Master_Write
                                 _I2C_Master_Wait
                         ___xxtofl
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                         _shaftEncoderCount
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _getTime (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flneg
                 ___flsub
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _moveRobot
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flsub (ARG)
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___flmul
               ___xxtofl (ARG)
                 _distFromCanister (ARG)
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
             ___flneg
             ___flsub
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               _getDistance (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _shaftEncoderCount
                   _I2C_Master_Init
                     ___lldiv
                   _I2C_Master_Read
                     _I2C_Master_Wait
                   _I2C_Master_Start
                     _I2C_Master_Wait
                   _I2C_Master_Stop
                     _I2C_Master_Wait
                   _I2C_Master_Write
                     _I2C_Master_Wait
               _getTime (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___xxtofl
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _readDigitalSensor
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readFrontSensor
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readFrontSensor2
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readRemoteStart
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _shaftEncoderCount
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _shaftEncoderCount2
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _testTurn
     _moveRobot
     _sensorData
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flsub (ARG)
                   ___fladd
                     _getDistance (ARG)
                       ___flmul
                         ___xxtofl (ARG)
                           _distFromCanister (ARG)
                             _I2C_Master_Init
                               ___lldiv
                             _I2C_Master_Read
                               _I2C_Master_Wait
                             _I2C_Master_Start
                               _I2C_Master_Wait
                             _I2C_Master_Stop
                               _I2C_Master_Wait
                             _I2C_Master_Write
                               _I2C_Master_Wait
                       ___xxtofl
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                       _shaftEncoderCount
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _getTime (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___flmul
                 ___xxtofl (ARG)
                   _distFromCanister (ARG)
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
               ___flneg
               ___flsub
                 ___fladd
                   _getDistance (ARG)
                     ___flmul
                       ___xxtofl (ARG)
                         _distFromCanister (ARG)
                           _I2C_Master_Init
                             ___lldiv
                           _I2C_Master_Read
                             _I2C_Master_Wait
                           _I2C_Master_Start
                             _I2C_Master_Wait
                           _I2C_Master_Stop
                             _I2C_Master_Wait
                           _I2C_Master_Write
                             _I2C_Master_Wait
                     ___xxtofl
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                     _shaftEncoderCount
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                 _getDistance (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
                   _shaftEncoderCount
                     _I2C_Master_Init
                       ___lldiv
                     _I2C_Master_Read
                       _I2C_Master_Wait
                     _I2C_Master_Start
                       _I2C_Master_Wait
                     _I2C_Master_Stop
                       _I2C_Master_Wait
                     _I2C_Master_Write
                       _I2C_Master_Wait
                 _getTime (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       _distFromCanister (ARG)
                         _I2C_Master_Init
                           ___lldiv
                         _I2C_Master_Read
                           _I2C_Master_Wait
                         _I2C_Master_Start
                           _I2C_Master_Wait
                         _I2C_Master_Stop
                           _I2C_Master_Wait
                         _I2C_Master_Write
                           _I2C_Master_Wait
                   ___xxtofl
                     _distFromCanister (ARG)
                       _I2C_Master_Init
                         ___lldiv
                       _I2C_Master_Read
                         _I2C_Master_Wait
                       _I2C_Master_Start
                         _I2C_Master_Wait
                       _I2C_Master_Stop
                         _I2C_Master_Wait
                       _I2C_Master_Write
                         _I2C_Master_Wait
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _shaftEncoderCount
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _shaftEncoderCount2
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      50       9       31.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     42      FD       7       98.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     80      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24B      34        0.0%
DATA                 0      0     24B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 10 12:51:19 2019

                      ___fldiv@aexp 0019                        ___fldiv@bexp 0018  
                   ?_buildEndScreen 0001                        ___fldiv@sign 0011  
                       _SSPSTATbits 000FC7                         __CFG_CPD$ON 000000  
                      ___awdiv@sign 0006             __end_of_buildTimeScreen 48D8  
               ___wmul@multiplicand 0003                         __CFG_BORV$3 000000  
                  _distFromCanister 3900                        __CFG_CP0$OFF 000000  
                      __CFG_CP1$OFF 000000                        __CFG_CP2$OFF 000000  
                      __CFG_CP3$OFF 000000                         __CFG_OSC$HS 000000  
                               l170 1ADC                                 l187 2154  
                               l198 23F2                                 l631 48E8  
                               l632 48F0                                 l633 48F8  
                               l634 4900                                 l650 3EF8  
                               l635 4908                                 l636 4910  
                               l629 48E0                                 l717 39C2  
                               l646 3E44                                 l663 305C  
                               l655 2F86                        __CFG_CPB$OFF 000000  
                               _RED FD9A                                 _PSA 007EAB  
                               _abs 529C                                 _pad 429E  
                               _key 0191                        ___awmod@sign 0006  
                               prod 000FF3                                 wreg 000FE8  
                      ___flmul@aexp 003E                        ___flmul@bexp 003F  
                    ?_updateCanData 0007                        ___flmul@sign 0039  
                      ___flmul@temp 0044                        ___flmul@prod 0040  
                      __CFG_LVP$OFF 000000                        ___fltol@exp1 000A  
                   _readFrontSensor 4630                        __CFG_WDT$OFF 000000  
                              l1112 42CE                                l1130 29B2  
                              ?_abs 0013                                l1132 29BA  
                              l1212 066A                                l2020 373C  
                              l2013 36BE                                l1250 35A2  
                              l2044 52C4                                l1271 2BAC  
                              l2170 503A                                l1186 0384  
                              l2075 38F6                                l1269 2BA4  
                              l1623 3F92                                l2087 2ECE  
                              l2183 5118                                l1385 4846  
                              l1903 1DF2                                l1912 1E58  
                              l1913 1E54                                l1942 25D0  
                              l7001 2B5C                                l1953 263E  
                              l6121 1C76                                l6113 1C56  
                              l1954 263A                                l6043 4BAE  
                              l1972 15C8                                l6053 523A  
                              l6061 51B8                                l1981 17E0  
                              l6109 1C52                                l1982 17DC  
                              ?_pad 0015                                l6063 51BC  
                              l6215 1E16                                l6231 1E36  
                              l6207 1DE2                                l1887 1D20  
                              l6151 1CB2                                l7103 038E  
                              l7015 005C                                l1888 1CFE  
                              l6057 5250                                l6401 3420  
                              l6225 1E2C                                l6313 4046  
                              l7201 0738                                l6251 1E9E  
                              l6163 1D0C                                l6323 4090  
                              l7027 008E                                l7035 00A4  
                              l8011 4ACC                                l6413 346E  
                              l1989 1866                                l6165 1D10  
                              l6085 1C0A                                l6317 4050  
                              l7117 03E0                                l7109 0396  
                              l7045 0110                                l7053 0158  
                              l6415 3482                                l6407 3448  
                              l6263 1ECC                                l7135 0426  
                              l7119 03E4                                l7063 01C4  
                              l7071 020C                                l7047 0128  
                              l7311 3566                                l6433 351A  
                              l6425 34DE                                l6601 26DC  
                              l6505 24CA                                l6265 1ECE  
                              l6089 1C0E                                l6361 2F2E  
                              l6329 4F16                                l7209 0758  
                              l7217 077C                                l7225 0814  
                              l7161 05CC                                l7145 0460  
                              l7153 0556                                l7129 0402  
                              l7081 028A                                l7065 01DC  
                              l7321 35BA                                l8025 49E4  
                              l8033 4A1C                                l6283 42B8  
                              l6603 26DE                                l6531 2530  
                              l6523 2518                                l6259 1EC4  
                              l6187 1D66                                l6179 1D44  
                              l6347 2E30                                l7139 0436  
                              l7083 02D8                                l8043 54F2  
                              l8019 4B04                                l8203 3C0A  
                              l7413 37D2                                l6293 42F0  
                              l6429 34F4                                l6461 3AF2  
                              l6453 3A96                                l6445 3A58  
                              l6541 2580                                l6517 2502  
                              l6509 24CE                                l6189 1D6A  
                              l6197 1D7C                                l6365 2F5C  
                              l6357 2EF0                                l7253 08AA  
                              l7237 085C                                l7077 0250  
                              l7325 35D2                                l8205 3C18  
                              l7431 3834                                l7423 381C  
                              l7415 37D6                                l6287 42C6  
                              l6455 3AAA                                l6623 1574  
                              l7255 08B4                                l7175 0662  
                              l7167 060A                                l7087 0314  
                              l7343 3662                                l7335 362E  
                              l7407 2D8E                                l7511 0A74  
                              l7503 0A64                                l8311 281C  
                              l8303 27FC                                l7433 383A  
                              l6297 431E                                l6289 42D8  
                              l6465 3B08                                l6449 3A7C  
                              l6561 25E6                                l6641 15B4  
                              l6625 1578                                l7265 090A  
                              l7177 0684                                l7329 35F0  
                              l7361 2BF0                                l7513 0AB6  
                              l8073 4678                                l7435 3862  
                              l6803 4B46                                l6555 25CE  
                              l6723 1842                                l6651 15E6  
                              l6643 15B8                                l6627 1588  
                              l7291 0996                                l7275 0936  
                              l7099 036A                                l7339 364A  
                              l7355 2BC0                                l7611 0FBA  
                              l7507 0A6A                                l8403 12C8  
                              l8411 1304                                l8331 289C  
                              l8323 2850                                l8315 282C  
                              l8307 280C                                l8243 272C  
                              l7429 382C                                l6469 3B2E  
                              l6549 25A8                                l6485 248A  
                              l7189 0708                                l7461 4234  
                              l7525 0B26                                l8341 28CA  
                              l8333 28A2                                l8253 2756  
                              l8245 2730                                l8501 191A  
                              l7439 3896                                l6823 4B8C  
                              l6815 4B74                                l6807 4B54  
                              l6591 26A6                                l6567 2604  
                              l6831 46FC                                l6735 1884  
                              l6719 1824                                l7383 2CA0  
                              l7391 2D16                                l7527 0B44  
                              l8407 12E4                                l8343 28D8  
                              l8335 28A8                                l8319 283C  
                              l8271 278A                                l8263 2774  
                              l8255 275C                                l8327 285C  
                              l8503 1926                                l6761 4776  
                              l6809 4B5C                                l6489 248E  
                              l6913 4142                                l6905 411A  
                              l7369 2C12                                l7633 10F8  
                              l7545 0C1E                                l7529 0B52  
                              l8441 13EA                                l8337 28B6  
                              l8521 19A0                                l8505 1934  
                              l6755 4766                                l6819 4B7E  
                              l6595 26D0                                l6587 2682  
                              l6835 4730                                l6851 3F66  
                              l6907 4126                                l7299 09D0  
                              l7459 4226                                l7643 1140  
                              l7619 1028                                l7547 0C3C  
                              l7491 0A52                                l8435 13CC  
                              l8195 3BD6                                l8187 3B9A  
                              l8339 28C4                                l8291 27CC  
                              l8275 2796                                l8267 277E  
                              l8259 276A                                l8507 1940  
                              l6925 5228                                l6933 4F6E  
                              l6861 3FCA                                l6693 1788  
                              l7573 0D8A                                l7565 0D24  
                              l7549 0C4A                                l7725 4DAA  
                              l7813 4918                                l7741 36EC  
                              l8381 1230                                l8197 3BE4  
                              l8349 28FE                                l8613 4380  
                              l8525 19BE                                l8533 19FA  
                              l6935 4F7A                                l6767 478C  
                              l6783 47BE                                l6839 474E  
                              l6855 3F7C                                l6847 3F32  
                              l7639 1134                                l7583 0E3C  
                              l7495 0A58                                l7487 0A3E  
                              l7727 4DD8                                l7671 4804  
                              l8631 50BE                                l7743 36F2  
                              l7735 36CE                                l7903 2F94  
                              l7831 44B0                                l8383 123E  
                              l8375 11DE                                l8295 27DC  
                              l8287 27BE                                l8279 27A2  
                              l6769 4794                                l7489 0A42  
                              l7649 115A                                l7681 4838  
                              l7753 3762                                l7745 36FE  
                              l8481 150C                                l8385 124A  
                              l8377 11EE                                l8529 19DA  
                              l6963 29D4                                l6787 47CC  
                              l6779 47B4                                l6699 17A6  
                              l7595 0EC2                                l7499 0A5E  
                              l7771 37AE                                l7755 376E  
                              l7747 3724                                l7915 3046  
                              l7851 4418                                l8483 152C  
                              l8379 1224                                l8299 27EC  
                              l6949 2994                                l6869 5406  
                              l7669 47F8                                l8629 50B2  
                              l7917 305E                                l8485 1538  
                              l8477 1502                                l8565 1AE6  
                              l8557 1AC2                                l8901 2366  
                              l8735 3C72                                l6967 29E4  
                              l6799 4B3A                                l6895 4102  
                              l6879 40B8                                l7943 396A  
                              l7951 39C8                                l8399 12AA  
                              l8591 1BA4                                l6977 2ADC  
                              l8649 41AC                                l8497 18F8  
                              l8913 2410                                l6899 4112  
                              l8763 32C0                                l7947 3996  
                              l7939 393E                                l8843 20C8  
                              l8819 1F4C                                l8595 1BC2  
                              l8587 1B9A                                l8499 1908  
                              l6997 2B44                                l8597 1BCE  
                              l8861 4970                                l7959 39DC  
                              l7799 4548                                l7879 3E46  
                              l7975 4A58                                l7983 4A90  
                              l8855 2172                                l8779 32F6  
                              l7995 45E0                                l8877 2222  
                              l8869 49A8                                STR_1 FE6C  
                              STR_2 FF78                                STR_3 FF78  
                              STR_4 FFA8                                STR_5 FFB2  
                              STR_6 FFDF                                STR_7 FFDA  
                              STR_8 FFFC                                STR_9 FF65  
                              _BLUE FD8A                                _T0CS 007EAD  
                              _T0SE 007EAC                                _LATD 000F8C  
                              u5010 1D28                                _GREY FDA2  
                              u6100 17D6                                u5220 1EAA  
                              u5140 1E3A                                u5320 52AA  
                              u6200 4798                                u5160 1E4E  
                              u5400 4F50                                u6050 15D4  
                              u5330 400C                                u6140 1832  
                              u6060 174A                                u5500 2EAE  
                              u5420 5020                                u7100 0920  
                              u5260 5326                                u6310 474A  
                              u6150 1850                                u5430 5022  
                              u5270 5328                                u5335 4002  
                              u5407 4F46                                u5600 5386  
                              u5520 2F0E                                u7120 0980  
                              u7040 0838                                u7200 35E6  
                              u6065 1740                                u5505 2EA4  
                              u8001 52F4                                u5610 5388  
                              u4810 4BEE                                u5450 2DFE  
                              u7130 0982                                u7210 3612  
                              _RCIE 007CED                                u6260 4B60  
                              u5380 4088                                u5460 2E1E  
                              u7300 2C46                                _RCIF 007CF5  
                              u5525 2F04                                u4830 51DE  
                              u6430 412C                                u5390 408A  
                              u5550 5294                                u8110 30BA  
                              u5375 406A                                u5455 2DF4  
                              u7151 3546                                u5720 3AAE  
                              u6520 29A8                                u7240 3676  
                              u5560 5296                                u7400 2D5C  
                              u7320 2C7E                                u8040 3EA2  
                              u5641 344E                                u7217 3608  
                              u6610 2B2E                                u4850 5356  
                              u5570 5100                                u7330 2C80  
                              u6460 5224                                u5660 3486  
                              u6540 29CE                                u6380 40A6  
                              u4860 5358                                u5580 5102  
                              u7260 2B9A                                u9020 20E0  
                              u4837 51D4                                u5485 2E48  
                              u7430 3818                                u4790 4BA6  
                              u6550 2AEA                                u5910 2634  
                              u6390 40D6                                u5486 2E4E  
                              u7350 2CF2                                u4775 546A  
                              u5487 2E5C                                u4776 546C  
                              u6480 2966                                u4960 1CD4  
                              u6800 0378                                u6720 019A  
                              u7360 2D26                                u7280 2C0E  
                              u8080 2FF0                                u8241 4C7E  
                              u7450 38C6                                u6570 2B0C  
                              u6490 2968                                u4970 1CE4  
                              u6730 019C                                u6650 007C  
                              u7530 427A                                u7290 2C44  
                              u7610 0B8C                                u8090 3040  
                              u6571 2B0A                                u6395 40CC  
                              u7355 2CE0                                u8251 3B62  
                              u7460 38C8                                u6580 2B1A  
                              u4980 1CE6                                u7380 2D48  
                              u7620 0B8E                                u8500 11B2  
                              u7381 2D46                                u6590 2B20  
                              u5950 2690                                u6830 03B0  
                              u7390 2D56                                u7630 0B9A  
                              u8511 11C4                                u5960 26B4  
                              u6680 00E6                                u8360 2792  
                              u9080 237E                                u6770 033C  
                              u6690 00E8                                u7810 105C  
                              u7730 0DBE                                u8610 13C4  
                              u7660 0C84                                u6870 03FE  
                              u7670 0C86                                u7760 0F46  
                              u7680 0C92                                u7840 4808  
                              u8560 12D8                                u7770 0F48  
                              u8570 1316                                u8580 1326  
                              u8740 19CE                                u7950 3778  
                              u8750 1A0C                                u9607 1A34  
                              u8671 18AE                                u8760 1A1C  
                              u8680 18C8                                u7865 4E78  
                              u9617 1B76                                u7875 54D8  
                              u9707 4CE0                                u9627 1F9E  
                              u8691 18DE                                u7876 54DA  
                              u9717 4C92                                u9637 1FB6  
                              u8790 1ABA                                u9807 50A4  
                              u9727 53C8                                u9647 274A  
                              u8960 3D4A                                u9817 3330  
                              u9737 133E                                u9657 28E6  
                              u9577 322C                                u9907 545C  
                              u9827 33B2                                u9747 146A  
                              u9667 539A                                u9587 2274  
                              _UART 01FB                                u9837 33E8  
                              u9757 1482                                u9677 4FB6  
                              u9597 228C                                u8990 33D4  
                              u9847 418E                                u9767 14C6  
                              u9687 3B76                                u9857 4C08  
                              u9777 14E2                                u9697 48AE  
                              u9867 4C20                                u9787 4D42  
                              u9877 4C32                                u9797 4D58  
                              u9887 4C54                                u9897 5452  
                              _TRMT 007D61                                _TXIE 007CEC  
                              _TXIF 007CF4            storeCanisterData@deposit 000C  
                              abs@a 0013                                _cans 0100  
                              _dbuf 0200               distFromCanister@count 001A  
                              _atoi 37C0                                _ctoa 4F5A  
                              _main 3110                                _dtoa 293E  
          __end_of_interruptHandler 5444                                _prec 0186  
                              _uart 01A4                                _nout 0182  
                              _year FD7B                                pad@i 001C  
                              pad@p 0019                                fsr0h 000FEA  
                              fsr1h 000FE2                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 001E                                fsr2l 000FD9  
                              _stoa 353C                                btemp 007F  
                              _xtoa 2B86                       ___fpclassifyf 3FCE  
                     testTurn@count 00FA                                prodh 000FF4  
                              prodl 000FF3                readRemoteStart@count 001A  
                              start 000E                       __CFG_IESO$OFF 000000  
                   ___fldiv@new_exp 0012                testDrive2@shaftCount 01E2  
                      _tolower$2699 000D                       __CFG_MCLRE$ON 000000  
                      ___param_bank 000000                   ?_increaseNumBalls 0001  
              updateCanData@deposit 000A                               ??_abs 0015  
                             ??_pad 001B               I2C_Master_Read@ackBit 0002  
            __size_of_initCanisters 00F4                  ??_increaseNumBalls 0001  
                  ?_I2C_Master_Init 000E                    ?_I2C_Master_Read 0001  
                  ?_I2C_Master_Wait 0001                    ?_I2C_Master_Stop 0001  
                  _readFrontSensor2 4338           __size_of_getNumBallsGiven 000A  
                    _analog1Ambient 0172                        main@finished 01F1  
                     ___fltol@sign1 0009                     __end_of___aodiv 353C  
                             ?_atoi 0008                               ?_ctoa 0020  
                   __end_of___fladd 1EEA                               ?_main 0001  
                             ?_dtoa 0020                     __end_of___aomod 3B50  
                   __end_of___fldiv 26E6                     __end_of___awdiv 47D6  
                   __end_of___flneg 5418                               _BLACK FDA6  
                             _EEADR 000FA9                      _analog2Ambient 016E  
                             STR_10 FF71                               STR_11 FF7D  
                             STR_22 FFE4                               STR_14 FF40  
                             STR_30 FEB8                               STR_31 FFCE  
                             STR_15 FF94                               STR_16 FF9E  
                             STR_32 FE8B                               STR_40 FE09  
                             STR_33 FEF1                               STR_41 FE7C  
                             STR_34 FF59                               STR_42 FF4D  
                             STR_50 FDD4                               STR_27 FEF1  
                             STR_43 FE9A                               STR_35 FE1A  
                             STR_51 FDF8                               STR_60 FFF1  
                             STR_28 FFC5                               STR_44 FFBC  
                             STR_36 FE5C                               STR_52 FE4C  
                   __end_of___awmod 4B96                               STR_53 FE4C  
                             STR_37 FEE3                               STR_45 FEC7  
                             STR_29 FEA9                               STR_46 FF26  
                             STR_38 FE3C                               STR_54 FE2B  
                             STR_63 FFED                               STR_47 FF89  
                             STR_55 FF0C                               STR_39 FED5  
                             STR_64 FFF5                               STR_48 FFD4  
                             STR_56 FF19                               STR_49 FF33  
                             STR_57 FDE6                               STR_58 FEFF  
                             STR_67 FFF9                               STR_59 FFE9  
                             STR_69 FFF9                     __end_of___flmul 189A  
                   __end_of___flsub 51AE                     __end_of___fltol 4154  
                             ?_stoa 000E                     __end_of___lldiv 4858  
                  __end_of_INST_NOP FDCA                     ___awdiv@divisor 0003  
                             ?_xtoa 0020                      _analog3Ambient 016A  
                             _GREEN FD8E                               _INT1F 007F80  
                             i2l580 5440                     _initStartScreen 328E  
                   ___awdiv@counter 0005                               _RCREG 000FAE  
                    _analog4Ambient 0166                        vfpfcnvrt@fmt 00BA  
                             _TMR0H 000FD7                        vfpfcnvrt@llu 00CA  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _PORTB 000F81  
                             _WHITE FD9E                        main@newCount 01EE  
                             _TRISD 000F95                               _SSPIF 007CF3  
                             _TXREG 000FAD                       __CFG_PWRT$OFF 000000  
                     __CFG_WRT0$OFF 000000                     __end_of_getData 52FE  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                     __end_of_lcdInst 554A  
                    __CFG_EBTR0$OFF 000000                      __CFG_FCMEN$OFF 000000  
                   __end_of_getTime 4E50                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
               setRight@shaftCount2 01B2                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                               _canID 018E  
                     __CFG_WRTD$OFF 000000                     __end_of_initLCD 4C6C  
                    __CFG_EBTRB$OFF 000000                               _flags 0188  
                _buildEndScreenMenu 4CD4                               _fputc 4B96  
                   __end_of_isalpha 529C                               _fputs 5230  
                   __end_of_isdigit 538E                               atoi@n 0015  
                             pad@fp 0015                               atoi@s 0008  
                             _width 0184                               ctoa@c 0022  
                             _putch 5532                               ctoa@w 0023  
                             dtoa@d 0022              distFromCanister@sensor 0016  
                             dtoa@i 0042                               dtoa@n 003A  
                             dtoa@p 0034                               dtoa@s 0038  
                             dtoa@w 0036                     __end_of_islower 532E  
                   __end_of_isspace 5230       __size_of_canisterSelectScreen 004E  
           _canisterDataScreen$3054 01B4                     __end_of_isupper 535E  
                             tablat 000FF5                  setForward@newCount 01B0  
                   send_nibble@data 0002                               plusw0 000FEB  
                             plusw1 000FE3                               plusw2 000FDB  
                             stoa@i 001A                               stoa@l 0022  
                             stoa@p 0020                               stoa@s 0010  
                             stoa@w 001C                     __end_of_pulse_e 546E  
                             ttemp5 0080                               ttemp6 0083  
                             ttemp7 0087          detectCanisterTurned@status 01D0  
                             status 000FD8         I2C_Master_Read@receivedByte 0003  
                             wtemp8 0080                      ?___fpclassifyf 0001  
                   __end_of_tolower 5044                               xtoa@c 0045  
                             xtoa@d 0022                               xtoa@i 0043  
                             xtoa@n 003B                               xtoa@p 0037  
                             xtoa@w 0039                               xtoa@x 002A  
               ?_buildEndScreenMenu 0001                     __end_of_strncmp 429E  
                   __end_of_toupper 5122               testDrive2@shaftCount2 01E0  
                  _ballsGivenScreen 53BC                        ?_setBackward 00FA  
                    __CFG_PBADEN$ON 000000              ??_detectCanisterTurned 00FE  
                      __end_of_BLUE FD8E                        __end_of_GREY FDA6  
                      _toupper$2714 000D                     _readRemoteStart 4154  
                   __initialization 5122                        __end_of_atoi 3900  
                      __end_of_ctoa 4FAA                        __end_of_main 328E  
                      __end_of_dtoa 2B86                        __end_of_year FD82  
                      __end_of_stoa 3680                        __end_of_xtoa 2DB8  
               testDrive@shaftCount 01E1                    ?_buildTimeScreen 0001  
                      ?_releaseDoor 0001                     _getNumCanisters 5560  
                            ??_atoi 000A                              ??_ctoa 0023  
                            ??_main 01EC                              ??_dtoa 002A  
              __size_of_getDistance 005A                ??_buildEndScreenMenu 007E  
                            ??_stoa 0012                              ??_xtoa 002B  
                     __activetblptr 000002                 storeCanisterData@id 000E  
           __end_of_readFrontSensor 46C8                     ??_updateCanData 000B  
                 ?_I2C_Master_Start 0001                   ?_I2C_Master_Write 0002  
                shaftEncoderCount@i 001E                  ??_I2C_Master_Start 0002  
                            _ADCON1 000FC1                  ??_I2C_Master_Write 0004  
                      ?_send_nibble 0001                              ?_fputc 0005  
                            ?_fputs 000E                              _EEADRH 000FAA  
                            _EEDATA 000FA8                              _EECON2 000FA7  
                            _T08BIT 007EAE                    ___awdiv@dividend 0001  
                            ?_putch 0001                   __end_of_INST_TEON FDBA  
                     _initCanisters 3C62                              _INDIGO FD86  
                            i2l9347 542C                              _ORANGE FD96  
                     vfpfcnvrt@done 00D4                              _TMR0IE 007F95  
                            _TMR0IF 007F92                              _TMR0ON 007EAF  
                            _VIOLET FD82                              _SSPADD 000FC8  
                            _TRISC6 007CA6                              _TRISC7 007CA7  
                            _YELLOW FD92                              _SSPBUF 000FC9  
                  __end_of___xxtofl 37C0                 initStartScreen@time 00F8  
                    __CFG_XINST$OFF 000000                        vfprintf@cfmt 007C  
                  __end_of_avoidCan 50D8                              ___flge 3EFE  
                            ___fleq 46C8                 readHallEffect@count 001A  
               detectCanister@dist1 01BB                 detectCanister@dist2 01D6  
               detectCanister@dist3 01DA                 detectCanister@dist4 01CB  
                         ??___aodiv 0011               ballsGivenScreen@balls 00F6  
                         ??___fladd 0054                           ??___aomod 0011  
                            ___wmul 5496                           ??___fldiv 0009  
                         ??___awdiv 0005                           ??___flneg 0005  
             canisterDataScreen@can 01B6                      __CFG_STVREN$ON 000000  
                         ??___awmod 0005                           ??___flmul 0035  
                         ??___flsub 0064                           ??___fltol 0005  
                         ??___lldiv 0009             __end_of_initStartScreen 33F4  
               detectCanister@right 01BA                              _efgtoa 0012  
               detectCanister@state 01D8                    __end_of_initMenu 293E  
        __end_of_canisterDataScreen 3C62                              _floorf 2DB8  
                            clear_0 5148                              clear_1 5154  
                  ___awdiv@quotient 0007                     ___awmod@divisor 0003  
                         ??_getData 0010                     ___awmod@counter 0005  
                         ??_lcdInst 0004                              _printf 546E  
                            pad@buf 0017                           ??_getTime 004A  
       detectCanisterTurned@curDist 01B6                readFrontSensor@count 001A  
                            ctoa@fp 0020                              dtoa@fp 0020  
                            _strcpy 4F06                              _strlen 51AE  
                         ??_initLCD 0005                    __end_of_setRight 4A3E  
                            fputc@c 0005                              fputs@c 0012  
                            fputs@i 0013                              fputs@s 000E  
                         ??_isalpha 0003                           ??_isdigit 0003  
                   ___fpclassifyf@e 0009                     ___fpclassifyf@u 000B  
                   ___fpclassifyf@x 0001                           ??_islower 0003  
                      __mediumconst FD7A                           ??_isspace 0003  
       detectCanisterTurned@prevCan 01BC                    __end_of_testTurn 49CA  
                            tblptrh 000FF7                           ??_isupper 0003  
                            tblptrl 000FF6                              tblptru 000FF8  
       detectCanisterTurned@success 01C9                              stoa@cp 001E  
                            stoa@fp 000E                    setBackward@count 00FA  
                  __end_of_vfprintf 4DF4                           ??_pulse_e 0001  
           __size_of_readHallEffect 0098             __size_of_detectCanister 03BA  
                         ??_tolower 0009                      ?_initCanisters 0001  
                            xtoa@fp 0020                           ??_strncmp 0007  
                         ??_toupper 0009                          ___flge@ff1 0064  
                        ___flge@ff2 0068                     ??___fpclassifyf 0005  
                      ___xxtofl@arg 0029               pulse_e@interruptState 0001  
                      ___xxtofl@exp 0028            __end_of_distFromCanister 3A2C  
                      ___xxtofl@val 001F                          ___fleq@ff1 0001  
                        ___fleq@ff2 0005             __end_of_readRemoteStart 41FC  
                        __accesstop 0080             __end_of__initialization 515A  
                    initCanisters@i 0007                          ___flneg@f1 0001  
                     __end_of_BLACK FDAA                       ___rparam_used 000001  
                        ___fltol@f1 0001                       __end_of_GREEN FD92  
                  ??_buildEndScreen 007E                    testDrive@newDist 01E3  
                _shaftEncoderCount2 43D0                       __end_of_WHITE FDA2  
                    __pcstackCOMRAM 0001             __end_of_getNumCanisters 556A  
                      __pidataBANK1 554A                       __end_of_fputc 4C02  
                     __end_of_fputs 5268                 ?_shaftEncoderCount2 0016  
                     __end_of_putch 553E                    _getNumBallsGiven 5556  
              testDrive@shaftCount2 01DF             detectCanister@deposited 01D5  
                  ?_readFrontSensor 0016              setBackward@shaftCount2 01B2  
                     ?_releaseDoor1 0001                       ?_releaseDoor2 0001  
       __size_of_numCanistersScreen 002E                             ??_fputc 0009  
                           ??_fputs 0012                             ??_putch 0004  
                     _INST_VMOFCTR2 FDAA                ??_shaftEncoderCount2 0018  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
          __end_of_readFrontSensor2 43D0                   initMenu@ballGiven 01C1  
                 ?_interruptHandler 0001                    readFrontSensor@i 001E  
                ??_interruptHandler 0001                __size_of_setBackward 0074  
                           ?___flge 0064                             ?___fleq 0001  
               shaftEncoderCount2@i 001E                   initMenu@canisters 01C3  
                           ?___wmul 0001                             ?_efgtoa 0070  
                  ?_initStartScreen 0001                             ?_floorf 001A  
                __size_of_send_byte 0012                  __size_of_moveRobot 007E  
                __end_of_INST_CASET FDBF                  __end_of_INST_IDMON FDB7  
                           ?_printf 00EA                  __end_of_INST_INVON FDC3  
                __end_of_INST_RASET FDBE                  __end_of_INST_RAMWR FDBD  
                __end_of_INST_TEOFF FDBB                  __end_of_INST_NORON FDC5  
                           ?_strcpy 0001                             ?_strlen 0001  
                __end_of_INST_PTLAR FDBC                  __end_of_INST_SLPIN FDC8  
                __end_of_INST_PTLON FDC6                        initMenu@curr 01C7  
                __size_of_testDrive 02D6                   _storeCanisterData 3D56  
                        _arr_dataRX 0194            __end_of_ballsGivenScreen 53EA  
              __size_of_releaseDoor 0018                           ?___xxtofl 001F  
                    ??_releaseDoor1 0070                      ??_releaseDoor2 0070  
                           _ESPdata 01F9                  __size_of_vfpfcnvrt 0798  
                   ??_initCanisters 0007                  ?_storeCanisterData 0007  
         __size_of_increaseNumBalls 0008                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
                         ?_avoidCan 0001                       _suspendedDist 017A  
                 testDrive2@newDist 01E4                   distFromCanister@i 001E  
              __size_of_send_nibble 0016                 ??_storeCanisterData 000D  
                         ?_initMenu 0001                    ?_readRemoteStart 0016  
           shaftEncoderCount2@count 001A                           ?_setRight 00FA  
                           __Hparam 0000                      _GLCD_SIZE_HORZ FDD0  
                           __Lparam 0000                      _GLCD_SIZE_VERT FDCA  
              __end_of_INST_DISPOFF FDC1               readFrontSensor2@count 001A  
                  ?_getNumCanisters 0001                           ?_testTurn 00FA  
              __end_of_INST_FRMCTR1 FDB5                __end_of_INST_FRMCTR2 FDB4  
              __end_of_INST_FRMCTR3 FDB3                     __size_of___flge 00D0  
                   __size_of___fleq 008A                             ___aodiv 33F4  
                           ___fladd 1BDE                             ___aomod 3A2C  
                           ___fldiv 245E                             ___awdiv 4752  
                           ___flneg 53EA                             ___awmod 4B26  
                           ___flmul 1548        __end_of_canisterSelectScreen 4FF8  
                           ___flsub 5168                             ___fltol 409A  
                           ___lldiv 47D6                     __size_of___wmul 0026  
              detectCanister@facing 01CD                           ?_vfprintf 00E4  
                   __size_of_efgtoa 09E4                     __size_of_floorf 01B6  
            canisterDataScreen@dist 01B0                             __pcinit 5122  
                           _getData 52CE                             __ramtop 1000  
         __end_of_storeCanisterData 3E2C                detectCanister@prevID 01D2  
                           _lcdInst 553E                             __ptext0 3110  
                           __ptext1 4956                             __ptext2 21C0  
                           __ptext3 189A                             _getTime 4DF4  
                           __ptext4 5044                             __ptext5 1EEA  
                           __ptext6 4338                             __ptext7 26E6  
                           __ptext8 538E                             __ptext9 5556  
                   __size_of_printf 0028                detectCanister@status 01D4  
              __end_of_INST_SWRESET FDC9                     __size_of_strcpy 0054  
                   __size_of_strlen 0044                             _initLCD 4C02  
                 buildEndScreen@can 01B4                        __size_of_abs 0032  
                      __size_of_pad 009A                             _isalpha 5268  
                           _isdigit 535E                          ??___xxtofl 0023  
                  ___awmod@dividend 0001                             _numCans 018C  
                           _islower 52FE                             _isspace 51F2  
                           _isupper 532E            __size_of_I2C_Master_Init 005C  
          __size_of_I2C_Master_Read 0024                             efgtoa@c 0076  
                           efgtoa@d 0098                             efgtoa@e 00B0  
                           efgtoa@f 0072                             efgtoa@g 00AC  
                           efgtoa@h 00A2                             efgtoa@i 00AA  
                           efgtoa@l 00A6                             efgtoa@m 0094  
                           efgtoa@n 00B2                             efgtoa@p 009C  
                           efgtoa@t 0090                             efgtoa@u 00B4  
                           efgtoa@w 009F            __size_of_I2C_Master_Wait 0012  
          __size_of_I2C_Master_Stop 0008                      _readHallEffect 4500  
                    _detectCanister 118E                             atoi@neg 000E  
                           _pulse_e 5444                     sensorData@data2 00F8  
                           _tolower 4FF8                             _strncmp 41FC  
                    __pintcode_body 5418                             _toupper 50D8  
                        ??_avoidCan 001F                end_of_initialization 515A  
                           floorf@e 0028                             floorf@m 0024  
                           floorf@u 002A                             floorf@x 001A  
                        _setForward 4A3E               __end_of_LCD_SIZE_HORZ FDD0  
                 __end_of_send_byte 5532               __end_of_LCD_SIZE_VERT FDCF  
                 __end_of_moveRobot 4956                          ??_initMenu 00FA  
                           fputc@fp 0007                       __Lmediumconst FD7A  
                           int_func 5418                             fputs@fp 0010  
            __end_of_GLCD_SIZE_HORZ FDD1                           _INST_TEON FDB9  
            __end_of_GLCD_SIZE_VERT FDCB       detectCanisterTurned@deposited 01D1  
                 __end_of_testDrive 21C0           __size_of_I2C_Master_Start 0008  
         __size_of_I2C_Master_Write 000A                     ___lldiv@divisor 0005  
                        ??_setRight 00FC                     ___lldiv@counter 000D  
      detectCanisterTurned@prevDist 01C5                    testTurn@newCount 01B0  
                 __end_of_vfpfcnvrt 118E                          efgtoa@mode 00A1  
                        efgtoa@sign 009A       __size_of_detectCanisterTurned 0344  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                        ??_testTurn 00FC                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                          _sensorData 4D36  
                     ??_getDistance 004A                          ??_vfprintf 007C  
                        _testDrive2 21C0                             strcpy@d 0009  
                           strlen@a 0003                             strcpy@s 0007  
                           strlen@s 0001                       setRight@count 00FA  
       __size_of_buildEndScreenMenu 0062                         ___fladd@grs 005B  
            __end_of_readHallEffect 4598              __end_of_detectCanister 1548  
                     ___xxtofl@sign 0027                setForward@shaftCount 01B4  
                         _TRISBbits 000F93                           _TRISCbits 000F94  
                         _TRISDbits 000F95               __end_of_updateCanData 508E  
          __size_of_buildTimeScreen 0080                         ___fldiv@grs 0014  
                       ___fldiv@rem 000D                  _canisterDataScreen 3B50  
                       ___flmul@grs 003A            __end_of_getNumBallsGiven 5560  
                 ?_distFromCanister 0016                      __end_of_INDIGO FD8A  
               ?_canisterDataScreen 00F6             storeCanisterData@facing 000D  
                         _TXSTAbits 000FAC                      __end_of_ORANGE FD9A  
                     send_byte@data 0003                    initStartScreen@i 00FF  
                    __end_of_VIOLET FD86                  ??_distFromCanister 0018  
                    __end_of_YELLOW FD96                __end_of_releaseDoor1 3EFE  
              __end_of_releaseDoor2 3110             storeCanisterData@status 000B  
           detectCanisterTurned@can 01D4                      __end_of___flge 3FCE  
                    __end_of___fleq 4752                         vfpfcnvrt@ap 00BC  
                       vfpfcnvrt@cp 00D2                         vfpfcnvrt@ct 00E0  
                       vfpfcnvrt@fp 00B8                         vfpfcnvrt@ll 00C2  
                    __end_of___wmul 54BC                 updateCanData@status 0009  
                    __end_of_efgtoa 09F6                  setRight@shaftCount 01B4  
        __size_of_storeCanisterData 00D6                      __end_of_floorf 2F6E  
              ??_canisterDataScreen 007E                          floorf@F524 015A  
                    __end_of_printf 5496                 __end_of_getDistance 4F06  
                    __end_of_strcpy 4F5A                      __end_of_strlen 51F2  
                   ?_readHallEffect 0016                     ?_detectCanister 0001  
               start_initialization 5122                         __end_of_RED FD9E  
                  _increaseNumBalls 5574                         __end_of_abs 52CE  
                 _readDigitalSensor 4598                         __end_of_pad 4338  
                 releaseDoor1@start 0070                   releaseDoor2@start 0070  
                ?_readDigitalSensor 0016                       moveRobot@move 0001  
              _canisterSelectScreen 4FAA                         ?_setForward 00FA  
                  getDistance@count 004A                   ??_I2C_Master_Init 0012  
                 ??_I2C_Master_Read 0002                   ??_I2C_Master_Wait 0001  
                 ??_I2C_Master_Stop 0002                   ?_readFrontSensor2 0016  
             __end_of___fpclassifyf 409A                          initMenu@id 01C5  
               ??_readDigitalSensor 0018                  ??_readFrontSensor2 0018  
                       vfprintf@fmt 00E6                            ??___flge 006C  
                          ??___fleq 0009                canisterDataScreen@id 00F6  
                          ??___wmul 0005                         ?_sensorData 00F6  
                          ??_efgtoa 0077                         ?_testDrive2 0001  
          I2C_Master_Init@clockFreq 000E                         __pdataBANK1 01F2  
                          ??_floorf 001E                    __CFG_LPT1OSC$OFF 000000  
                          ??_printf 007E           __size_of_interruptHandler 543C  
                          ??_strcpy 0005                            ??_strlen 0003  
                         ___fladd@a 0050                           ___fladd@b 004C  
__end_of_GLCD_ADDRESSABLE_SIZE_HORZ FDCD          _GLCD_ADDRESSABLE_SIZE_HORZ FDCC  
                         ___fldiv@a 0005                           ___fldiv@b 0001  
        __end_of_numCanistersScreen 53BC  __end_of_GLCD_ADDRESSABLE_SIZE_VERT FDCC  
        _GLCD_ADDRESSABLE_SIZE_VERT FDCB           __end_of_readDigitalSensor 4630  
                         ___flmul@a 0031                           ___flmul@b 002D  
                         ___flsub@a 0060                           ___flsub@b 005C  
                 ?_ballsGivenScreen 00F6               storeCanisterData@dist 0007  
                     __pcstackBANK0 0080                   _shaftEncoderCount 4468  
                     __pcstackBANK1 01B0                    ___aodiv@dividend 0001  
            readDigitalSensor@count 001A                        _INST_DISPOFF FDC0  
                 __size_of___xxtofl 0140                  ??_ballsGivenScreen 007E  
                   setForward@count 00FA                  ?_shaftEncoderCount 0016  
                      _INST_FRMCTR1 FDB4                        _INST_FRMCTR2 FDB3  
                      _INST_FRMCTR3 FDB2               ?_canisterSelectScreen 0001  
       __size_of_shaftEncoderCount2 0098            __size_of_readFrontSensor 0098  
             setBackward@shaftCount 01B4                   readFrontSensor2@i 001E  
                 __size_of_avoidCan 004A                   ??_buildTimeScreen 007E  
               ??_shaftEncoderCount 0018                           _atoi$2586 0010  
                         _atoi$2587 0014                           _atoi$2588 0012  
                     ??_setBackward 00FC                        _INST_SWRESET FDC8  
                  _I2C_Master_Start 5584                    _I2C_Master_Write 556A  
                 __size_of_initMenu 0258              detectCanister@location 01CE  
                       _efgtoa$2063 0088                         _efgtoa$2058 0084  
                       _efgtoa$2067 008A                         _efgtoa$2059 0086  
                       _efgtoa$2068 008C                         _efgtoa$2069 008E  
                         _dtoa$2035 0032                   __CFG_CCP2MX$PORTC 000000  
                _UARTinterruptState 0193                           __pintcode 0008  
                     __pmediumconst FD7A                   __size_of_setRight 0074  
                          ?___aodiv 0001                            ?___fladd 004C  
                          ?___aomod 0001                            ?___fldiv 0001  
                          ?___awdiv 0001                    ___aodiv@quotient 0013  
                          ?___flneg 0001                            ?___awmod 0001  
                          ?___flmul 002D                            ?___flsub 005C  
                          ?___fltol 0001                            ?___lldiv 0001  
                       _getDistance 4EAC                   __size_of_testTurn 0074  
                     ??_releaseDoor 0074                            ?_getData 0007  
               __size_of_setForward 0074             __size_of_buildEndScreen 0068  
                          ?_lcdInst 0001                            ?_getTime 0046  
                 __size_of_vfprintf 005E                            ?_initLCD 0001  
         __end_of_shaftEncoderCount 4500                    readRemoteStart@i 001E  
                          ?_isalpha 0001                            ?_isdigit 0001  
          __size_of_initStartScreen 0166                            ?_islower 0001  
                          ?_isspace 0001                            ?_isupper 0001  
               __end_of_INST_GAMSET FDC2                 __end_of_INST_COLMOD FDB6  
               __end_of_INST_MADCTL FDB9                 __end_of_INST_DISPON FDC0  
               __end_of_INST_IDMOFF FDB8                 __end_of_INST_INVCTR FDB2  
                     ??_send_nibble 0002                 __end_of_INST_INVOFF FDC4  
                          ?_pulse_e 0001                            ?_tolower 0007  
             __end_of_initCanisters 3D56                      __size_of_fputc 006C  
                    __size_of_fputs 0038                 __end_of_INST_PWCTR1 FDB1  
               __end_of_INST_PWCTR2 FDB0                 __end_of_INST_PWCTR3 FDAF  
               __end_of_INST_PWCTR4 FDAE                 __end_of_INST_PWCTR5 FDAD  
                          ?_strncmp 0001                            ?_toupper 0007  
               __end_of_INST_VMCTR1 FDAC                 __end_of_INST_SLPOUT FDC7  
                    __size_of_putch 000C                 __size_of_sensorData 0060  
            shaftEncoderCount@count 001A                 __size_of_testDrive2 029E  
                    ___wmul@product 0005                      sensorData@data 00F6  
             __size_of_releaseDoor1 00D2               __size_of_releaseDoor2 01A2  
                          _LATBbits 000F8A                            _LATCbits 000F8B  
                          _LATDbits 000F8C                           getData@id 0007  
                         _send_byte 5520                      _LCD_LINE1_ADDR FDCD  
                          _INST_NOP FDC9                           _moveRobot 48D8  
                    _LCD_LINE2_ADDR FDD3                      _LCD_LINE3_ADDR FDD2  
                    _LCD_LINE4_ADDR FDD1                            _PIR2bits 000FA1  
                         _timeCount 0162                    __CFG_WDTPS$32768 000000  
          __size_of_readRemoteStart 00A8                           _testDrive 1EEA  
               __end_of_setBackward 4B26                           _vfpfcnvrt 09F6  
                         _xtoa$2090 0035                           _xtoa$2089 0033  
                 ___wmul@multiplier 0001            __size_of_getNumCanisters 000A  
         detectCanisterTurned@dist1 01BA           detectCanisterTurned@dist2 01CC  
         detectCanisterTurned@dist3 01D2           detectCanisterTurned@dist4 01CA  
        __size_of_readDigitalSensor 0098           detectCanisterTurned@state 01CE  
      __end_of_detectCanisterTurned 1BDE                 __end_of_releaseDoor 54F8  
                      _isspace$2626 0007                        _releaseDoor1 3E2C  
                      _releaseDoor2 2F6E              ??_canisterSelectScreen 007E  
                        vfpfcnvrt@c 00E3                          vfpfcnvrt@f 00DC  
                       _INTCON3bits 000FF0                           copy_data0 5136  
            __end_of_LCD_LINE1_ADDR FDCE              __end_of_LCD_LINE2_ADDR FDD4  
            __end_of_LCD_LINE3_ADDR FDD3                   ?_getNumBallsGiven 0001  
            __end_of_LCD_LINE4_ADDR FDD2                 __end_of_send_nibble 550E  
                        _EECON1bits 000FA6                          ?_send_byte 0001  
                       _lateralDist 017E                          ?_moveRobot 0001  
                          __Hrparam 0000                  ??_getNumBallsGiven 0003  
                    testDrive2@dist 01E8                   ??_readFrontSensor 0018  
               testTurn@shaftCount2 01B2                          vfprintf@ap 00E8  
                          __Lrparam 0000                          vfprintf@fp 00E4  
          __end_of_increaseNumBalls 557C                  __CFG_BOREN$SBORDIS 000000  
                        ?_testDrive 0001                    __size_of___aodiv 0148  
                  __size_of___fladd 030C                    __size_of___aomod 0124  
                  __size_of___fldiv 0288                    __size_of___awdiv 0084  
                  __size_of___flneg 002E                    __size_of___awmod 0070  
                  __size_of___flmul 0352                    __size_of___flsub 0046  
                  __size_of___fltol 00BA                    __size_of___lldiv 0082  
        __end_of_buildEndScreenMenu 4D36                          ?_vfpfcnvrt 00B8  
                  ??_readHallEffect 0018                    ??_detectCanister 00FE  
         __size_of_distFromCanister 012C                         _INST_GAMSET FDC1  
                   ___aodiv@divisor 0009                         _INST_COLMOD FDB5  
                       _INST_MADCTL FDB8                         _INST_DISPON FDBF  
                       _INST_IDMOFF FDB7                    _interruptHandler 0008  
                   ___aodiv@counter 0011                    __size_of_getData 0030  
                       _INST_INVCTR FDB1                         _INST_INVOFF FDC3  
                ___fpclassifyf@F463 015E                    __size_of_lcdInst 000C  
        __size_of_shaftEncoderCount 0098                    __size_of_getTime 005C  
                   readHallEffect@i 001E                         _INST_PWCTR1 FDB0  
                       _INST_PWCTR2 FDAF                         _INST_PWCTR3 FDAE  
                       _INST_PWCTR4 FDAD                         _INST_PWCTR5 FDAC  
                       _INST_VMCTR1 FDAB                         _INST_SLPOUT FDC6  
                   _I2C_Master_Init 4E50                     _I2C_Master_Read 54BC  
                  __size_of_initLCD 006A                            ___xxtofl 3680  
                   _I2C_Master_Wait 550E                         _forwardDist 0176  
                   _I2C_Master_Stop 557C                         _key_pressed 0192  
                  __size_of_isalpha 0034                    __size_of_isdigit 0030  
             numCanistersScreen@num 00F6                    __size_of_islower 0030  
                  __size_of_isspace 003E               detectCanister@prevCan 01BD  
                          __ptext10 4FAA                            __ptext11 3B50  
                          __ptext20 4A3E                            __ptext12 4858  
                          __ptext21 4AB2                            __ptext13 4CD4  
                          __ptext30 3680                            __ptext22 43D0  
                          __ptext14 4C6C                            __ptext31 4598  
                          __ptext23 4468                            __ptext15 53BC  
                          __ptext40 4154                            __ptext32 5574  
                          __ptext24 4D36                            __ptext16 4EAC  
                          __ptext41 556A                            __ptext33 5560  
                          __ptext25 54E0                            __ptext17 118E  
                          __ptext50 09F6                            __ptext42 557C  
                          __ptext34 52CE                            __ptext26 2F6E  
                          __ptext18 3D56                            __ptext51 2B86  
                          __ptext43 5584                            __ptext35 3900  
                          __ptext27 3E2C                            __ptext19 49CA  
                          __ptext60 4F06                            __ptext52 50D8  
                          __ptext44 54BC                            __ptext36 508E  
                          __ptext28 4500                            __ptext61 2DB8  
                          __ptext53 52FE                            __ptext45 550E  
                          __ptext37 4630                            __ptext29 4DF4  
                          __ptext70 245E                            __ptext62 3FCE  
                          __ptext54 5268                            __ptext46 4E50  
                          __ptext38 48D8                            __ptext71 4B26  
                          __ptext63 409A                            __ptext55 41FC  
                          __ptext47 47D6                            __ptext39 328E  
                          __ptext80 5230                            __ptext72 4752  
                          __ptext64 5168                            __ptext56 353C  
                          __ptext48 546E                            __ptext81 4B96  
                          __ptext73 293E                            __ptext65 1BDE  
                          __ptext57 0012                            __ptext49 4D96  
                          __ptext90 5444                            __ptext82 5532  
                          __ptext74 529C                            __ptext66 53EA  
                          __ptext58 4FF8                            __ptext91 3C62  
                          __ptext83 37C0                            __ptext75 3A2C  
                          __ptext67 1548                            __ptext59 532E  
                          __ptext92 5496                            __ptext84 51F2  
                          __ptext76 33F4                            __ptext68 3EFE  
                          __ptext85 535E                            __ptext77 4F5A  
                          __ptext69 46C8                            __ptext86 4C02  
                          __ptext78 429E                            __ptext87 553E  
                          __ptext79 51AE                            __ptext88 5520  
                          __ptext89 54F8                    __size_of_isupper 0030  
             __end_of_INST_VMOFCTR2 FDAB               detectCanister@success 01CA  
                        _MADCTLbits 0190                            _avoidCan 508E  
                  __size_of_pulse_e 002A                        ??_setForward 00FC  
                  __size_of_tolower 004C                     updateCanData@id 0007  
                        strcpy@dest 0001                   ??_initStartScreen 00F6  
                  __size_of_strncmp 00A2                    __size_of_toupper 004A  
                          _initMenu 26E6                       __size_of_atoi 0140  
                     __size_of_ctoa 0050                       __size_of_main 017E  
                     __size_of_dtoa 0248                       __size_of_stoa 0144  
                     __size_of_xtoa 0232                            _numBalls 018A  
                       _setBackward 4AB2                            _setRight 49CA  
         detectCanister@oldLocation 01C6                            efgtoa@fp 0070  
                          efgtoa@ne 0096                            efgtoa@pp 0092  
                          efgtoa@ou 0080                           stoa@F1166 01F2  
                          _testTurn 4956              __size_of_updateCanData 004A  
                      ??_sensorData 007E                            int$flags 007F  
                      ??_testDrive2 01DD                            _vfprintf 4D96  
                  setRight@newCount 01B0                           printf@fmt 00EA  
                    _buildEndScreen 4C6C           __size_of_readFrontSensor2 0098  
                       _releaseDoor 54E0         I2C_Master_Write@byteToWrite 0002  
                  ___aomod@dividend 0001                  __end_of_setForward 4AB2  
       __size_of_canisterDataScreen 0112                   ??_readRemoteStart 0018  
                         putch@data 0004                      _vfpfcnvrt$2111 00DA  
                    _vfpfcnvrt$2104 00D6                      _vfpfcnvrt$2105 00D8  
          __end_of_I2C_Master_Start 558C            __end_of_I2C_Master_Write 5574  
                        _INTCONbits 000FF2                     _buildTimeScreen 4858  
                testTurn@shaftCount 01B4                            isalpha@c 0001  
               setBackward@newCount 01B0                            isdigit@c 0001  
                     testDrive@dist 01E7                         _send_nibble 54F8  
                        _INST_CASET FDBE                   ??_getNumCanisters 0003  
                        _INST_IDMON FDB6                          _INST_INVON FDC2  
                        _INST_RASET FDBD                            intlevel2 0000  
                        _INST_RAMWR FDBC                          _INST_TEOFF FDBA  
                        _INST_NORON FDC4                          _INST_PTLAR FDBB  
                        _INST_SLPIN FDC7                          _INST_PTLON FDC5  
                readDigitalSensor@i 001E                  __end_of_sensorData 4D96  
                     _LCD_SIZE_HORZ FDCF                  __end_of_testDrive2 245E  
                          islower@c 0001                       _LCD_SIZE_VERT FDCE  
                _numCanistersScreen 538E                            isspace@c 0001  
                  ___lldiv@dividend 0001                           strcpy@src 0003  
                       ??_send_byte 0003                            isupper@c 0001  
         __size_of_ballsGivenScreen 002E                         ??_moveRobot 0003  
                         strncmp@_l 0001                           strncmp@_r 0003  
               ?_numCanistersScreen 00F6                _detectCanisterTurned 189A  
                       efgtoa@nmode 009E                         ??_testDrive 01DC  
                          printf@ap 00F4              __end_of_buildEndScreen 4CD4  
                      ?_getDistance 0046             __end_of_I2C_Master_Init 4EAC  
                   ___aomod@divisor 0009             __end_of_I2C_Master_Read 54E0  
           __end_of_I2C_Master_Wait 5520             __end_of_I2C_Master_Stop 5584  
                       ??_vfpfcnvrt 00BE                         lcdInst@data 0004  
                          stoa@nuls 0013                     ___aomod@counter 0011  
                          tolower@c 0007              __size_of___fpclassifyf 00CC  
                  ___lldiv@quotient 0009                            strncmp@l 0008  
                          strncmp@n 0005                            strncmp@r 000A  
                          toupper@c 0007                ??_numCanistersScreen 007E  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
        __end_of_shaftEncoderCount2 4468                       _updateCanData 5044  
                       getTime@time 004A                 buildTimeScreen@time 00F6  
                     ___fladd@signs 0058                        ___aodiv@sign 0012  
                      ___fladd@aexp 0059                        ___fladd@bexp 005A  
             setForward@shaftCount2 01B2                        ___aomod@sign 0012  
             ?_detectCanisterTurned 0001  
