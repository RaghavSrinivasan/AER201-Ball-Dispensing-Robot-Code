Version 4.0 HI-TECH Software Intermediate Code
"38 ./I2C.h
[; ;./I2C.h: 38: void I2C_Master_Init(const unsigned long clockFreq);
[v _I2C_Master_Init `(v ~T0 @X0 0 ef1`Cul ]
"44
[; ;./I2C.h: 44: void I2C_Master_Start(void);
[v _I2C_Master_Start `(v ~T0 @X0 0 ef ]
"59
[; ;./I2C.h: 59: void I2C_Master_Write(unsigned byteToWrite);
[v _I2C_Master_Write `(v ~T0 @X0 0 ef1`ui ]
"56
[; ;./I2C.h: 56: void I2C_Master_Stop(void);
[v _I2C_Master_Stop `(v ~T0 @X0 0 ef ]
"68
[; ;./I2C.h: 68: unsigned char I2C_Master_Read(unsigned char ackBit);
[v _I2C_Master_Read `(uc ~T0 @X0 0 ef1`uc ]
[v F2424 `(v ~T0 @X0 1 tf1`ul ]
"183 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18.h
[v __delay `JF2424 ~T0 @X0 0 e ]
[p i __delay ]
"88 ./lcd.h
[; ;./lcd.h: 88: void lcdInst(char data);
[v _lcdInst `(v ~T0 @X0 0 ef1`uc ]
"113 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c99\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 54: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"191
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 191: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"362
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 362: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"537
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 537: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"679
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 679: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"882
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 882: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"994
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 994: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1106
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1106: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1218: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1330
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1330: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1382
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1382: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1387
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1387: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1604: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1609
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1609: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1826
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1826: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1831
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1831: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2048
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2048: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2053
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2053: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2270
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2270: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2275
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2275: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2434
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2434: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2499: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2576: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2653: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2730: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2796: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2862: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2928: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2994: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3001: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3008: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3015
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3015: __asm("EEADRH equ 0FAAh");
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3022: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3027
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3027: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3232: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3237
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3237: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3488: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3493
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3493: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3500: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3505
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3505: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3512: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3517: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3524: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3531: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3643: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3650: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3657: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3664: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3754
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3754: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3833: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3915: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3985: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3990: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4157: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4236: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4243: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4250: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4257: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4354: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4361: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4368: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4375: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4446: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4531: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4650: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4657: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4664: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4671: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4733: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4803: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5024: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5031: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5038: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5109
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5109: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5114
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5114: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5219: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5226: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5329
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5329: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5336: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5343: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5350: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5483
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5483: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5511: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5516: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5781: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5858: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"5935
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5935: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5942: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5949: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5956: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6027
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6027: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6034: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6041: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6048: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6055: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6062: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6069: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6076: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6083: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6090
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6090: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6097: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6104: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6111: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6118: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6125: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6132: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6139: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6146: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6158
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6158: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6165: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6172: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6179: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6186: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6193: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6200: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6207: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6214: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6306: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6376: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6493
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6493: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6500
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6500: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6507
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6507: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6514
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6514: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6523: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6530: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6537: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6544: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6553: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6560: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6567
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6567: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6574
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6574: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6581: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6588: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6694: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6701
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6701: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"6708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6708: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"6715
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6715: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"14 .\configBits.h
[p x OSC = HS ]
"15
[p x FCMEN = OFF ]
"16
[p x IESO = OFF ]
"19
[p x PWRT = OFF ]
"20
[p x BOREN = SBORDIS ]
"21
[p x BORV = 3 ]
"24
[p x WDT = OFF ]
"25
[p x WDTPS = 32768 ]
"28
[p x CCP2MX = PORTC ]
"29
[p x PBADEN = ON ]
"30
[p x LPT1OSC = OFF ]
"31
[p x MCLRE = ON ]
"34
[p x STVREN = ON ]
"35
[p x LVP = OFF ]
"36
[p x XINST = OFF ]
"39
[p x CP0 = OFF ]
"40
[p x CP1 = OFF ]
"41
[p x CP2 = OFF ]
"42
[p x CP3 = OFF ]
"45
[p x CPB = OFF ]
"46
[p x CPD = ON ]
"49
[p x WRT0 = OFF ]
"50
[p x WRT1 = OFF ]
"51
[p x WRT2 = OFF ]
"52
[p x WRT3 = OFF ]
"55
[p x WRTC = OFF ]
"56
[p x WRTB = OFF ]
"57
[p x WRTD = OFF ]
"60
[p x EBTR0 = OFF ]
"61
[p x EBTR1 = OFF ]
"62
[p x EBTR2 = OFF ]
"63
[p x EBTR3 = OFF ]
"66
[p x EBTRB = OFF ]
"9 sensors.c
[; ;sensors.c: 9: int shaftEncoderCount(void)
[v _shaftEncoderCount `(i ~T0 @X0 1 ef ]
"10
[; ;sensors.c: 10: {
{
[e :U _shaftEncoderCount ]
[f ]
"11
[; ;sensors.c: 11:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"12
[; ;sensors.c: 12:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"16
[; ;sensors.c: 16:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"17
[; ;sensors.c: 17:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"18
[; ;sensors.c: 18:     I2C_Master_Write(0);
[e ( _I2C_Master_Write (1 -> -> 0 `i `ui ]
"19
[; ;sensors.c: 19:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"22
[; ;sensors.c: 22:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"23
[; ;sensors.c: 23:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"25
[; ;sensors.c: 25:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 273  ]
[e $U 274  ]
[e :U 273 ]
"26
[; ;sensors.c: 26:     {
{
"27
[; ;sensors.c: 27:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"28
[; ;sensors.c: 28:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 273  ]
[e :U 274 ]
}
"29
[; ;sensors.c: 29:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"30
[; ;sensors.c: 30:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"32
[; ;sensors.c: 32:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 272  ]
"33
[; ;sensors.c: 33: }
[e :UE 272 ]
}
"35
[; ;sensors.c: 35: int shaftEncoderCount2(void)
[v _shaftEncoderCount2 `(i ~T0 @X0 1 ef ]
"36
[; ;sensors.c: 36: {
{
[e :U _shaftEncoderCount2 ]
[f ]
"37
[; ;sensors.c: 37:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"38
[; ;sensors.c: 38:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"42
[; ;sensors.c: 42:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"43
[; ;sensors.c: 43:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"44
[; ;sensors.c: 44:     I2C_Master_Write(6);
[e ( _I2C_Master_Write (1 -> -> 6 `i `ui ]
"45
[; ;sensors.c: 45:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"48
[; ;sensors.c: 48:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"49
[; ;sensors.c: 49:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"51
[; ;sensors.c: 51:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 277  ]
[e $U 278  ]
[e :U 277 ]
"52
[; ;sensors.c: 52:     {
{
"53
[; ;sensors.c: 53:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"54
[; ;sensors.c: 54:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 277  ]
[e :U 278 ]
}
"55
[; ;sensors.c: 55:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"56
[; ;sensors.c: 56:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"58
[; ;sensors.c: 58:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 276  ]
"59
[; ;sensors.c: 59: }
[e :UE 276 ]
}
"61
[; ;sensors.c: 61: int readRemoteStart(void)
[v _readRemoteStart `(i ~T0 @X0 1 ef ]
"62
[; ;sensors.c: 62: {
{
[e :U _readRemoteStart ]
[f ]
"63
[; ;sensors.c: 63:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"64
[; ;sensors.c: 64:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"68
[; ;sensors.c: 68:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"69
[; ;sensors.c: 69:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"70
[; ;sensors.c: 70:     I2C_Master_Write(11);
[e ( _I2C_Master_Write (1 -> -> 11 `i `ui ]
"71
[; ;sensors.c: 71:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"73
[; ;sensors.c: 73:     _delay((unsigned long)((20)*(10000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
"75
[; ;sensors.c: 75:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"76
[; ;sensors.c: 76:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"78
[; ;sensors.c: 78:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 281  ]
[e $U 282  ]
[e :U 281 ]
"79
[; ;sensors.c: 79:     {
{
"80
[; ;sensors.c: 80:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"81
[; ;sensors.c: 81:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 281  ]
[e :U 282 ]
}
"82
[; ;sensors.c: 82:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"83
[; ;sensors.c: 83:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"85
[; ;sensors.c: 85:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 280  ]
"86
[; ;sensors.c: 86: }
[e :UE 280 ]
}
"88
[; ;sensors.c: 88: int distFromCanister(int sensor)
[v _distFromCanister `(i ~T0 @X0 1 ef1`i ]
"89
[; ;sensors.c: 89: {
{
[e :U _distFromCanister ]
"88
[; ;sensors.c: 88: int distFromCanister(int sensor)
[v _sensor `i ~T0 @X0 1 r1 ]
"89
[; ;sensors.c: 89: {
[f ]
"90
[; ;sensors.c: 90:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"91
[; ;sensors.c: 91:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"93
[; ;sensors.c: 93:     if (sensor == 1)
[e $ ! == _sensor -> 1 `i 285  ]
"94
[; ;sensors.c: 94:     {
{
"95
[; ;sensors.c: 95:         I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"96
[; ;sensors.c: 96:         I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"97
[; ;sensors.c: 97:         I2C_Master_Write(1);
[e ( _I2C_Master_Write (1 -> -> 1 `i `ui ]
"98
[; ;sensors.c: 98:         I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"99
[; ;sensors.c: 99:     }
}
[e $U 286  ]
"100
[; ;sensors.c: 100:     else if (sensor == 2)
[e :U 285 ]
[e $ ! == _sensor -> 2 `i 287  ]
"101
[; ;sensors.c: 101:     {
{
"102
[; ;sensors.c: 102:         I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"103
[; ;sensors.c: 103:         I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"104
[; ;sensors.c: 104:         I2C_Master_Write(2);
[e ( _I2C_Master_Write (1 -> -> 2 `i `ui ]
"105
[; ;sensors.c: 105:         I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"106
[; ;sensors.c: 106:     }
}
[e $U 288  ]
"107
[; ;sensors.c: 107:     else if (sensor == 7)
[e :U 287 ]
[e $ ! == _sensor -> 7 `i 289  ]
"108
[; ;sensors.c: 108:     {
{
"109
[; ;sensors.c: 109:         I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"110
[; ;sensors.c: 110:         I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"111
[; ;sensors.c: 111:         I2C_Master_Write(7);
[e ( _I2C_Master_Write (1 -> -> 7 `i `ui ]
"112
[; ;sensors.c: 112:         I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"113
[; ;sensors.c: 113:     }
}
[e $U 290  ]
"114
[; ;sensors.c: 114:     else if (sensor == 8)
[e :U 289 ]
[e $ ! == _sensor -> 8 `i 291  ]
"115
[; ;sensors.c: 115:     {
{
"116
[; ;sensors.c: 116:         I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"117
[; ;sensors.c: 117:         I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"118
[; ;sensors.c: 118:         I2C_Master_Write(8);
[e ( _I2C_Master_Write (1 -> -> 8 `i `ui ]
"119
[; ;sensors.c: 119:         I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"120
[; ;sensors.c: 120:     }
}
[e $U 292  ]
"121
[; ;sensors.c: 121:     else
[e :U 291 ]
"122
[; ;sensors.c: 122:     {
{
"123
[; ;sensors.c: 123:         return -1;
[e ) -U -> 1 `i ]
[e $UE 284  ]
"124
[; ;sensors.c: 124:     }
}
[e :U 292 ]
[e :U 290 ]
[e :U 288 ]
[e :U 286 ]
"127
[; ;sensors.c: 127:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"128
[; ;sensors.c: 128:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"130
[; ;sensors.c: 130:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 293  ]
[e $U 294  ]
[e :U 293 ]
"131
[; ;sensors.c: 131:     {
{
"132
[; ;sensors.c: 132:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"133
[; ;sensors.c: 133:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 293  ]
[e :U 294 ]
}
"134
[; ;sensors.c: 134:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"135
[; ;sensors.c: 135:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"137
[; ;sensors.c: 137:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 284  ]
"138
[; ;sensors.c: 138: }
[e :UE 284 ]
}
"140
[; ;sensors.c: 140: int readDigitalSensor(void)
[v _readDigitalSensor `(i ~T0 @X0 1 ef ]
"141
[; ;sensors.c: 141: {
{
[e :U _readDigitalSensor ]
[f ]
"142
[; ;sensors.c: 142:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"143
[; ;sensors.c: 143:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"147
[; ;sensors.c: 147:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"148
[; ;sensors.c: 148:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"149
[; ;sensors.c: 149:     I2C_Master_Write(3);
[e ( _I2C_Master_Write (1 -> -> 3 `i `ui ]
"150
[; ;sensors.c: 150:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"153
[; ;sensors.c: 153:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"154
[; ;sensors.c: 154:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"156
[; ;sensors.c: 156:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 297  ]
[e $U 298  ]
[e :U 297 ]
"157
[; ;sensors.c: 157:     {
{
"158
[; ;sensors.c: 158:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"159
[; ;sensors.c: 159:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 297  ]
[e :U 298 ]
}
"160
[; ;sensors.c: 160:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"161
[; ;sensors.c: 161:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"163
[; ;sensors.c: 163:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 296  ]
"164
[; ;sensors.c: 164: }
[e :UE 296 ]
}
"166
[; ;sensors.c: 166: int readHallEffect(void)
[v _readHallEffect `(i ~T0 @X0 1 ef ]
"167
[; ;sensors.c: 167: {
{
[e :U _readHallEffect ]
[f ]
"168
[; ;sensors.c: 168:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"169
[; ;sensors.c: 169:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"173
[; ;sensors.c: 173:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"174
[; ;sensors.c: 174:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"175
[; ;sensors.c: 175:     I2C_Master_Write(4);
[e ( _I2C_Master_Write (1 -> -> 4 `i `ui ]
"176
[; ;sensors.c: 176:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"179
[; ;sensors.c: 179:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"180
[; ;sensors.c: 180:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"182
[; ;sensors.c: 182:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 301  ]
[e $U 302  ]
[e :U 301 ]
"183
[; ;sensors.c: 183:     {
{
"184
[; ;sensors.c: 184:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"185
[; ;sensors.c: 185:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 301  ]
[e :U 302 ]
}
"186
[; ;sensors.c: 186:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"187
[; ;sensors.c: 187:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"189
[; ;sensors.c: 189:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 300  ]
"190
[; ;sensors.c: 190: }
[e :UE 300 ]
}
"193
[; ;sensors.c: 193: int readFrontSensor(void)
[v _readFrontSensor `(i ~T0 @X0 1 ef ]
"194
[; ;sensors.c: 194: {
{
[e :U _readFrontSensor ]
[f ]
"195
[; ;sensors.c: 195:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"196
[; ;sensors.c: 196:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"200
[; ;sensors.c: 200:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"201
[; ;sensors.c: 201:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"202
[; ;sensors.c: 202:     I2C_Master_Write(5);
[e ( _I2C_Master_Write (1 -> -> 5 `i `ui ]
"203
[; ;sensors.c: 203:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"206
[; ;sensors.c: 206:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"207
[; ;sensors.c: 207:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"209
[; ;sensors.c: 209:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 305  ]
[e $U 306  ]
[e :U 305 ]
"210
[; ;sensors.c: 210:     {
{
"211
[; ;sensors.c: 211:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"212
[; ;sensors.c: 212:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 305  ]
[e :U 306 ]
}
"213
[; ;sensors.c: 213:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"214
[; ;sensors.c: 214:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"216
[; ;sensors.c: 216:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 304  ]
"217
[; ;sensors.c: 217: }
[e :UE 304 ]
}
"219
[; ;sensors.c: 219: int readFrontSensor2(void)
[v _readFrontSensor2 `(i ~T0 @X0 1 ef ]
"220
[; ;sensors.c: 220: {
{
[e :U _readFrontSensor2 ]
[f ]
"221
[; ;sensors.c: 221:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"222
[; ;sensors.c: 222:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"226
[; ;sensors.c: 226:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"227
[; ;sensors.c: 227:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"228
[; ;sensors.c: 228:     I2C_Master_Write(10);
[e ( _I2C_Master_Write (1 -> -> 10 `i `ui ]
"229
[; ;sensors.c: 229:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"232
[; ;sensors.c: 232:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"233
[; ;sensors.c: 233:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"235
[; ;sensors.c: 235:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 309  ]
[e $U 310  ]
[e :U 309 ]
"236
[; ;sensors.c: 236:     {
{
"237
[; ;sensors.c: 237:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"238
[; ;sensors.c: 238:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 309  ]
[e :U 310 ]
}
"239
[; ;sensors.c: 239:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"240
[; ;sensors.c: 240:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"242
[; ;sensors.c: 242:     return (count[0])|(count[1]<<8);
[e ) -> | *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux << *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> 8 `i `i ]
[e $UE 308  ]
"243
[; ;sensors.c: 243: }
[e :UE 308 ]
}
"245
[; ;sensors.c: 245: void senseTest(void)
[v _senseTest `(v ~T0 @X0 1 ef ]
"246
[; ;sensors.c: 246: {
{
[e :U _senseTest ]
[f ]
"247
[; ;sensors.c: 247:     unsigned int count[2];
[v _count `ui ~T0 @X0 -> 2 `i a ]
"248
[; ;sensors.c: 248:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"252
[; ;sensors.c: 252:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"253
[; ;sensors.c: 253:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"254
[; ;sensors.c: 254:     I2C_Master_Write(0x1);
[e ( _I2C_Master_Write (1 -> -> 1 `i `ui ]
"255
[; ;sensors.c: 255:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"258
[; ;sensors.c: 258:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"259
[; ;sensors.c: 259:     I2C_Master_Write(0b00010001);
[e ( _I2C_Master_Write (1 -> -> 17 `i `ui ]
"261
[; ;sensors.c: 261:     for (unsigned char i = 0; i < 1; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 1 `i 313  ]
[e $U 314  ]
[e :U 313 ]
"262
[; ;sensors.c: 262:     {
{
"263
[; ;sensors.c: 263:         count[i] = I2C_Master_Read(0);
[e = *U + &U _count * -> _i `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 0 `i `uc `ui ]
"264
[; ;sensors.c: 264:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 1 `i 313  ]
[e :U 314 ]
}
"265
[; ;sensors.c: 265:     count[1] = I2C_Master_Read(1);
[e = *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux -> ( _I2C_Master_Read (1 -> -> 1 `i `uc `ui ]
"266
[; ;sensors.c: 266:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"268
[; ;sensors.c: 268:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"269
[; ;sensors.c: 269:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 1 `i `uc ]
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"270
[; ;sensors.c: 270:     printf("1: %d, 2: %d", count[0], count[1]);
[e ( _printf , , (. :s 1C *U + &U _count * -> -> -> 0 `i `ui `ux -> -> # *U &U _count `ui `ux *U + &U _count * -> -> -> 1 `i `ui `ux -> -> # *U &U _count `ui `ux ]
"271
[; ;sensors.c: 271: }
[e :UE 312 ]
}
"274
[; ;sensors.c: 274: float mapDist(int sensor)
[v _mapDist `(f ~T0 @X0 1 ef1`i ]
"275
[; ;sensors.c: 275: {
{
[e :U _mapDist ]
"274
[; ;sensors.c: 274: float mapDist(int sensor)
[v _sensor `i ~T0 @X0 1 r1 ]
"275
[; ;sensors.c: 275: {
[f ]
"276
[; ;sensors.c: 276:     int analogRead = distFromCanister(sensor);
[v _analogRead `i ~T0 @X0 1 a ]
[e = _analogRead ( _distFromCanister (1 _sensor ]
"277
[; ;sensors.c: 277:     float rval;
[v _rval `f ~T0 @X0 1 a ]
"278
[; ;sensors.c: 278:     if (sensor == 1)
[e $ ! == _sensor -> 1 `i 317  ]
"279
[; ;sensors.c: 279:     {
{
"280
[; ;sensors.c: 280:         rval = 0.0000514*(analogRead)*analogRead - 0.0104*analogRead + 6.33;
[e = _rval -> + - * * .0.0000514 -> _analogRead `d -> _analogRead `d * .0.0104 -> _analogRead `d .6.33 `f ]
"281
[; ;sensors.c: 281:     }
}
[e $U 318  ]
"282
[; ;sensors.c: 282:     else if (sensor == 2)
[e :U 317 ]
[e $ ! == _sensor -> 2 `i 319  ]
"283
[; ;sensors.c: 283:     {
{
"284
[; ;sensors.c: 284:         rval = 0.0000463*analogRead*analogRead - 0.0134*analogRead + 6.63;
[e = _rval -> + - * * .0.0000463 -> _analogRead `d -> _analogRead `d * .0.0134 -> _analogRead `d .6.63 `f ]
"285
[; ;sensors.c: 285:     }
}
[e :U 319 ]
[e :U 318 ]
"286
[; ;sensors.c: 286:     return rval;
[e ) _rval ]
[e $UE 316  ]
"287
[; ;sensors.c: 287: }
[e :UE 316 ]
}
"289
[; ;sensors.c: 289: float getDistance(void)
[v _getDistance `(f ~T0 @X0 1 ef ]
"290
[; ;sensors.c: 290: {
{
[e :U _getDistance ]
[f ]
"291
[; ;sensors.c: 291:     int count = shaftEncoderCount();
[v _count `i ~T0 @X0 1 a ]
[e = _count ( _shaftEncoderCount ..  ]
"292
[; ;sensors.c: 292:     return 1.409743*count;
[e ) -> * .1.409743 -> _count `d `f ]
[e $UE 320  ]
"293
[; ;sensors.c: 293: }
[e :UE 320 ]
}
"295
[; ;sensors.c: 295: float getDistance2(void)
[v _getDistance2 `(f ~T0 @X0 1 ef ]
"296
[; ;sensors.c: 296: {
{
[e :U _getDistance2 ]
[f ]
"297
[; ;sensors.c: 297:     int count = shaftEncoderCount2();
[v _count `i ~T0 @X0 1 a ]
[e = _count ( _shaftEncoderCount2 ..  ]
"298
[; ;sensors.c: 298:     return 1.65*count;
[e ) -> * .1.65 -> _count `d `f ]
[e $UE 321  ]
"299
[; ;sensors.c: 299: }
[e :UE 321 ]
}
"301
[; ;sensors.c: 301: void sendData(void)
[v _sendData `(v ~T0 @X0 1 ef ]
"302
[; ;sensors.c: 302: {
{
[e :U _sendData ]
[f ]
"303
[; ;sensors.c: 303:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"307
[; ;sensors.c: 307:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"308
[; ;sensors.c: 308:     I2C_Master_Write(0b00010000);
[e ( _I2C_Master_Write (1 -> -> 16 `i `ui ]
"309
[; ;sensors.c: 309:     I2C_Master_Write(12);
[e ( _I2C_Master_Write (1 -> -> 12 `i `ui ]
"310
[; ;sensors.c: 310:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"311
[; ;sensors.c: 311: }
[e :UE 322 ]
}
[p f _printf 8388736 ]
[a 1C 49 58 32 37 100 44 32 50 58 32 37 100 0 ]
